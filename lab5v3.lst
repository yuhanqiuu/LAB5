0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Mar 06 20:41:57 2024
0000              5   ;--------------------------------------------------------
                  5   $name lab5v3
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Get_ADC
0000             30            public _Volts_at_Pin
0000             31            public _ADC_at_Pin
0000             32            public _InitPinADC
0000             33            public _TIMER0_Init
0000             34            public _LCDprint
0000             35            public _LCD_4BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public _InitADC
0000             43            public __c51_external_startup
0000             44            public _LCDprint_PARM_3
0000             45            public _LCDprint_PARM_2
0000             46            public _overflow_count
0000             47   ;--------------------------------------------------------
0000             48   ; Special Function Registers
0000             49   ;--------------------------------------------------------
0000             50   _ACC            DATA 0xe0
0000             51   _ADC0ASAH       DATA 0xb6
0000             52   _ADC0ASAL       DATA 0xb5
0000             53   _ADC0ASCF       DATA 0xa1
0000             54   _ADC0ASCT       DATA 0xc7
0000             55   _ADC0CF0        DATA 0xbc
0000             56   _ADC0CF1        DATA 0xb9
0000             57   _ADC0CF2        DATA 0xdf
0000             58   _ADC0CN0        DATA 0xe8
0000             59   _ADC0CN1        DATA 0xb2
0000             60   _ADC0CN2        DATA 0xb3
0000             61   _ADC0GTH        DATA 0xc4
0000             62   _ADC0GTL        DATA 0xc3
0000             63   _ADC0H          DATA 0xbe
0000             64   _ADC0L          DATA 0xbd
0000             65   _ADC0LTH        DATA 0xc6
0000             66   _ADC0LTL        DATA 0xc5
0000             67   _ADC0MX         DATA 0xbb
0000             68   _B              DATA 0xf0
0000             69   _CKCON0         DATA 0x8e
0000             70   _CKCON1         DATA 0xa6
0000             71   _CLEN0          DATA 0xc6
0000             72   _CLIE0          DATA 0xc7
0000             73   _CLIF0          DATA 0xe8
0000             74   _CLKSEL         DATA 0xa9
0000             75   _CLOUT0         DATA 0xd1
0000             76   _CLU0CF         DATA 0xb1
0000             77   _CLU0FN         DATA 0xaf
0000             78   _CLU0MX         DATA 0x84
0000             79   _CLU1CF         DATA 0xb3
0000             80   _CLU1FN         DATA 0xb2
0000             81   _CLU1MX         DATA 0x85
0000             82   _CLU2CF         DATA 0xb6
0000             83   _CLU2FN         DATA 0xb5
0000             84   _CLU2MX         DATA 0x91
0000             85   _CLU3CF         DATA 0xbf
0000             86   _CLU3FN         DATA 0xbe
0000             87   _CLU3MX         DATA 0xae
0000             88   _CMP0CN0        DATA 0x9b
0000             89   _CMP0CN1        DATA 0x99
0000             90   _CMP0MD         DATA 0x9d
0000             91   _CMP0MX         DATA 0x9f
0000             92   _CMP1CN0        DATA 0xbf
0000             93   _CMP1CN1        DATA 0xac
0000             94   _CMP1MD         DATA 0xab
0000             95   _CMP1MX         DATA 0xaa
0000             96   _CRC0CN0        DATA 0xce
0000             97   _CRC0CN1        DATA 0x86
0000             98   _CRC0CNT        DATA 0xd3
0000             99   _CRC0DAT        DATA 0xcb
0000            100   _CRC0FLIP       DATA 0xcf
0000            101   _CRC0IN         DATA 0xca
0000            102   _CRC0ST         DATA 0xd2
0000            103   _DAC0CF0        DATA 0x91
0000            104   _DAC0CF1        DATA 0x92
0000            105   _DAC0H          DATA 0x85
0000            106   _DAC0L          DATA 0x84
0000            107   _DAC1CF0        DATA 0x93
0000            108   _DAC1CF1        DATA 0x94
0000            109   _DAC1H          DATA 0x8a
0000            110   _DAC1L          DATA 0x89
0000            111   _DAC2CF0        DATA 0x95
0000            112   _DAC2CF1        DATA 0x96
0000            113   _DAC2H          DATA 0x8c
0000            114   _DAC2L          DATA 0x8b
0000            115   _DAC3CF0        DATA 0x9a
0000            116   _DAC3CF1        DATA 0x9c
0000            117   _DAC3H          DATA 0x8e
0000            118   _DAC3L          DATA 0x8d
0000            119   _DACGCF0        DATA 0x88
0000            120   _DACGCF1        DATA 0x98
0000            121   _DACGCF2        DATA 0xa2
0000            122   _DERIVID        DATA 0xad
0000            123   _DEVICEID       DATA 0xb5
0000            124   _DPH            DATA 0x83
0000            125   _DPL            DATA 0x82
0000            126   _EIE1           DATA 0xe6
0000            127   _EIE2           DATA 0xf3
0000            128   _EIP1           DATA 0xbb
0000            129   _EIP1H          DATA 0xee
0000            130   _EIP2           DATA 0xed
0000            131   _EIP2H          DATA 0xf6
0000            132   _EMI0CN         DATA 0xe7
0000            133   _FLKEY          DATA 0xb7
0000            134   _HFO0CAL        DATA 0xc7
0000            135   _HFO1CAL        DATA 0xd6
0000            136   _HFOCN          DATA 0xef
0000            137   _I2C0ADM        DATA 0xff
0000            138   _I2C0CN0        DATA 0xba
0000            139   _I2C0DIN        DATA 0xbc
0000            140   _I2C0DOUT       DATA 0xbb
0000            141   _I2C0FCN0       DATA 0xad
0000            142   _I2C0FCN1       DATA 0xab
0000            143   _I2C0FCT        DATA 0xf5
0000            144   _I2C0SLAD       DATA 0xbd
0000            145   _I2C0STAT       DATA 0xb9
0000            146   _IE             DATA 0xa8
0000            147   _IP             DATA 0xb8
0000            148   _IPH            DATA 0xf2
0000            149   _IT01CF         DATA 0xe4
0000            150   _LFO0CN         DATA 0xb1
0000            151   _P0             DATA 0x80
0000            152   _P0MASK         DATA 0xfe
0000            153   _P0MAT          DATA 0xfd
0000            154   _P0MDIN         DATA 0xf1
0000            155   _P0MDOUT        DATA 0xa4
0000            156   _P0SKIP         DATA 0xd4
0000            157   _P1             DATA 0x90
0000            158   _P1MASK         DATA 0xee
0000            159   _P1MAT          DATA 0xed
0000            160   _P1MDIN         DATA 0xf2
0000            161   _P1MDOUT        DATA 0xa5
0000            162   _P1SKIP         DATA 0xd5
0000            163   _P2             DATA 0xa0
0000            164   _P2MASK         DATA 0xfc
0000            165   _P2MAT          DATA 0xfb
0000            166   _P2MDIN         DATA 0xf3
0000            167   _P2MDOUT        DATA 0xa6
0000            168   _P2SKIP         DATA 0xcc
0000            169   _P3             DATA 0xb0
0000            170   _P3MDIN         DATA 0xf4
0000            171   _P3MDOUT        DATA 0x9c
0000            172   _PCA0CENT       DATA 0x9e
0000            173   _PCA0CLR        DATA 0x9c
0000            174   _PCA0CN0        DATA 0xd8
0000            175   _PCA0CPH0       DATA 0xfc
0000            176   _PCA0CPH1       DATA 0xea
0000            177   _PCA0CPH2       DATA 0xec
0000            178   _PCA0CPH3       DATA 0xf5
0000            179   _PCA0CPH4       DATA 0x85
0000            180   _PCA0CPH5       DATA 0xde
0000            181   _PCA0CPL0       DATA 0xfb
0000            182   _PCA0CPL1       DATA 0xe9
0000            183   _PCA0CPL2       DATA 0xeb
0000            184   _PCA0CPL3       DATA 0xf4
0000            185   _PCA0CPL4       DATA 0x84
0000            186   _PCA0CPL5       DATA 0xdd
0000            187   _PCA0CPM0       DATA 0xda
0000            188   _PCA0CPM1       DATA 0xdb
0000            189   _PCA0CPM2       DATA 0xdc
0000            190   _PCA0CPM3       DATA 0xae
0000            191   _PCA0CPM4       DATA 0xaf
0000            192   _PCA0CPM5       DATA 0xcc
0000            193   _PCA0H          DATA 0xfa
0000            194   _PCA0L          DATA 0xf9
0000            195   _PCA0MD         DATA 0xd9
0000            196   _PCA0POL        DATA 0x96
0000            197   _PCA0PWM        DATA 0xf7
0000            198   _PCON0          DATA 0x87
0000            199   _PCON1          DATA 0xcd
0000            200   _PFE0CN         DATA 0xc1
0000            201   _PRTDRV         DATA 0xf6
0000            202   _PSCTL          DATA 0x8f
0000            203   _PSTAT0         DATA 0xaa
0000            204   _PSW            DATA 0xd0
0000            205   _REF0CN         DATA 0xd1
0000            206   _REG0CN         DATA 0xc9
0000            207   _REVID          DATA 0xb6
0000            208   _RSTSRC         DATA 0xef
0000            209   _SBCON1         DATA 0x94
0000            210   _SBRLH1         DATA 0x96
0000            211   _SBRLL1         DATA 0x95
0000            212   _SBUF           DATA 0x99
0000            213   _SBUF0          DATA 0x99
0000            214   _SBUF1          DATA 0x92
0000            215   _SCON           DATA 0x98
0000            216   _SCON0          DATA 0x98
0000            217   _SCON1          DATA 0xc8
0000            218   _SFRPAGE        DATA 0xa7
0000            219   _SFRPGCN        DATA 0xbc
0000            220   _SFRSTACK       DATA 0xd7
0000            221   _SMB0ADM        DATA 0xd6
0000            222   _SMB0ADR        DATA 0xd7
0000            223   _SMB0CF         DATA 0xc1
0000            224   _SMB0CN0        DATA 0xc0
0000            225   _SMB0DAT        DATA 0xc2
0000            226   _SMB0FCN0       DATA 0xc3
0000            227   _SMB0FCN1       DATA 0xc4
0000            228   _SMB0FCT        DATA 0xef
0000            229   _SMB0RXLN       DATA 0xc5
0000            230   _SMB0TC         DATA 0xac
0000            231   _SMOD1          DATA 0x93
0000            232   _SP             DATA 0x81
0000            233   _SPI0CFG        DATA 0xa1
0000            234   _SPI0CKR        DATA 0xa2
0000            235   _SPI0CN0        DATA 0xf8
0000            236   _SPI0DAT        DATA 0xa3
0000            237   _SPI0FCN0       DATA 0x9a
0000            238   _SPI0FCN1       DATA 0x9b
0000            239   _SPI0FCT        DATA 0xf7
0000            240   _SPI0PCF        DATA 0xdf
0000            241   _TCON           DATA 0x88
0000            242   _TH0            DATA 0x8c
0000            243   _TH1            DATA 0x8d
0000            244   _TL0            DATA 0x8a
0000            245   _TL1            DATA 0x8b
0000            246   _TMOD           DATA 0x89
0000            247   _TMR2CN0        DATA 0xc8
0000            248   _TMR2CN1        DATA 0xfd
0000            249   _TMR2H          DATA 0xcf
0000            250   _TMR2L          DATA 0xce
0000            251   _TMR2RLH        DATA 0xcb
0000            252   _TMR2RLL        DATA 0xca
0000            253   _TMR3CN0        DATA 0x91
0000            254   _TMR3CN1        DATA 0xfe
0000            255   _TMR3H          DATA 0x95
0000            256   _TMR3L          DATA 0x94
0000            257   _TMR3RLH        DATA 0x93
0000            258   _TMR3RLL        DATA 0x92
0000            259   _TMR4CN0        DATA 0x98
0000            260   _TMR4CN1        DATA 0xff
0000            261   _TMR4H          DATA 0xa5
0000            262   _TMR4L          DATA 0xa4
0000            263   _TMR4RLH        DATA 0xa3
0000            264   _TMR4RLL        DATA 0xa2
0000            265   _TMR5CN0        DATA 0xc0
0000            266   _TMR5CN1        DATA 0xf1
0000            267   _TMR5H          DATA 0xd5
0000            268   _TMR5L          DATA 0xd4
0000            269   _TMR5RLH        DATA 0xd3
0000            270   _TMR5RLL        DATA 0xd2
0000            271   _UART0PCF       DATA 0xd9
0000            272   _UART1FCN0      DATA 0x9d
0000            273   _UART1FCN1      DATA 0xd8
0000            274   _UART1FCT       DATA 0xfa
0000            275   _UART1LIN       DATA 0x9e
0000            276   _UART1PCF       DATA 0xda
0000            277   _VDM0CN         DATA 0xff
0000            278   _WDTCN          DATA 0x97
0000            279   _XBR0           DATA 0xe1
0000            280   _XBR1           DATA 0xe2
0000            281   _XBR2           DATA 0xe3
0000            282   _XOSC0CN        DATA 0x86
0000            283   _DPTR           DATA 0x8382
0000            284   _TMR2RL         DATA 0xcbca
0000            285   _TMR3RL         DATA 0x9392
0000            286   _TMR4RL         DATA 0xa3a2
0000            287   _TMR5RL         DATA 0xd3d2
0000            288   _TMR0           DATA 0x8c8a
0000            289   _TMR1           DATA 0x8d8b
0000            290   _TMR2           DATA 0xcfce
0000            291   _TMR3           DATA 0x9594
0000            292   _TMR4           DATA 0xa5a4
0000            293   _TMR5           DATA 0xd5d4
0000            294   _SBRL1          DATA 0x9695
0000            295   _PCA0           DATA 0xfaf9
0000            296   _PCA0CP0        DATA 0xfcfb
0000            297   _PCA0CP1        DATA 0xeae9
0000            298   _PCA0CP2        DATA 0xeceb
0000            299   _PCA0CP3        DATA 0xf5f4
0000            300   _PCA0CP4        DATA 0x8584
0000            301   _PCA0CP5        DATA 0xdedd
0000            302   _ADC0ASA        DATA 0xb6b5
0000            303   _ADC0GT         DATA 0xc4c3
0000            304   _ADC0           DATA 0xbebd
0000            305   _ADC0LT         DATA 0xc6c5
0000            306   _DAC0           DATA 0x8584
0000            307   _DAC1           DATA 0x8a89
0000            308   _DAC2           DATA 0x8c8b
0000            309   _DAC3           DATA 0x8e8d
0000            310   ;--------------------------------------------------------
0000            311   ; special function bits
0000            312   ;--------------------------------------------------------
0000            313   _ACC_0          BIT 0xe0
0000            314   _ACC_1          BIT 0xe1
0000            315   _ACC_2          BIT 0xe2
0000            316   _ACC_3          BIT 0xe3
0000            317   _ACC_4          BIT 0xe4
0000            318   _ACC_5          BIT 0xe5
0000            319   _ACC_6          BIT 0xe6
0000            320   _ACC_7          BIT 0xe7
0000            321   _TEMPE          BIT 0xe8
0000            322   _ADGN0          BIT 0xe9
0000            323   _ADGN1          BIT 0xea
0000            324   _ADWINT         BIT 0xeb
0000            325   _ADBUSY         BIT 0xec
0000            326   _ADINT          BIT 0xed
0000            327   _IPOEN          BIT 0xee
0000            328   _ADEN           BIT 0xef
0000            329   _B_0            BIT 0xf0
0000            330   _B_1            BIT 0xf1
0000            331   _B_2            BIT 0xf2
0000            332   _B_3            BIT 0xf3
0000            333   _B_4            BIT 0xf4
0000            334   _B_5            BIT 0xf5
0000            335   _B_6            BIT 0xf6
0000            336   _B_7            BIT 0xf7
0000            337   _C0FIF          BIT 0xe8
0000            338   _C0RIF          BIT 0xe9
0000            339   _C1FIF          BIT 0xea
0000            340   _C1RIF          BIT 0xeb
0000            341   _C2FIF          BIT 0xec
0000            342   _C2RIF          BIT 0xed
0000            343   _C3FIF          BIT 0xee
0000            344   _C3RIF          BIT 0xef
0000            345   _D1SRC0         BIT 0x88
0000            346   _D1SRC1         BIT 0x89
0000            347   _D1AMEN         BIT 0x8a
0000            348   _D01REFSL       BIT 0x8b
0000            349   _D3SRC0         BIT 0x8c
0000            350   _D3SRC1         BIT 0x8d
0000            351   _D3AMEN         BIT 0x8e
0000            352   _D23REFSL       BIT 0x8f
0000            353   _D0UDIS         BIT 0x98
0000            354   _D1UDIS         BIT 0x99
0000            355   _D2UDIS         BIT 0x9a
0000            356   _D3UDIS         BIT 0x9b
0000            357   _EX0            BIT 0xa8
0000            358   _ET0            BIT 0xa9
0000            359   _EX1            BIT 0xaa
0000            360   _ET1            BIT 0xab
0000            361   _ES0            BIT 0xac
0000            362   _ET2            BIT 0xad
0000            363   _ESPI0          BIT 0xae
0000            364   _EA             BIT 0xaf
0000            365   _PX0            BIT 0xb8
0000            366   _PT0            BIT 0xb9
0000            367   _PX1            BIT 0xba
0000            368   _PT1            BIT 0xbb
0000            369   _PS0            BIT 0xbc
0000            370   _PT2            BIT 0xbd
0000            371   _PSPI0          BIT 0xbe
0000            372   _P0_0           BIT 0x80
0000            373   _P0_1           BIT 0x81
0000            374   _P0_2           BIT 0x82
0000            375   _P0_3           BIT 0x83
0000            376   _P0_4           BIT 0x84
0000            377   _P0_5           BIT 0x85
0000            378   _P0_6           BIT 0x86
0000            379   _P0_7           BIT 0x87
0000            380   _P1_0           BIT 0x90
0000            381   _P1_1           BIT 0x91
0000            382   _P1_2           BIT 0x92
0000            383   _P1_3           BIT 0x93
0000            384   _P1_4           BIT 0x94
0000            385   _P1_5           BIT 0x95
0000            386   _P1_6           BIT 0x96
0000            387   _P1_7           BIT 0x97
0000            388   _P2_0           BIT 0xa0
0000            389   _P2_1           BIT 0xa1
0000            390   _P2_2           BIT 0xa2
0000            391   _P2_3           BIT 0xa3
0000            392   _P2_4           BIT 0xa4
0000            393   _P2_5           BIT 0xa5
0000            394   _P2_6           BIT 0xa6
0000            395   _P3_0           BIT 0xb0
0000            396   _P3_1           BIT 0xb1
0000            397   _P3_2           BIT 0xb2
0000            398   _P3_3           BIT 0xb3
0000            399   _P3_4           BIT 0xb4
0000            400   _P3_7           BIT 0xb7
0000            401   _CCF0           BIT 0xd8
0000            402   _CCF1           BIT 0xd9
0000            403   _CCF2           BIT 0xda
0000            404   _CCF3           BIT 0xdb
0000            405   _CCF4           BIT 0xdc
0000            406   _CCF5           BIT 0xdd
0000            407   _CR             BIT 0xde
0000            408   _CF             BIT 0xdf
0000            409   _PARITY         BIT 0xd0
0000            410   _F1             BIT 0xd1
0000            411   _OV             BIT 0xd2
0000            412   _RS0            BIT 0xd3
0000            413   _RS1            BIT 0xd4
0000            414   _F0             BIT 0xd5
0000            415   _AC             BIT 0xd6
0000            416   _CY             BIT 0xd7
0000            417   _RI             BIT 0x98
0000            418   _TI             BIT 0x99
0000            419   _RB8            BIT 0x9a
0000            420   _TB8            BIT 0x9b
0000            421   _REN            BIT 0x9c
0000            422   _CE             BIT 0x9d
0000            423   _SMODE          BIT 0x9e
0000            424   _RI1            BIT 0xc8
0000            425   _TI1            BIT 0xc9
0000            426   _RBX1           BIT 0xca
0000            427   _TBX1           BIT 0xcb
0000            428   _REN1           BIT 0xcc
0000            429   _PERR1          BIT 0xcd
0000            430   _OVR1           BIT 0xce
0000            431   _SI             BIT 0xc0
0000            432   _ACK            BIT 0xc1
0000            433   _ARBLOST        BIT 0xc2
0000            434   _ACKRQ          BIT 0xc3
0000            435   _STO            BIT 0xc4
0000            436   _STA            BIT 0xc5
0000            437   _TXMODE         BIT 0xc6
0000            438   _MASTER         BIT 0xc7
0000            439   _SPIEN          BIT 0xf8
0000            440   _TXNF           BIT 0xf9
0000            441   _NSSMD0         BIT 0xfa
0000            442   _NSSMD1         BIT 0xfb
0000            443   _RXOVRN         BIT 0xfc
0000            444   _MODF           BIT 0xfd
0000            445   _WCOL           BIT 0xfe
0000            446   _SPIF           BIT 0xff
0000            447   _IT0            BIT 0x88
0000            448   _IE0            BIT 0x89
0000            449   _IT1            BIT 0x8a
0000            450   _IE1            BIT 0x8b
0000            451   _TR0            BIT 0x8c
0000            452   _TF0            BIT 0x8d
0000            453   _TR1            BIT 0x8e
0000            454   _TF1            BIT 0x8f
0000            455   _T2XCLK0        BIT 0xc8
0000            456   _T2XCLK1        BIT 0xc9
0000            457   _TR2            BIT 0xca
0000            458   _T2SPLIT        BIT 0xcb
0000            459   _TF2CEN         BIT 0xcc
0000            460   _TF2LEN         BIT 0xcd
0000            461   _TF2L           BIT 0xce
0000            462   _TF2H           BIT 0xcf
0000            463   _T4XCLK0        BIT 0x98
0000            464   _T4XCLK1        BIT 0x99
0000            465   _TR4            BIT 0x9a
0000            466   _T4SPLIT        BIT 0x9b
0000            467   _TF4CEN         BIT 0x9c
0000            468   _TF4LEN         BIT 0x9d
0000            469   _TF4L           BIT 0x9e
0000            470   _TF4H           BIT 0x9f
0000            471   _T5XCLK0        BIT 0xc0
0000            472   _T5XCLK1        BIT 0xc1
0000            473   _TR5            BIT 0xc2
0000            474   _T5SPLIT        BIT 0xc3
0000            475   _TF5CEN         BIT 0xc4
0000            476   _TF5LEN         BIT 0xc5
0000            477   _TF5L           BIT 0xc6
0000            478   _TF5H           BIT 0xc7
0000            479   _RIE            BIT 0xd8
0000            480   _RXTO0          BIT 0xd9
0000            481   _RXTO1          BIT 0xda
0000            482   _RFRQ           BIT 0xdb
0000            483   _TIE            BIT 0xdc
0000            484   _TXHOLD         BIT 0xdd
0000            485   _TXNF1          BIT 0xde
0000            486   _TFRQ           BIT 0xdf
0000            487   ;--------------------------------------------------------
0000            488   ; overlayable register banks
0000            489   ;--------------------------------------------------------
0000            490            rbank0 segment data overlay
0000            491   ;--------------------------------------------------------
0000            492   ; internal ram data
0000            493   ;--------------------------------------------------------
0000            494            rseg R_DSEG
0000            495   _overflow_count:
0000            496            ds 1
0001            497   _LCDprint_PARM_2:
0001            498            ds 1
0002            499   _main_mst_1_97:
0002            500            ds 4
0006            501   _main_i_1_97:
0006            502            ds 2
0008            503   _main_vmax1_1_97:
0008            504            ds 4
000C            505   _main_vmax2_1_97:
000C            506            ds 4
0010            507   _main_degrees_1_97:
0010            508            ds 4
0014            509   _main_p_n_1_97:
0014            510            ds 4
0018            511   _main_sloc0_1_0:
0018            512            ds 4
001C            513   ;--------------------------------------------------------
001C            514   ; overlayable items in internal ram 
001C            515   ;--------------------------------------------------------
0000            516            rseg    R_OSEG
0000            517            rseg    R_OSEG
0000            518   _InitPinADC_PARM_2:
0000            519            ds 1
0001            520            rseg    R_OSEG
0001            521   ;--------------------------------------------------------
0001            522   ; indirectly addressable internal ram data
0001            523   ;--------------------------------------------------------
0000            524            rseg R_ISEG
0000            525   _main_v_1_97:
0000            526            ds 8
0008            527   _main_buff1_1_97:
0008            528            ds 17
0019            529   _main_buff2_1_97:
0019            530            ds 17
002A            531   _main_buff3_1_97:
002A            532            ds 17
003B            533   _main_buff4_1_97:
003B            534            ds 17
004C            535   ;--------------------------------------------------------
004C            536   ; absolute internal ram data
004C            537   ;--------------------------------------------------------
0000            538            DSEG
0000            539   ;--------------------------------------------------------
0000            540   ; bit data
0000            541   ;--------------------------------------------------------
0000            542            rseg R_BSEG
0000            543   _LCDprint_PARM_3:
0000            544            DBIT    1
0001            545   ;--------------------------------------------------------
0001            546   ; paged external ram data
0001            547   ;--------------------------------------------------------
0000            548            rseg R_PSEG
0000            549   ;--------------------------------------------------------
0000            550   ; external ram data
0000            551   ;--------------------------------------------------------
0000            552            rseg R_XSEG
0000            553   ;--------------------------------------------------------
0000            554   ; absolute external ram data
0000            555   ;--------------------------------------------------------
0000            556            XSEG
0000            557   ;--------------------------------------------------------
0000            558   ; external initialized ram data
0000            559   ;--------------------------------------------------------
0000            560            rseg R_IXSEG
0000            561            rseg R_HOME
0000            562            rseg R_GSINIT
0000            563            rseg R_CSEG
0000            564   ;--------------------------------------------------------
0000            565   ; Reset entry point and interrupt vectors
0000            566   ;--------------------------------------------------------
0000            567            CSEG at 0x0000
0000 020000     568            ljmp    _crt0
0003            569   ;--------------------------------------------------------
0003            570   ; global & static initialisations
0003            571   ;--------------------------------------------------------
0000            572            rseg R_HOME
0000            573            rseg R_GSINIT
0000            574            rseg R_GSINIT
0000            575   ;--------------------------------------------------------
0000            576   ; data variables initialization
0000            577   ;--------------------------------------------------------
0000            578            rseg R_DINIT
0000            579            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            580   ;--------------------------------------------------------
0000            581   ; code
0000            582   ;--------------------------------------------------------
0000            583            rseg R_CSEG
0000            584   ;------------------------------------------------------------
0000            585   ;Allocation info for local variables in function '_c51_external_startup'
0000            586   ;------------------------------------------------------------
0000            587   ;------------------------------------------------------------
0000            588   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:29: char _c51_external_startup (void)
0000            589   ;        -----------------------------------------
0000            590   ;         function _c51_external_startup
0000            591   ;        -----------------------------------------
0000            592   __c51_external_startup:
0000            593            using   0
0000            594   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:32: SFRPAGE = 0x00;
0000 75A700     595            mov     _SFRPAGE,#0x00
0003            596   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:33: WDTCN = 0xDE; //First key
0003 7597DE     597            mov     _WDTCN,#0xDE
0006            598   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:34: WDTCN = 0xAD; //Second key
0006 7597AD     599            mov     _WDTCN,#0xAD
0009            600   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:36: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     601            mov     _VDM0CN,#0x80
000C            602   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:37: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     603            mov     _RSTSRC,#0x06
000F            604   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:44: SFRPAGE = 0x10;
000F 75A710     605            mov     _SFRPAGE,#0x10
0012            606   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:45: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     607            mov     _PFE0CN,#0x20
0015            608   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:46: SFRPAGE = 0x00;
0015 75A700     609            mov     _SFRPAGE,#0x00
0018            610   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:67: CLKSEL = 0x00;
0018 75A900     611            mov     _CLKSEL,#0x00
001B            612   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:68: CLKSEL = 0x00;
001B 75A900     613            mov     _CLKSEL,#0x00
001E            614   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:69: while ((CLKSEL & 0x80) == 0);
001E            615   L002001?:
001E E5A9       616            mov     a,_CLKSEL
0020 30E7F0     617            jnb     acc.7,L002001?
0023            618   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:70: CLKSEL = 0x03;
0023 75A903     619            mov     _CLKSEL,#0x03
0026            620   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:71: CLKSEL = 0x03;
0026 75A903     621            mov     _CLKSEL,#0x03
0029            622   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:72: while ((CLKSEL & 0x80) == 0);
0029            623   L002004?:
0029 E5A9       624            mov     a,_CLKSEL
002B 30E770     625            jnb     acc.7,L002004?
002E            626   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:77: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     627            orl     _P0MDOUT,#0x10
0031            628   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:78: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     629            mov     _XBR0,#0x01
0034            630   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:79: XBR1     = 0X00;
0034 75E200     631            mov     _XBR1,#0x00
0037            632   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:80: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     633            mov     _XBR2,#0x40
003A            634   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:86: SCON0 = 0x10;
003A 759810     635            mov     _SCON0,#0x10
003D            636   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:87: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     637            mov     _CKCON0,_CKCON0
0040            638   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:89: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     639            mov     _TH1,#0xE6
0043            640   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:90: TL1 = TH1;      // Init Timer1
0043 858D8B     641            mov     _TL1,_TH1
0046            642   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:91: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     643            anl     _TMOD,#0x0F
0049            644   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:92: TMOD |=  0x20;                       
0049 438920     645            orl     _TMOD,#0x20
004C            646   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:93: TR1 = 1; // START Timer1
004C D28E       647            setb    _TR1
004E            648   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:94: TI = 1;  // Indicate TX0 ready
004E D299       649            setb    _TI
0050            650   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:96: return 0;
0050 758200     651            mov     dpl,#0x00
0053 22         652            ret
0054            653   ;------------------------------------------------------------
0054            654   ;Allocation info for local variables in function 'InitADC'
0054            655   ;------------------------------------------------------------
0054            656   ;------------------------------------------------------------
0054            657   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:99: void InitADC (void)
0054            658   ;        -----------------------------------------
0054            659   ;         function InitADC
0054            660   ;        -----------------------------------------
0054            661   _InitADC:
0054            662   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:101: SFRPAGE = 0x00;
0054 75A700     663            mov     _SFRPAGE,#0x00
0057            664   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:102: ADEN=0; // Disable ADC
0057 C2EF       665            clr     _ADEN
0059            666   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:107: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0059 75B280     667            mov     _ADC0CN1,#0x80
005C            668   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:111: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
005C 75BC20     669            mov     _ADC0CF0,#0x20
005F            670   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:115: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005F 75B91E     671            mov     _ADC0CF1,#0x1E
0062            672   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:124: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
0062 75E800     673            mov     _ADC0CN0,#0x00
0065            674   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:129: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0065 75DF3F     675            mov     _ADC0CF2,#0x3F
0068            676   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:133: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0068 75B300     677            mov     _ADC0CN2,#0x00
006B            678   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:135: ADEN=1; // Enable ADC
006B D2EF       679            setb    _ADEN
006D 22         680            ret
006E            681   ;------------------------------------------------------------
006E            682   ;Allocation info for local variables in function 'Timer3us'
006E            683   ;------------------------------------------------------------
006E            684   ;us                        Allocated to registers r2 
006E            685   ;i                         Allocated to registers r3 
006E            686   ;------------------------------------------------------------
006E            687   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:139: void Timer3us(unsigned char us)
006E            688   ;        -----------------------------------------
006E            689   ;         function Timer3us
006E            690   ;        -----------------------------------------
006E            691   _Timer3us:
006E AA82       692            mov     r2,dpl
0070            693   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:144: CKCON0|=0b_0100_0000;
0070 438E40     694            orl     _CKCON0,#0x40
0073            695   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:146: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0073 7592B8     696            mov     _TMR3RL,#0xB8
0076 7593FF     697            mov     (_TMR3RL >> 8),#0xFF
0079            698   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:147: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0079 859294     699            mov     _TMR3,_TMR3RL
007C 859395     700            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007F            701   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:149: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007F 759104     702            mov     _TMR3CN0,#0x04
0082            703   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:150: for (i = 0; i < us; i++)       // Count <us> overflows
0082 7B00       704            mov     r3,#0x00
0084            705   L004004?:
0084 C3         706            clr     c
0085 EB         707            mov     a,r3
0086 9A         708            subb    a,r2
0087 5000       709            jnc     L004007?
0089            710   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:152: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0089            711   L004001?:
0089 E591       712            mov     a,_TMR3CN0
008B 30E770     713            jnb     acc.7,L004001?
008E            714   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:153: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008E 53917F     715            anl     _TMR3CN0,#0x7F
0091            716   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:150: for (i = 0; i < us; i++)       // Count <us> overflows
0091 0B         717            inc     r3
0092 8000       718            sjmp    L004004?
0094            719   L004007?:
0094            720   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:155: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0094 759100     721            mov     _TMR3CN0,#0x00
0097 22         722            ret
0098            723   ;------------------------------------------------------------
0098            724   ;Allocation info for local variables in function 'waitms'
0098            725   ;------------------------------------------------------------
0098            726   ;ms                        Allocated to registers r2 r3 
0098            727   ;j                         Allocated to registers r4 r5 
0098            728   ;k                         Allocated to registers r6 
0098            729   ;------------------------------------------------------------
0098            730   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:158: void waitms (unsigned int ms)
0098            731   ;        -----------------------------------------
0098            732   ;         function waitms
0098            733   ;        -----------------------------------------
0098            734   _waitms:
0098 AA82       735            mov     r2,dpl
009A AB83       736            mov     r3,dph
009C            737   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:162: for(j=0; j<ms; j++)
009C 7C00       738            mov     r4,#0x00
009E 7D00       739            mov     r5,#0x00
00A0            740   L005005?:
00A0 C3         741            clr     c
00A1 EC         742            mov     a,r4
00A2 9A         743            subb    a,r2
00A3 ED         744            mov     a,r5
00A4 9B         745            subb    a,r3
00A5 5000       746            jnc     L005009?
00A7            747   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:163: for (k=0; k<4; k++) Timer3us(250);
00A7 7E00       748            mov     r6,#0x00
00A9            749   L005001?:
00A9 BE04B0     750            cjne    r6,#0x04,L005018?
00AC            751   L005018?:
00AC 5000       752            jnc     L005007?
00AE 7582FA     753            mov     dpl,#0xFA
00B1 C002       754            push    ar2
00B3 C003       755            push    ar3
00B5 C004       756            push    ar4
00B7 C005       757            push    ar5
00B9 C006       758            push    ar6
00BB 120000     759            lcall   _Timer3us
00BE D006       760            pop     ar6
00C0 D005       761            pop     ar5
00C2 D004       762            pop     ar4
00C4 D003       763            pop     ar3
00C6 D002       764            pop     ar2
00C8 0E         765            inc     r6
00C9 8000       766            sjmp    L005001?
00CB            767   L005007?:
00CB            768   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:162: for(j=0; j<ms; j++)
00CB 0C         769            inc     r4
00CC BC00F0     770            cjne    r4,#0x00,L005005?
00CF 0D         771            inc     r5
00D0 8000       772            sjmp    L005005?
00D2            773   L005009?:
00D2 22         774            ret
00D3            775   ;------------------------------------------------------------
00D3            776   ;Allocation info for local variables in function 'LCD_pulse'
00D3            777   ;------------------------------------------------------------
00D3            778   ;------------------------------------------------------------
00D3            779   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:166: void LCD_pulse (void)
00D3            780   ;        -----------------------------------------
00D3            781   ;         function LCD_pulse
00D3            782   ;        -----------------------------------------
00D3            783   _LCD_pulse:
00D3            784   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:168: LCD_E=1;
00D3 D2A0       785            setb    _P2_0
00D5            786   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:169: Timer3us(40);
00D5 758228     787            mov     dpl,#0x28
00D8 120000     788            lcall   _Timer3us
00DB            789   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:170: LCD_E=0;
00DB C2A0       790            clr     _P2_0
00DD 22         791            ret
00DE            792   ;------------------------------------------------------------
00DE            793   ;Allocation info for local variables in function 'LCD_byte'
00DE            794   ;------------------------------------------------------------
00DE            795   ;x                         Allocated to registers r2 
00DE            796   ;------------------------------------------------------------
00DE            797   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:173: void LCD_byte (unsigned char x)
00DE            798   ;        -----------------------------------------
00DE            799   ;         function LCD_byte
00DE            800   ;        -----------------------------------------
00DE            801   _LCD_byte:
00DE AA82       802            mov     r2,dpl
00E0            803   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:176: ACC=x; //Send high nible
00E0 8AE0       804            mov     _ACC,r2
00E2            805   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:177: LCD_D7=ACC_7;
00E2 A2E7       806            mov     c,_ACC_7
00E4 9290       807            mov     _P1_0,c
00E6            808   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:178: LCD_D6=ACC_6;
00E6 A2E6       809            mov     c,_ACC_6
00E8 9291       810            mov     _P1_1,c
00EA            811   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:179: LCD_D5=ACC_5;
00EA A2E5       812            mov     c,_ACC_5
00EC 9292       813            mov     _P1_2,c
00EE            814   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:180: LCD_D4=ACC_4;
00EE A2E4       815            mov     c,_ACC_4
00F0 9293       816            mov     _P1_3,c
00F2            817   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:181: LCD_pulse();
00F2 C002       818            push    ar2
00F4 120000     819            lcall   _LCD_pulse
00F7            820   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:182: Timer3us(40);
00F7 758228     821            mov     dpl,#0x28
00FA 120000     822            lcall   _Timer3us
00FD D002       823            pop     ar2
00FF            824   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:183: ACC=x; //Send low nible
00FF 8AE0       825            mov     _ACC,r2
0101            826   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:184: LCD_D7=ACC_3;
0101 A2E3       827            mov     c,_ACC_3
0103 9290       828            mov     _P1_0,c
0105            829   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:185: LCD_D6=ACC_2;
0105 A2E2       830            mov     c,_ACC_2
0107 9291       831            mov     _P1_1,c
0109            832   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:186: LCD_D5=ACC_1;
0109 A2E1       833            mov     c,_ACC_1
010B 9292       834            mov     _P1_2,c
010D            835   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:187: LCD_D4=ACC_0;
010D A2E0       836            mov     c,_ACC_0
010F 9293       837            mov     _P1_3,c
0111            838   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:188: LCD_pulse();
0111 020000     839            ljmp    _LCD_pulse
0114            840   ;------------------------------------------------------------
0114            841   ;Allocation info for local variables in function 'WriteData'
0114            842   ;------------------------------------------------------------
0114            843   ;x                         Allocated to registers r2 
0114            844   ;------------------------------------------------------------
0114            845   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:191: void WriteData (unsigned char x)
0114            846   ;        -----------------------------------------
0114            847   ;         function WriteData
0114            848   ;        -----------------------------------------
0114            849   _WriteData:
0114 AA82       850            mov     r2,dpl
0116            851   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:193: LCD_RS=1;
0116 D297       852            setb    _P1_7
0118            853   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:194: LCD_byte(x);
0118 8A82       854            mov     dpl,r2
011A 120000     855            lcall   _LCD_byte
011D            856   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:195: waitms(2);
011D 900002     857            mov     dptr,#0x0002
0120 020000     858            ljmp    _waitms
0123            859   ;------------------------------------------------------------
0123            860   ;Allocation info for local variables in function 'WriteCommand'
0123            861   ;------------------------------------------------------------
0123            862   ;x                         Allocated to registers r2 
0123            863   ;------------------------------------------------------------
0123            864   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:198: void WriteCommand (unsigned char x)
0123            865   ;        -----------------------------------------
0123            866   ;         function WriteCommand
0123            867   ;        -----------------------------------------
0123            868   _WriteCommand:
0123 AA82       869            mov     r2,dpl
0125            870   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:200: LCD_RS=0;
0125 C297       871            clr     _P1_7
0127            872   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:201: LCD_byte(x);
0127 8A82       873            mov     dpl,r2
0129 120000     874            lcall   _LCD_byte
012C            875   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:202: waitms(5);
012C 900005     876            mov     dptr,#0x0005
012F 020000     877            ljmp    _waitms
0132            878   ;------------------------------------------------------------
0132            879   ;Allocation info for local variables in function 'LCD_4BIT'
0132            880   ;------------------------------------------------------------
0132            881   ;------------------------------------------------------------
0132            882   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:205: void LCD_4BIT (void)
0132            883   ;        -----------------------------------------
0132            884   ;         function LCD_4BIT
0132            885   ;        -----------------------------------------
0132            886   _LCD_4BIT:
0132            887   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:207: LCD_E=0; // Resting state of LCD's enable is zero
0132 C2A0       888            clr     _P2_0
0134            889   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:209: waitms(20);
0134 900014     890            mov     dptr,#0x0014
0137 120000     891            lcall   _waitms
013A            892   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:211: WriteCommand(0x33);
013A 758233     893            mov     dpl,#0x33
013D 120000     894            lcall   _WriteCommand
0140            895   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:212: WriteCommand(0x33);
0140 758233     896            mov     dpl,#0x33
0143 120000     897            lcall   _WriteCommand
0146            898   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:213: WriteCommand(0x32); // Change to 4-bit mode
0146 758232     899            mov     dpl,#0x32
0149 120000     900            lcall   _WriteCommand
014C            901   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:216: WriteCommand(0x28);
014C 758228     902            mov     dpl,#0x28
014F 120000     903            lcall   _WriteCommand
0152            904   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:217: WriteCommand(0x0c);
0152 75820C     905            mov     dpl,#0x0C
0155 120000     906            lcall   _WriteCommand
0158            907   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:218: WriteCommand(0x01); // Clear screen command (takes some time)
0158 758201     908            mov     dpl,#0x01
015B 120000     909            lcall   _WriteCommand
015E            910   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:219: waitms(20); // Wait for clear screen command to finsih.
015E 900014     911            mov     dptr,#0x0014
0161 020000     912            ljmp    _waitms
0164            913   ;------------------------------------------------------------
0164            914   ;Allocation info for local variables in function 'LCDprint'
0164            915   ;------------------------------------------------------------
0164            916   ;line                      Allocated with name '_LCDprint_PARM_2'
0164            917   ;string                    Allocated to registers r2 r3 r4 
0164            918   ;j                         Allocated to registers r5 r6 
0164            919   ;------------------------------------------------------------
0164            920   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:222: void LCDprint(char * string, unsigned char line, bit clear)
0164            921   ;        -----------------------------------------
0164            922   ;         function LCDprint
0164            923   ;        -----------------------------------------
0164            924   _LCDprint:
0164 AA82       925            mov     r2,dpl
0166 AB83       926            mov     r3,dph
0168 ACF0       927            mov     r4,b
016A            928   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:226: WriteCommand(line==2?0xc0:0x80);
016A 7402       929            mov     a,#0x02
016C B5F870     930            cjne    a,_LCDprint_PARM_2,L011013?
016F 7DC0       931            mov     r5,#0xC0
0171 8000       932            sjmp    L011014?
0173            933   L011013?:
0173 7D80       934            mov     r5,#0x80
0175            935   L011014?:
0175 8D82       936            mov     dpl,r5
0177 C002       937            push    ar2
0179 C003       938            push    ar3
017B C004       939            push    ar4
017D 120000     940            lcall   _WriteCommand
0180            941   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:227: waitms(5);
0180 900005     942            mov     dptr,#0x0005
0183 120000     943            lcall   _waitms
0186 D004       944            pop     ar4
0188 D003       945            pop     ar3
018A D002       946            pop     ar2
018C            947   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:228: for(j=0; string[j]!=0; j++) WriteData(string[j]);// Write the message
018C 7D00       948            mov     r5,#0x00
018E 7E00       949            mov     r6,#0x00
0190            950   L011003?:
0190 ED         951            mov     a,r5
0191 2A         952            add     a,r2
0192 FF         953            mov     r7,a
0193 EE         954            mov     a,r6
0194 3B         955            addc    a,r3
0195 F8         956            mov     r0,a
0196 8C01       957            mov     ar1,r4
0198 8F82       958            mov     dpl,r7
019A 8883       959            mov     dph,r0
019C 89F0       960            mov     b,r1
019E 120000     961            lcall   __gptrget
01A1 FF         962            mov     r7,a
01A2 6000       963            jz      L011006?
01A4 8F82       964            mov     dpl,r7
01A6 C002       965            push    ar2
01A8 C003       966            push    ar3
01AA C004       967            push    ar4
01AC C005       968            push    ar5
01AE C006       969            push    ar6
01B0 120000     970            lcall   _WriteData
01B3 D006       971            pop     ar6
01B5 D005       972            pop     ar5
01B7 D004       973            pop     ar4
01B9 D003       974            pop     ar3
01BB D002       975            pop     ar2
01BD 0D         976            inc     r5
01BE BD00F0     977            cjne    r5,#0x00,L011003?
01C1 0E         978            inc     r6
01C2 8000       979            sjmp    L011003?
01C4            980   L011006?:
01C4            981   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:229: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01C4 30A8B0     982            jnb     _LCDprint_PARM_3,L011011?
01C7 8D02       983            mov     ar2,r5
01C9 8E03       984            mov     ar3,r6
01CB            985   L011007?:
01CB C3         986            clr     c
01CC EA         987            mov     a,r2
01CD 9410       988            subb    a,#0x10
01CF EB         989            mov     a,r3
01D0 6480       990            xrl     a,#0x80
01D2 9480       991            subb    a,#0x80
01D4 5000       992            jnc     L011011?
01D6 758220     993            mov     dpl,#0x20
01D9 C002       994            push    ar2
01DB C003       995            push    ar3
01DD 120000     996            lcall   _WriteData
01E0 D003       997            pop     ar3
01E2 D002       998            pop     ar2
01E4 0A         999            inc     r2
01E5 BA00F0    1000            cjne    r2,#0x00,L011007?
01E8 0B        1001            inc     r3
01E9 8000      1002            sjmp    L011007?
01EB           1003   L011011?:
01EB 22        1004            ret
01EC           1005   ;------------------------------------------------------------
01EC           1006   ;Allocation info for local variables in function 'TIMER0_Init'
01EC           1007   ;------------------------------------------------------------
01EC           1008   ;------------------------------------------------------------
01EC           1009   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:232: void TIMER0_Init(void)
01EC           1010   ;        -----------------------------------------
01EC           1011   ;         function TIMER0_Init
01EC           1012   ;        -----------------------------------------
01EC           1013   _TIMER0_Init:
01EC           1014   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:234: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
01EC 5389F0    1015            anl     _TMOD,#0xF0
01EF           1016   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:235: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
01EF 438901    1017            orl     _TMOD,#0x01
01F2           1018   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:236: TR0=0; // Stop Timer/Counter 0
01F2 C28C      1019            clr     _TR0
01F4 22        1020            ret
01F5           1021   ;------------------------------------------------------------
01F5           1022   ;Allocation info for local variables in function 'InitPinADC'
01F5           1023   ;------------------------------------------------------------
01F5           1024   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
01F5           1025   ;portno                    Allocated to registers r2 
01F5           1026   ;mask                      Allocated to registers r3 
01F5           1027   ;------------------------------------------------------------
01F5           1028   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:241: void InitPinADC (unsigned char portno, unsigned char pinno)
01F5           1029   ;        -----------------------------------------
01F5           1030   ;         function InitPinADC
01F5           1031   ;        -----------------------------------------
01F5           1032   _InitPinADC:
01F5 AA82      1033            mov     r2,dpl
01F7           1034   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:245: mask=1<<pinno;
01F7 8548F0    1035            mov     b,_InitPinADC_PARM_2
01FA 05F0      1036            inc     b
01FC 7401      1037            mov     a,#0x01
01FE 8000      1038            sjmp    L013013?
0200           1039   L013011?:
0200 25E0      1040            add     a,acc
0202           1041   L013013?:
0202 D5F070    1042            djnz    b,L013011?
0205 FB        1043            mov     r3,a
0206           1044   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:247: SFRPAGE = 0x20;
0206 75A720    1045            mov     _SFRPAGE,#0x20
0209           1046   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:248: switch (portno)
0209 BA00B0    1047            cjne    r2,#0x00,L013014?
020C 8000      1048            sjmp    L013001?
020E           1049   L013014?:
020E BA0130    1050            cjne    r2,#0x01,L013015?
0211 8000      1051            sjmp    L013002?
0213           1052   L013015?:
0213           1053   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:250: case 0:
0213 BA02B0    1054            cjne    r2,#0x02,L013005?
0216 8000      1055            sjmp    L013003?
0218           1056   L013001?:
0218           1057   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:251: P0MDIN &= (~mask); // Set pin as analog input
0218 EB        1058            mov     a,r3
0219 F4        1059            cpl     a
021A FA        1060            mov     r2,a
021B 52F1      1061            anl     _P0MDIN,a
021D           1062   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:252: P0SKIP |= mask; // Skip Crossbar decoding for this pin
021D EB        1063            mov     a,r3
021E 42D4      1064            orl     _P0SKIP,a
0220           1065   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:253: break;
0220           1066   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:254: case 1:
0220 8000      1067            sjmp    L013005?
0222           1068   L013002?:
0222           1069   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:255: P1MDIN &= (~mask); // Set pin as analog input
0222 EB        1070            mov     a,r3
0223 F4        1071            cpl     a
0224 FA        1072            mov     r2,a
0225 52F2      1073            anl     _P1MDIN,a
0227           1074   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:256: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0227 EB        1075            mov     a,r3
0228 42D5      1076            orl     _P1SKIP,a
022A           1077   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:257: break;
022A           1078   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:258: case 2:
022A 8000      1079            sjmp    L013005?
022C           1080   L013003?:
022C           1081   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:259: P2MDIN &= (~mask); // Set pin as analog input
022C EB        1082            mov     a,r3
022D F4        1083            cpl     a
022E FA        1084            mov     r2,a
022F 52F3      1085            anl     _P2MDIN,a
0231           1086   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:260: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0231 EB        1087            mov     a,r3
0232 42CC      1088            orl     _P2SKIP,a
0234           1089   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:264: }
0234           1090   L013005?:
0234           1091   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:265: SFRPAGE = 0x00;
0234 75A700    1092            mov     _SFRPAGE,#0x00
0237 22        1093            ret
0238           1094   ;------------------------------------------------------------
0238           1095   ;Allocation info for local variables in function 'ADC_at_Pin'
0238           1096   ;------------------------------------------------------------
0238           1097   ;pin                       Allocated to registers 
0238           1098   ;------------------------------------------------------------
0238           1099   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:269: unsigned int ADC_at_Pin(unsigned char pin)
0238           1100   ;        -----------------------------------------
0238           1101   ;         function ADC_at_Pin
0238           1102   ;        -----------------------------------------
0238           1103   _ADC_at_Pin:
0238 8582BB    1104            mov     _ADC0MX,dpl
023B           1105   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:272: ADINT = 0;
023B C2ED      1106            clr     _ADINT
023D           1107   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:273: ADBUSY = 1;     // Convert voltage at the pin
023D D2EC      1108            setb    _ADBUSY
023F           1109   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:274: while (!ADINT); // Wait for conversion to complete
023F           1110   L014001?:
023F 30ED30    1111            jnb     _ADINT,L014001?
0242           1112   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:275: return (ADC0);
0242 85BD82    1113            mov     dpl,_ADC0
0245 85BE83    1114            mov     dph,(_ADC0 >> 8)
0248 22        1115            ret
0249           1116   ;------------------------------------------------------------
0249           1117   ;Allocation info for local variables in function 'Volts_at_Pin'
0249           1118   ;------------------------------------------------------------
0249           1119   ;pin                       Allocated to registers r2 
0249           1120   ;------------------------------------------------------------
0249           1121   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:278: float Volts_at_Pin(unsigned char pin)
0249           1122   ;        -----------------------------------------
0249           1123   ;         function Volts_at_Pin
0249           1124   ;        -----------------------------------------
0249           1125   _Volts_at_Pin:
0249           1126   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:280: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0249 120000    1127            lcall   _ADC_at_Pin
024C 120000    1128            lcall   ___uint2fs
024F AA82      1129            mov     r2,dpl
0251 AB83      1130            mov     r3,dph
0253 ACF0      1131            mov     r4,b
0255 FD        1132            mov     r5,a
0256 C002      1133            push    ar2
0258 C003      1134            push    ar3
025A C004      1135            push    ar4
025C C005      1136            push    ar5
025E 90923A    1137            mov     dptr,#0x923A
0261 75F053    1138            mov     b,#0x53
0264 7440      1139            mov     a,#0x40
0266 120000    1140            lcall   ___fsmul
0269 AA82      1141            mov     r2,dpl
026B AB83      1142            mov     r3,dph
026D ACF0      1143            mov     r4,b
026F FD        1144            mov     r5,a
0270 E581      1145            mov     a,sp
0272 24FC      1146            add     a,#0xfc
0274 F581      1147            mov     sp,a
0276 E4        1148            clr     a
0277 C0E0      1149            push    acc
0279 74FC      1150            mov     a,#0xFC
027B C0E0      1151            push    acc
027D 747F      1152            mov     a,#0x7F
027F C0E0      1153            push    acc
0281 7446      1154            mov     a,#0x46
0283 C0E0      1155            push    acc
0285 8A82      1156            mov     dpl,r2
0287 8B83      1157            mov     dph,r3
0289 8CF0      1158            mov     b,r4
028B ED        1159            mov     a,r5
028C 120000    1160            lcall   ___fsdiv
028F AA82      1161            mov     r2,dpl
0291 AB83      1162            mov     r3,dph
0293 ACF0      1163            mov     r4,b
0295 FD        1164            mov     r5,a
0296 E581      1165            mov     a,sp
0298 24FC      1166            add     a,#0xfc
029A F581      1167            mov     sp,a
029C 8A82      1168            mov     dpl,r2
029E 8B83      1169            mov     dph,r3
02A0 8CF0      1170            mov     b,r4
02A2 ED        1171            mov     a,r5
02A3 22        1172            ret
02A4           1173   ;------------------------------------------------------------
02A4           1174   ;Allocation info for local variables in function 'Get_ADC'
02A4           1175   ;------------------------------------------------------------
02A4           1176   ;------------------------------------------------------------
02A4           1177   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:283: unsigned int Get_ADC (void)
02A4           1178   ;        -----------------------------------------
02A4           1179   ;         function Get_ADC
02A4           1180   ;        -----------------------------------------
02A4           1181   _Get_ADC:
02A4           1182   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:285: ADINT = 0;
02A4 C2ED      1183            clr     _ADINT
02A6           1184   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:286: ADBUSY = 1;
02A6 D2EC      1185            setb    _ADBUSY
02A8           1186   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:287: while (!ADINT); // Wait for conversion to complete
02A8           1187   L016001?:
02A8 30ED70    1188            jnb     _ADINT,L016001?
02AB           1189   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:288: return (ADC0);
02AB 85BD82    1190            mov     dpl,_ADC0
02AE 85BE83    1191            mov     dph,(_ADC0 >> 8)
02B1 22        1192            ret
02B2           1193   ;------------------------------------------------------------
02B2           1194   ;Allocation info for local variables in function 'main'
02B2           1195   ;------------------------------------------------------------
02B2           1196   ;period                    Allocated to registers r2 r3 r4 r5 
02B2           1197   ;mst                       Allocated with name '_main_mst_1_97'
02B2           1198   ;i                         Allocated with name '_main_i_1_97'
02B2           1199   ;vmax1                     Allocated with name '_main_vmax1_1_97'
02B2           1200   ;vmax2                     Allocated with name '_main_vmax2_1_97'
02B2           1201   ;phase_diff                Allocated to registers r2 r3 r4 r5 
02B2           1202   ;degrees                   Allocated with name '_main_degrees_1_97'
02B2           1203   ;p_n                       Allocated with name '_main_p_n_1_97'
02B2           1204   ;sloc0                     Allocated with name '_main_sloc0_1_0'
02B2           1205   ;v                         Allocated with name '_main_v_1_97'
02B2           1206   ;buff1                     Allocated with name '_main_buff1_1_97'
02B2           1207   ;buff2                     Allocated with name '_main_buff2_1_97'
02B2           1208   ;buff3                     Allocated with name '_main_buff3_1_97'
02B2           1209   ;buff4                     Allocated with name '_main_buff4_1_97'
02B2           1210   ;------------------------------------------------------------
02B2           1211   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:293: void main (void)
02B2           1212   ;        -----------------------------------------
02B2           1213   ;         function main
02B2           1214   ;        -----------------------------------------
02B2           1215   _main:
02B2           1216   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:302: float mst = 0.0;
02B2 754000    1217            mov     _main_mst_1_97,#0x00
02B5 754100    1218            mov     (_main_mst_1_97 + 1),#0x00
02B8 754200    1219            mov     (_main_mst_1_97 + 2),#0x00
02BB 754300    1220            mov     (_main_mst_1_97 + 3),#0x00
02BE           1221   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:304: float vmax1=0.0;
02BE 75D000    1222            mov     _main_vmax1_1_97,#0x00
02C1 75D100    1223            mov     (_main_vmax1_1_97 + 1),#0x00
02C4 75D200    1224            mov     (_main_vmax1_1_97 + 2),#0x00
02C7 75D300    1225            mov     (_main_vmax1_1_97 + 3),#0x00
02CA           1226   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:305: float vmax2=0.0;
02CA 752000    1227            mov     _main_vmax2_1_97,#0x00
02CD 752100    1228            mov     (_main_vmax2_1_97 + 1),#0x00
02D0 752200    1229            mov     (_main_vmax2_1_97 + 2),#0x00
02D3 752300    1230            mov     (_main_vmax2_1_97 + 3),#0x00
02D6           1231   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:308: float p_n=0.0;
02D6 75B000    1232            mov     _main_p_n_1_97,#0x00
02D9 75B100    1233            mov     (_main_p_n_1_97 + 1),#0x00
02DC 75B200    1234            mov     (_main_p_n_1_97 + 2),#0x00
02DF 75B300    1235            mov     (_main_p_n_1_97 + 3),#0x00
02E2           1236   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:309: TIMER0_Init();
02E2 120000    1237            lcall   _TIMER0_Init
02E5           1238   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:310: LCD_4BIT();
02E5 120000    1239            lcall   _LCD_4BIT
02E8           1240   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:312: waitms(500); // Give PuTTy a chance to start before sending
02E8 9001F4    1241            mov     dptr,#0x01F4
02EB 120000    1242            lcall   _waitms
02EE           1243   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:313: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
02EE 74B0      1244            mov     a,#__str_0
02F0 C0E0      1245            push    acc
02F2 74BD      1246            mov     a,#(__str_0 >> 8)
02F4 C0E0      1247            push    acc
02F6 7480      1248            mov     a,#0x80
02F8 C0E0      1249            push    acc
02FA 120000    1250            lcall   _printf
02FD 1581      1251            dec     sp
02FF 1581      1252            dec     sp
0301 1581      1253            dec     sp
0303           1254   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:318: __FILE__, __DATE__, __TIME__);
0303           1255   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:317: "Compiled: %s, %s\n\n",
0303 7430      1256            mov     a,#__str_4
0305 C0E0      1257            push    acc
0307 74BE      1258            mov     a,#(__str_4 >> 8)
0309 C0E0      1259            push    acc
030B 7480      1260            mov     a,#0x80
030D C0E0      1261            push    acc
030F 7470      1262            mov     a,#__str_3
0311 C0E0      1263            push    acc
0313 74BE      1264            mov     a,#(__str_3 >> 8)
0315 C0E0      1265            push    acc
0317 7480      1266            mov     a,#0x80
0319 C0E0      1267            push    acc
031B 74B0      1268            mov     a,#__str_2
031D C0E0      1269            push    acc
031F 74BE      1270            mov     a,#(__str_2 >> 8)
0321 C0E0      1271            push    acc
0323 7480      1272            mov     a,#0x80
0325 C0E0      1273            push    acc
0327 74F0      1274            mov     a,#__str_1
0329 C0E0      1275            push    acc
032B 74BE      1276            mov     a,#(__str_1 >> 8)
032D C0E0      1277            push    acc
032F 7480      1278            mov     a,#0x80
0331 C0E0      1279            push    acc
0333 120000    1280            lcall   _printf
0336 E581      1281            mov     a,sp
0338 24F4      1282            add     a,#0xf4
033A F581      1283            mov     sp,a
033C           1284   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:320: InitPinADC(1, 4); // Configure P1.6 as analog input
033C 754804    1285            mov     _InitPinADC_PARM_2,#0x04
033F 758201    1286            mov     dpl,#0x01
0342 120000    1287            lcall   _InitPinADC
0345           1288   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:321: InitPinADC(1, 5); // Configure P1.7 as analog input
0345 754805    1289            mov     _InitPinADC_PARM_2,#0x05
0348 758201    1290            mov     dpl,#0x01
034B 120000    1291            lcall   _InitPinADC
034E           1292   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:323: InitADC();
034E 120000    1293            lcall   _InitADC
0351           1294   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:325: LCDprint("vr:   V f:    Hz",1,1);
0351 75F801    1295            mov     _LCDprint_PARM_2,#0x01
0354 D2A8      1296            setb    _LCDprint_PARM_3
0356 90BF30    1297            mov     dptr,#__str_5
0359 75F080    1298            mov     b,#0x80
035C 120000    1299            lcall   _LCDprint
035F           1300   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:326: LCDprint("vt:   V  pha:   C",2,1);
035F 75F802    1301            mov     _LCDprint_PARM_2,#0x02
0362 D2A8      1302            setb    _LCDprint_PARM_3
0364 90BF70    1303            mov     dptr,#__str_6
0367 75F080    1304            mov     b,#0x80
036A 120000    1305            lcall   _LCDprint
036D           1306   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:329: for (i = 0; i < 10; i++){
036D           1307   L017070?:
036D E4        1308            clr     a
036E F580      1309            mov     _main_i_1_97,a
0370 F581      1310            mov     (_main_i_1_97 + 1),a
0372           1311   L017049?:
0372 C3        1312            clr     c
0373 E580      1313            mov     a,_main_i_1_97
0375 940A      1314            subb    a,#0x0A
0377 E581      1315            mov     a,(_main_i_1_97 + 1)
0379 6480      1316            xrl     a,#0x80
037B 9480      1317            subb    a,#0x80
037D 4000      1318            jc      L017089?
037F 020000    1319            ljmp    L017052?
0382           1320   L017089?:
0382           1321   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:331: TL0=0; 
0382 758A00    1322            mov     _TL0,#0x00
0385           1323   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:332: TH0=0;
0385 758C00    1324            mov     _TH0,#0x00
0388           1325   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:333: TF0=0;
0388 C28D      1326            clr     _TF0
038A           1327   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:334: overflow_count=0;
038A 753800    1328            mov     _overflow_count,#0x00
038D           1329   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:335: while(P0_1!=0); // Wait for the signal to be zero
038D           1330   L017001?:
038D 2081B0    1331            jb      _P0_1,L017001?
0390           1332   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:336: while(P0_1!=1); // Wait for the signal to be one
0390           1333   L017004?:
0390 3081F0    1334            jnb     _P0_1,L017004?
0393           1335   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:337: TR0=1; // Start the timer
0393 D28C      1336            setb    _TR0
0395           1337   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:338: while(P0_1!=0) // Wait for the signal to be zero
0395           1338   L017009?:
0395 308170    1339            jnb     _P0_1,L017014?
0398           1340   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:340: if(TF0==1) // Did the 16-bit timer overflow?
0398           1341   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:342: TF0=0;
0398 108DB0    1342            jbc     _TF0,L017093?
039B 8000      1343            sjmp    L017009?
039D           1344   L017093?:
039D           1345   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:343: overflow_count++;
039D 0538      1346            inc     _overflow_count
039F           1347   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:346: while(P0_1!=1) // Wait for the signal to be one
039F 8000      1348            sjmp    L017009?
03A1           1349   L017014?:
03A1 2081F0    1350            jb      _P0_1,L017016?
03A4           1351   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:348: if(TF0==1) // Did the 16-bit timer overflow?
03A4           1352   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:350: TF0=0;
03A4 108D30    1353            jbc     _TF0,L017095?
03A7 8000      1354            sjmp    L017014?
03A9           1355   L017095?:
03A9           1356   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:351: overflow_count++;
03A9 0538      1357            inc     _overflow_count
03AB 8000      1358            sjmp    L017014?
03AD           1359   L017016?:
03AD           1360   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:354: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
03AD C28C      1361            clr     _TR0
03AF           1362   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:355: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
03AF 853882    1363            mov     dpl,_overflow_count
03B2 120000    1364            lcall   ___uchar2fs
03B5 AE82      1365            mov     r6,dpl
03B7 AF83      1366            mov     r7,dph
03B9 AAF0      1367            mov     r2,b
03BB FB        1368            mov     r3,a
03BC C006      1369            push    ar6
03BE C007      1370            push    ar7
03C0 C002      1371            push    ar2
03C2 C003      1372            push    ar3
03C4 900000    1373            mov     dptr,#0x0000
03C7 75F080    1374            mov     b,#0x80
03CA 7447      1375            mov     a,#0x47
03CC 120000    1376            lcall   ___fsmul
03CF 8582F0    1377            mov     _main_sloc0_1_0,dpl
03D2 8583F1    1378            mov     (_main_sloc0_1_0 + 1),dph
03D5 85F0F2    1379            mov     (_main_sloc0_1_0 + 2),b
03D8 F5F3      1380            mov     (_main_sloc0_1_0 + 3),a
03DA E581      1381            mov     a,sp
03DC 24FC      1382            add     a,#0xfc
03DE F581      1383            mov     sp,a
03E0 858C82    1384            mov     dpl,_TH0
03E3 120000    1385            lcall   ___uchar2fs
03E6 AE82      1386            mov     r6,dpl
03E8 AF83      1387            mov     r7,dph
03EA AAF0      1388            mov     r2,b
03EC FB        1389            mov     r3,a
03ED C006      1390            push    ar6
03EF C007      1391            push    ar7
03F1 C002      1392            push    ar2
03F3 C003      1393            push    ar3
03F5 900000    1394            mov     dptr,#0x0000
03F8 75F080    1395            mov     b,#0x80
03FB 7443      1396            mov     a,#0x43
03FD 120000    1397            lcall   ___fsmul
0400 AA82      1398            mov     r2,dpl
0402 AB83      1399            mov     r3,dph
0404 ACF0      1400            mov     r4,b
0406 FD        1401            mov     r5,a
0407 E581      1402            mov     a,sp
0409 24FC      1403            add     a,#0xfc
040B F581      1404            mov     sp,a
040D C002      1405            push    ar2
040F C003      1406            push    ar3
0411 C004      1407            push    ar4
0413 C005      1408            push    ar5
0415 85F082    1409            mov     dpl,_main_sloc0_1_0
0418 85F183    1410            mov     dph,(_main_sloc0_1_0 + 1)
041B 85F2F0    1411            mov     b,(_main_sloc0_1_0 + 2)
041E E5F3      1412            mov     a,(_main_sloc0_1_0 + 3)
0420 120000    1413            lcall   ___fsadd
0423 8582F0    1414            mov     _main_sloc0_1_0,dpl
0426 8583F1    1415            mov     (_main_sloc0_1_0 + 1),dph
0429 85F0F2    1416            mov     (_main_sloc0_1_0 + 2),b
042C F5F3      1417            mov     (_main_sloc0_1_0 + 3),a
042E E581      1418            mov     a,sp
0430 24FC      1419            add     a,#0xfc
0432 F581      1420            mov     sp,a
0434 AE8A      1421            mov     r6,_TL0
0436 7F00      1422            mov     r7,#0x00
0438 8E82      1423            mov     dpl,r6
043A 8F83      1424            mov     dph,r7
043C 120000    1425            lcall   ___sint2fs
043F AE82      1426            mov     r6,dpl
0441 AF83      1427            mov     r7,dph
0443 AAF0      1428            mov     r2,b
0445 FB        1429            mov     r3,a
0446 C006      1430            push    ar6
0448 C007      1431            push    ar7
044A C002      1432            push    ar2
044C C003      1433            push    ar3
044E 85F082    1434            mov     dpl,_main_sloc0_1_0
0451 85F183    1435            mov     dph,(_main_sloc0_1_0 + 1)
0454 85F2F0    1436            mov     b,(_main_sloc0_1_0 + 2)
0457 E5F3      1437            mov     a,(_main_sloc0_1_0 + 3)
0459 120000    1438            lcall   ___fsadd
045C AA82      1439            mov     r2,dpl
045E AB83      1440            mov     r3,dph
0460 ACF0      1441            mov     r4,b
0462 FD        1442            mov     r5,a
0463 E581      1443            mov     a,sp
0465 24FC      1444            add     a,#0xfc
0467 F581      1445            mov     sp,a
0469 C002      1446            push    ar2
046B C003      1447            push    ar3
046D C004      1448            push    ar4
046F C005      1449            push    ar5
0471 90F4FC    1450            mov     dptr,#0xF4FC
0474 75F032    1451            mov     b,#0x32
0477 7434      1452            mov     a,#0x34
0479 120000    1453            lcall   ___fsmul
047C AA82      1454            mov     r2,dpl
047E AB83      1455            mov     r3,dph
0480 ACF0      1456            mov     r4,b
0482 FD        1457            mov     r5,a
0483 E581      1458            mov     a,sp
0485 24FC      1459            add     a,#0xfc
0487 F581      1460            mov     sp,a
0489           1461   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:356: if (period > mst){
0489 C002      1462            push    ar2
048B C003      1463            push    ar3
048D C004      1464            push    ar4
048F C005      1465            push    ar5
0491 C040      1466            push    _main_mst_1_97
0493 C041      1467            push    (_main_mst_1_97 + 1)
0495 C042      1468            push    (_main_mst_1_97 + 2)
0497 C043      1469            push    (_main_mst_1_97 + 3)
0499 8A82      1470            mov     dpl,r2
049B 8B83      1471            mov     dph,r3
049D 8CF0      1472            mov     b,r4
049F ED        1473            mov     a,r5
04A0 120000    1474            lcall   ___fsgt
04A3 AE82      1475            mov     r6,dpl
04A5 E581      1476            mov     a,sp
04A7 24FC      1477            add     a,#0xfc
04A9 F581      1478            mov     sp,a
04AB D005      1479            pop     ar5
04AD D004      1480            pop     ar4
04AF D003      1481            pop     ar3
04B1 D002      1482            pop     ar2
04B3 EE        1483            mov     a,r6
04B4 6000      1484            jz      L017018?
04B6           1485   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:357: mst = period;
04B6 8A40      1486            mov     _main_mst_1_97,r2
04B8 8B41      1487            mov     (_main_mst_1_97 + 1),r3
04BA 8C42      1488            mov     (_main_mst_1_97 + 2),r4
04BC 8D43      1489            mov     (_main_mst_1_97 + 3),r5
04BE           1490   L017018?:
04BE           1491   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:359: waitms(1);
04BE 900001    1492            mov     dptr,#0x0001
04C1 120000    1493            lcall   _waitms
04C4           1494   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:329: for (i = 0; i < 10; i++){
04C4 0580      1495            inc     _main_i_1_97
04C6 E4        1496            clr     a
04C7 B580B0    1497            cjne    a,_main_i_1_97,L017097?
04CA 0581      1498            inc     (_main_i_1_97 + 1)
04CC           1499   L017097?:
04CC 020000    1500            ljmp    L017049?
04CF           1501   L017052?:
04CF           1502   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:361: for(i=0;i<20;i++){
04CF 7A00      1503            mov     r2,#0x00
04D1 7B00      1504            mov     r3,#0x00
04D3           1505   L017053?:
04D3 C3        1506            clr     c
04D4 EA        1507            mov     a,r2
04D5 9414      1508            subb    a,#0x14
04D7 EB        1509            mov     a,r3
04D8 6480      1510            xrl     a,#0x80
04DA 9480      1511            subb    a,#0x80
04DC 4000      1512            jc      L017098?
04DE 020000    1513            ljmp    L017056?
04E1           1514   L017098?:
04E1           1515   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:362: v[0] = Volts_at_Pin(QFP32_MUX_P1_4);
04E1 75820A    1516            mov     dpl,#0x0A
04E4 C002      1517            push    ar2
04E6 C003      1518            push    ar3
04E8 120000    1519            lcall   _Volts_at_Pin
04EB AC82      1520            mov     r4,dpl
04ED AD83      1521            mov     r5,dph
04EF AEF0      1522            mov     r6,b
04F1 FF        1523            mov     r7,a
04F2 7830      1524            mov     r0,#_main_v_1_97
04F4 A604      1525            mov     @r0,ar4
04F6 08        1526            inc     r0
04F7 A605      1527            mov     @r0,ar5
04F9 08        1528            inc     r0
04FA A606      1529            mov     @r0,ar6
04FC 08        1530            inc     r0
04FD A607      1531            mov     @r0,ar7
04FF           1532   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:363: v[1] = Volts_at_Pin(QFP32_MUX_P1_5);
04FF 75820B    1533            mov     dpl,#0x0B
0502 120000    1534            lcall   _Volts_at_Pin
0505 AC82      1535            mov     r4,dpl
0507 AD83      1536            mov     r5,dph
0509 AEF0      1537            mov     r6,b
050B FF        1538            mov     r7,a
050C 7834      1539            mov     r0,#(_main_v_1_97 + 0x0004)
050E A604      1540            mov     @r0,ar4
0510 08        1541            inc     r0
0511 A605      1542            mov     @r0,ar5
0513 08        1543            inc     r0
0514 A606      1544            mov     @r0,ar6
0516 08        1545            inc     r0
0517 A607      1546            mov     @r0,ar7
0519           1547   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:364: if(vmax1<v[0]){
0519 7830      1548            mov     r0,#_main_v_1_97
051B 8604      1549            mov     ar4,@r0
051D 08        1550            inc     r0
051E 8605      1551            mov     ar5,@r0
0520 08        1552            inc     r0
0521 8606      1553            mov     ar6,@r0
0523 08        1554            inc     r0
0524 8607      1555            mov     ar7,@r0
0526 C004      1556            push    ar4
0528 C005      1557            push    ar5
052A C006      1558            push    ar6
052C C007      1559            push    ar7
052E 85D082    1560            mov     dpl,_main_vmax1_1_97
0531 85D183    1561            mov     dph,(_main_vmax1_1_97 + 1)
0534 85D2F0    1562            mov     b,(_main_vmax1_1_97 + 2)
0537 E5D3      1563            mov     a,(_main_vmax1_1_97 + 3)
0539 120000    1564            lcall   ___fslt
053C AC82      1565            mov     r4,dpl
053E E581      1566            mov     a,sp
0540 24FC      1567            add     a,#0xfc
0542 F581      1568            mov     sp,a
0544 D003      1569            pop     ar3
0546 D002      1570            pop     ar2
0548 EC        1571            mov     a,r4
0549 6000      1572            jz      L017020?
054B           1573   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:365: vmax1=v[0];
054B 7830      1574            mov     r0,#_main_v_1_97
054D 86D0      1575            mov     _main_vmax1_1_97,@r0
054F 08        1576            inc     r0
0550 86D1      1577            mov     (_main_vmax1_1_97 + 1),@r0
0552 08        1578            inc     r0
0553 86D2      1579            mov     (_main_vmax1_1_97 + 2),@r0
0555 08        1580            inc     r0
0556 86D3      1581            mov     (_main_vmax1_1_97 + 3),@r0
0558           1582   L017020?:
0558           1583   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:367: if(vmax2<v[1]){
0558 7834      1584            mov     r0,#(_main_v_1_97 + 0x0004)
055A 8604      1585            mov     ar4,@r0
055C 08        1586            inc     r0
055D 8605      1587            mov     ar5,@r0
055F 08        1588            inc     r0
0560 8606      1589            mov     ar6,@r0
0562 08        1590            inc     r0
0563 8607      1591            mov     ar7,@r0
0565 C002      1592            push    ar2
0567 C003      1593            push    ar3
0569 C004      1594            push    ar4
056B C005      1595            push    ar5
056D C006      1596            push    ar6
056F C007      1597            push    ar7
0571 852082    1598            mov     dpl,_main_vmax2_1_97
0574 852183    1599            mov     dph,(_main_vmax2_1_97 + 1)
0577 8522F0    1600            mov     b,(_main_vmax2_1_97 + 2)
057A E523      1601            mov     a,(_main_vmax2_1_97 + 3)
057C 120000    1602            lcall   ___fslt
057F AC82      1603            mov     r4,dpl
0581 E581      1604            mov     a,sp
0583 24FC      1605            add     a,#0xfc
0585 F581      1606            mov     sp,a
0587 D003      1607            pop     ar3
0589 D002      1608            pop     ar2
058B EC        1609            mov     a,r4
058C 6000      1610            jz      L017022?
058E           1611   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:368: vmax2=v[1];
058E 7834      1612            mov     r0,#(_main_v_1_97 + 0x0004)
0590 8620      1613            mov     _main_vmax2_1_97,@r0
0592 08        1614            inc     r0
0593 8621      1615            mov     (_main_vmax2_1_97 + 1),@r0
0595 08        1616            inc     r0
0596 8622      1617            mov     (_main_vmax2_1_97 + 2),@r0
0598 08        1618            inc     r0
0599 8623      1619            mov     (_main_vmax2_1_97 + 3),@r0
059B           1620   L017022?:
059B           1621   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:370: waitms(1); 
059B 900001    1622            mov     dptr,#0x0001
059E C002      1623            push    ar2
05A0 C003      1624            push    ar3
05A2 120000    1625            lcall   _waitms
05A5 D003      1626            pop     ar3
05A7 D002      1627            pop     ar2
05A9           1628   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:361: for(i=0;i<20;i++){
05A9 0A        1629            inc     r2
05AA BA0070    1630            cjne    r2,#0x00,L017101?
05AD 0B        1631            inc     r3
05AE           1632   L017101?:
05AE 020000    1633            ljmp    L017053?
05B1           1634   L017056?:
05B1           1635   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:372: printf("\nperiod=%3.2f\r",mst*1000);
05B1 C040      1636            push    _main_mst_1_97
05B3 C041      1637            push    (_main_mst_1_97 + 1)
05B5 C042      1638            push    (_main_mst_1_97 + 2)
05B7 C043      1639            push    (_main_mst_1_97 + 3)
05B9 900000    1640            mov     dptr,#0x0000
05BC 75F07A    1641            mov     b,#0x7A
05BF 7444      1642            mov     a,#0x44
05C1 120000    1643            lcall   ___fsmul
05C4 AA82      1644            mov     r2,dpl
05C6 AB83      1645            mov     r3,dph
05C8 ACF0      1646            mov     r4,b
05CA FD        1647            mov     r5,a
05CB E581      1648            mov     a,sp
05CD 24FC      1649            add     a,#0xfc
05CF F581      1650            mov     sp,a
05D1 C002      1651            push    ar2
05D3 C003      1652            push    ar3
05D5 C004      1653            push    ar4
05D7 C005      1654            push    ar5
05D9 74B0      1655            mov     a,#__str_7
05DB C0E0      1656            push    acc
05DD 74C5      1657            mov     a,#(__str_7 >> 8)
05DF C0E0      1658            push    acc
05E1 7480      1659            mov     a,#0x80
05E3 C0E0      1660            push    acc
05E5 120000    1661            lcall   _printf
05E8 E581      1662            mov     a,sp
05EA 24F9      1663            add     a,#0xf9
05EC F581      1664            mov     sp,a
05EE           1665   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:373: printf ("\nV@P1_4=%7.5fV, V@P1_5=%7.5fV\r",vmax1, vmax2);
05EE C020      1666            push    _main_vmax2_1_97
05F0 C021      1667            push    (_main_vmax2_1_97 + 1)
05F2 C022      1668            push    (_main_vmax2_1_97 + 2)
05F4 C023      1669            push    (_main_vmax2_1_97 + 3)
05F6 C0D0      1670            push    _main_vmax1_1_97
05F8 C0D1      1671            push    (_main_vmax1_1_97 + 1)
05FA C0D2      1672            push    (_main_vmax1_1_97 + 2)
05FC C0D3      1673            push    (_main_vmax1_1_97 + 3)
05FE 74F0      1674            mov     a,#__str_8
0600 C0E0      1675            push    acc
0602 74C5      1676            mov     a,#(__str_8 >> 8)
0604 C0E0      1677            push    acc
0606 7480      1678            mov     a,#0x80
0608 C0E0      1679            push    acc
060A 120000    1680            lcall   _printf
060D E581      1681            mov     a,sp
060F 24F5      1682            add     a,#0xf5
0611 F581      1683            mov     sp,a
0613           1684   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:375: while(P0_1==0&&P0_2==0);
0613           1685   L017024?:
0613 208170    1686            jb      _P0_1,L017026?
0616 308230    1687            jnb     _P0_2,L017024?
0619           1688   L017026?:
0619           1689   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:376: if(P0_1==1){
0619 3081B0    1690            jnb     _P0_1,L017028?
061C           1691   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:377: p_n=1;
061C 75B000    1692            mov     _main_p_n_1_97,#0x00
061F 75B100    1693            mov     (_main_p_n_1_97 + 1),#0x00
0622 75B280    1694            mov     (_main_p_n_1_97 + 2),#0x80
0625 75B33F    1695            mov     (_main_p_n_1_97 + 3),#0x3F
0628           1696   L017028?:
0628           1697   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:379: if(P0_2==1){
0628 3082F0    1698            jnb     _P0_2,L017030?
062B           1699   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:380: p_n=-1;
062B 75B000    1700            mov     _main_p_n_1_97,#0x00
062E 75B100    1701            mov     (_main_p_n_1_97 + 1),#0x00
0631 75B280    1702            mov     (_main_p_n_1_97 + 2),#0x80
0634 75B3BF    1703            mov     (_main_p_n_1_97 + 3),#0xBF
0637           1704   L017030?:
0637           1705   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:382: waitms(1);
0637 900001    1706            mov     dptr,#0x0001
063A 120000    1707            lcall   _waitms
063D           1708   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:383: TL0=0; TH0=0; TF0=0;overflow_count=0;
063D 758A00    1709            mov     _TL0,#0x00
0640 758C00    1710            mov     _TH0,#0x00
0643 C28D      1711            clr     _TF0
0645 753800    1712            mov     _overflow_count,#0x00
0648           1713   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:384: while(P0_1==1);
0648           1714   L017031?:
0648 208130    1715            jb      _P0_1,L017031?
064B           1716   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:385: while(P0_1==0);
064B           1717   L017034?:
064B 308170    1718            jnb     _P0_1,L017034?
064E           1719   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:386: while(P0_1==1){
064E           1720   L017043?:
064E 3081F0    1721            jnb     _P0_1,L017045?
0651           1722   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:387: while(P0_2==0&&P0_1==1){
0651           1723   L017040?:
0651 208270    1724            jb      _P0_2,L017042?
0654 308170    1725            jnb     _P0_1,L017042?
0657           1726   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:388: TR0=1;
0657 D28C      1727            setb    _TR0
0659           1728   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:389: if(TF0==1) // Did the 16-bit timer overflow?
0659           1729   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:391: TF0=0;
0659 108DB0    1730            jbc     _TF0,L017111?
065C 8000      1731            sjmp    L017040?
065E           1732   L017111?:
065E           1733   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:392: overflow_count++;
065E 0538      1734            inc     _overflow_count
0660 8000      1735            sjmp    L017040?
0662           1736   L017042?:
0662           1737   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:396: TR0=0; 
0662 C28C      1738            clr     _TR0
0664 8000      1739            sjmp    L017043?
0666           1740   L017045?:
0666           1741   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:398: phase_diff=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
0666 853882    1742            mov     dpl,_overflow_count
0669 120000    1743            lcall   ___uchar2fs
066C AA82      1744            mov     r2,dpl
066E AB83      1745            mov     r3,dph
0670 ACF0      1746            mov     r4,b
0672 FD        1747            mov     r5,a
0673 C002      1748            push    ar2
0675 C003      1749            push    ar3
0677 C004      1750            push    ar4
0679 C005      1751            push    ar5
067B 900000    1752            mov     dptr,#0x0000
067E 75F080    1753            mov     b,#0x80
0681 7447      1754            mov     a,#0x47
0683 120000    1755            lcall   ___fsmul
0686 8582F0    1756            mov     _main_sloc0_1_0,dpl
0689 8583F1    1757            mov     (_main_sloc0_1_0 + 1),dph
068C 85F0F2    1758            mov     (_main_sloc0_1_0 + 2),b
068F F5F3      1759            mov     (_main_sloc0_1_0 + 3),a
0691 E581      1760            mov     a,sp
0693 24FC      1761            add     a,#0xfc
0695 F581      1762            mov     sp,a
0697 858C82    1763            mov     dpl,_TH0
069A 120000    1764            lcall   ___uchar2fs
069D AE82      1765            mov     r6,dpl
069F AF83      1766            mov     r7,dph
06A1 AAF0      1767            mov     r2,b
06A3 FB        1768            mov     r3,a
06A4 C006      1769            push    ar6
06A6 C007      1770            push    ar7
06A8 C002      1771            push    ar2
06AA C003      1772            push    ar3
06AC 900000    1773            mov     dptr,#0x0000
06AF 75F080    1774            mov     b,#0x80
06B2 7443      1775            mov     a,#0x43
06B4 120000    1776            lcall   ___fsmul
06B7 AA82      1777            mov     r2,dpl
06B9 AB83      1778            mov     r3,dph
06BB ACF0      1779            mov     r4,b
06BD FD        1780            mov     r5,a
06BE E581      1781            mov     a,sp
06C0 24FC      1782            add     a,#0xfc
06C2 F581      1783            mov     sp,a
06C4 C002      1784            push    ar2
06C6 C003      1785            push    ar3
06C8 C004      1786            push    ar4
06CA C005      1787            push    ar5
06CC 85F082    1788            mov     dpl,_main_sloc0_1_0
06CF 85F183    1789            mov     dph,(_main_sloc0_1_0 + 1)
06D2 85F2F0    1790            mov     b,(_main_sloc0_1_0 + 2)
06D5 E5F3      1791            mov     a,(_main_sloc0_1_0 + 3)
06D7 120000    1792            lcall   ___fsadd
06DA 8582F0    1793            mov     _main_sloc0_1_0,dpl
06DD 8583F1    1794            mov     (_main_sloc0_1_0 + 1),dph
06E0 85F0F2    1795            mov     (_main_sloc0_1_0 + 2),b
06E3 F5F3      1796            mov     (_main_sloc0_1_0 + 3),a
06E5 E581      1797            mov     a,sp
06E7 24FC      1798            add     a,#0xfc
06E9 F581      1799            mov     sp,a
06EB AE8A      1800            mov     r6,_TL0
06ED 7F00      1801            mov     r7,#0x00
06EF 8E82      1802            mov     dpl,r6
06F1 8F83      1803            mov     dph,r7
06F3 120000    1804            lcall   ___sint2fs
06F6 AE82      1805            mov     r6,dpl
06F8 AF83      1806            mov     r7,dph
06FA AAF0      1807            mov     r2,b
06FC FB        1808            mov     r3,a
06FD C006      1809            push    ar6
06FF C007      1810            push    ar7
0701 C002      1811            push    ar2
0703 C003      1812            push    ar3
0705 85F082    1813            mov     dpl,_main_sloc0_1_0
0708 85F183    1814            mov     dph,(_main_sloc0_1_0 + 1)
070B 85F2F0    1815            mov     b,(_main_sloc0_1_0 + 2)
070E E5F3      1816            mov     a,(_main_sloc0_1_0 + 3)
0710 120000    1817            lcall   ___fsadd
0713 AA82      1818            mov     r2,dpl
0715 AB83      1819            mov     r3,dph
0717 ACF0      1820            mov     r4,b
0719 FD        1821            mov     r5,a
071A E581      1822            mov     a,sp
071C 24FC      1823            add     a,#0xfc
071E F581      1824            mov     sp,a
0720 C002      1825            push    ar2
0722 C003      1826            push    ar3
0724 C004      1827            push    ar4
0726 C005      1828            push    ar5
0728 90F4FC    1829            mov     dptr,#0xF4FC
072B 75F032    1830            mov     b,#0x32
072E 7434      1831            mov     a,#0x34
0730 120000    1832            lcall   ___fsmul
0733 AA82      1833            mov     r2,dpl
0735 AB83      1834            mov     r3,dph
0737 ACF0      1835            mov     r4,b
0739 FD        1836            mov     r5,a
073A E581      1837            mov     a,sp
073C 24FC      1838            add     a,#0xfc
073E F581      1839            mov     sp,a
0740           1840   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:400: degrees = p_n*phase_diff*360/mst ;
0740 C002      1841            push    ar2
0742 C003      1842            push    ar3
0744 C004      1843            push    ar4
0746 C005      1844            push    ar5
0748 85B082    1845            mov     dpl,_main_p_n_1_97
074B 85B183    1846            mov     dph,(_main_p_n_1_97 + 1)
074E 85B2F0    1847            mov     b,(_main_p_n_1_97 + 2)
0751 E5B3      1848            mov     a,(_main_p_n_1_97 + 3)
0753 120000    1849            lcall   ___fsmul
0756 AA82      1850            mov     r2,dpl
0758 AB83      1851            mov     r3,dph
075A ACF0      1852            mov     r4,b
075C FD        1853            mov     r5,a
075D E581      1854            mov     a,sp
075F 24FC      1855            add     a,#0xfc
0761 F581      1856            mov     sp,a
0763 C002      1857            push    ar2
0765 C003      1858            push    ar3
0767 C004      1859            push    ar4
0769 C005      1860            push    ar5
076B 900000    1861            mov     dptr,#0x0000
076E 75F0B4    1862            mov     b,#0xB4
0771 7443      1863            mov     a,#0x43
0773 120000    1864            lcall   ___fsmul
0776 AA82      1865            mov     r2,dpl
0778 AB83      1866            mov     r3,dph
077A ACF0      1867            mov     r4,b
077C FD        1868            mov     r5,a
077D E581      1869            mov     a,sp
077F 24FC      1870            add     a,#0xfc
0781 F581      1871            mov     sp,a
0783 C040      1872            push    _main_mst_1_97
0785 C041      1873            push    (_main_mst_1_97 + 1)
0787 C042      1874            push    (_main_mst_1_97 + 2)
0789 C043      1875            push    (_main_mst_1_97 + 3)
078B 8A82      1876            mov     dpl,r2
078D 8B83      1877            mov     dph,r3
078F 8CF0      1878            mov     b,r4
0791 ED        1879            mov     a,r5
0792 120000    1880            lcall   ___fsdiv
0795 858270    1881            mov     _main_degrees_1_97,dpl
0798 858371    1882            mov     (_main_degrees_1_97 + 1),dph
079B 85F072    1883            mov     (_main_degrees_1_97 + 2),b
079E F573      1884            mov     (_main_degrees_1_97 + 3),a
07A0 E581      1885            mov     a,sp
07A2 24FC      1886            add     a,#0xfc
07A4 F581      1887            mov     sp,a
07A6           1888   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:402: printf("\r\ndegrees: %f", degrees);
07A6 C070      1889            push    _main_degrees_1_97
07A8 C071      1890            push    (_main_degrees_1_97 + 1)
07AA C072      1891            push    (_main_degrees_1_97 + 2)
07AC C073      1892            push    (_main_degrees_1_97 + 3)
07AE 74F0      1893            mov     a,#__str_9
07B0 C0E0      1894            push    acc
07B2 74C8      1895            mov     a,#(__str_9 >> 8)
07B4 C0E0      1896            push    acc
07B6 7480      1897            mov     a,#0x80
07B8 C0E0      1898            push    acc
07BA 120000    1899            lcall   _printf
07BD E581      1900            mov     a,sp
07BF 24F9      1901            add     a,#0xf9
07C1 F581      1902            mov     sp,a
07C3           1903   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:404: sprintf(buff1,"%04.2f", (float)vmax1/1.14121356237);
07C3 7449      1904            mov     a,#0x49
07C5 C0E0      1905            push    acc
07C7 7413      1906            mov     a,#0x13
07C9 C0E0      1907            push    acc
07CB 7492      1908            mov     a,#0x92
07CD C0E0      1909            push    acc
07CF 743F      1910            mov     a,#0x3F
07D1 C0E0      1911            push    acc
07D3 85D082    1912            mov     dpl,_main_vmax1_1_97
07D6 85D183    1913            mov     dph,(_main_vmax1_1_97 + 1)
07D9 85D2F0    1914            mov     b,(_main_vmax1_1_97 + 2)
07DC E5D3      1915            mov     a,(_main_vmax1_1_97 + 3)
07DE 120000    1916            lcall   ___fsdiv
07E1 AE82      1917            mov     r6,dpl
07E3 AF83      1918            mov     r7,dph
07E5 AAF0      1919            mov     r2,b
07E7 FB        1920            mov     r3,a
07E8 E581      1921            mov     a,sp
07EA 24FC      1922            add     a,#0xfc
07EC F581      1923            mov     sp,a
07EE C006      1924            push    ar6
07F0 C007      1925            push    ar7
07F2 C002      1926            push    ar2
07F4 C003      1927            push    ar3
07F6 7430      1928            mov     a,#__str_10
07F8 C0E0      1929            push    acc
07FA 74C9      1930            mov     a,#(__str_10 >> 8)
07FC C0E0      1931            push    acc
07FE 7480      1932            mov     a,#0x80
0800 C0E0      1933            push    acc
0802 7480      1934            mov     a,#_main_buff1_1_97
0804 C0E0      1935            push    acc
0806 74B3      1936            mov     a,#(_main_buff1_1_97 >> 8)
0808 C0E0      1937            push    acc
080A 7440      1938            mov     a,#0x40
080C C0E0      1939            push    acc
080E 120000    1940            lcall   _sprintf
0811 E581      1941            mov     a,sp
0813 24F6      1942            add     a,#0xf6
0815 F581      1943            mov     sp,a
0817           1944   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:405: LCDprint(buff1, 1, 4);
0817 75F801    1945            mov     _LCDprint_PARM_2,#0x01
081A D2A8      1946            setb    _LCDprint_PARM_3
081C 90B380    1947            mov     dptr,#_main_buff1_1_97
081F 75F040    1948            mov     b,#0x40
0822 120000    1949            lcall   _LCDprint
0825           1950   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:406: sprintf(buff2,"%04.1f", (float)1/mst*1000);
0825 C040      1951            push    _main_mst_1_97
0827 C041      1952            push    (_main_mst_1_97 + 1)
0829 C042      1953            push    (_main_mst_1_97 + 2)
082B C043      1954            push    (_main_mst_1_97 + 3)
082D 900000    1955            mov     dptr,#0x0000
0830 75F080    1956            mov     b,#0x80
0833 743F      1957            mov     a,#0x3F
0835 120000    1958            lcall   ___fsdiv
0838 AA82      1959            mov     r2,dpl
083A AB83      1960            mov     r3,dph
083C ACF0      1961            mov     r4,b
083E FD        1962            mov     r5,a
083F E581      1963            mov     a,sp
0841 24FC      1964            add     a,#0xfc
0843 F581      1965            mov     sp,a
0845 C002      1966            push    ar2
0847 C003      1967            push    ar3
0849 C004      1968            push    ar4
084B C005      1969            push    ar5
084D 900000    1970            mov     dptr,#0x0000
0850 75F07A    1971            mov     b,#0x7A
0853 7444      1972            mov     a,#0x44
0855 120000    1973            lcall   ___fsmul
0858 AA82      1974            mov     r2,dpl
085A AB83      1975            mov     r3,dph
085C ACF0      1976            mov     r4,b
085E FD        1977            mov     r5,a
085F E581      1978            mov     a,sp
0861 24FC      1979            add     a,#0xfc
0863 F581      1980            mov     sp,a
0865 C002      1981            push    ar2
0867 C003      1982            push    ar3
0869 C004      1983            push    ar4
086B C005      1984            push    ar5
086D 74B0      1985            mov     a,#__str_11
086F C0E0      1986            push    acc
0871 74C9      1987            mov     a,#(__str_11 >> 8)
0873 C0E0      1988            push    acc
0875 7480      1989            mov     a,#0x80
0877 C0E0      1990            push    acc
0879 74D0      1991            mov     a,#_main_buff2_1_97
087B C0E0      1992            push    acc
087D 74B3      1993            mov     a,#(_main_buff2_1_97 >> 8)
087F C0E0      1994            push    acc
0881 7440      1995            mov     a,#0x40
0883 C0E0      1996            push    acc
0885 120000    1997            lcall   _sprintf
0888 E581      1998            mov     a,sp
088A 24F6      1999            add     a,#0xf6
088C F581      2000            mov     sp,a
088E           2001   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:407: LCDprint(buff2, 1, 11);
088E 75F801    2002            mov     _LCDprint_PARM_2,#0x01
0891 D2A8      2003            setb    _LCDprint_PARM_3
0893 90B3D0    2004            mov     dptr,#_main_buff2_1_97
0896 75F040    2005            mov     b,#0x40
0899 120000    2006            lcall   _LCDprint
089C           2007   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:408: sprintf(buff3,"%04.2f", (float)vmax2/1.14121356237);
089C 7449      2008            mov     a,#0x49
089E C0E0      2009            push    acc
08A0 7413      2010            mov     a,#0x13
08A2 C0E0      2011            push    acc
08A4 7492      2012            mov     a,#0x92
08A6 C0E0      2013            push    acc
08A8 743F      2014            mov     a,#0x3F
08AA C0E0      2015            push    acc
08AC 852082    2016            mov     dpl,_main_vmax2_1_97
08AF 852183    2017            mov     dph,(_main_vmax2_1_97 + 1)
08B2 8522F0    2018            mov     b,(_main_vmax2_1_97 + 2)
08B5 E523      2019            mov     a,(_main_vmax2_1_97 + 3)
08B7 120000    2020            lcall   ___fsdiv
08BA AA82      2021            mov     r2,dpl
08BC AB83      2022            mov     r3,dph
08BE ACF0      2023            mov     r4,b
08C0 FD        2024            mov     r5,a
08C1 E581      2025            mov     a,sp
08C3 24FC      2026            add     a,#0xfc
08C5 F581      2027            mov     sp,a
08C7 C002      2028            push    ar2
08C9 C003      2029            push    ar3
08CB C004      2030            push    ar4
08CD C005      2031            push    ar5
08CF 7430      2032            mov     a,#__str_10
08D1 C0E0      2033            push    acc
08D3 74C9      2034            mov     a,#(__str_10 >> 8)
08D5 C0E0      2035            push    acc
08D7 7480      2036            mov     a,#0x80
08D9 C0E0      2037            push    acc
08DB 7420      2038            mov     a,#_main_buff3_1_97
08DD C0E0      2039            push    acc
08DF 74B4      2040            mov     a,#(_main_buff3_1_97 >> 8)
08E1 C0E0      2041            push    acc
08E3 7440      2042            mov     a,#0x40
08E5 C0E0      2043            push    acc
08E7 120000    2044            lcall   _sprintf
08EA E581      2045            mov     a,sp
08EC 24F6      2046            add     a,#0xf6
08EE F581      2047            mov     sp,a
08F0           2048   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:409: LCDprint(buff3, 2, 4);
08F0 75F802    2049            mov     _LCDprint_PARM_2,#0x02
08F3 D2A8      2050            setb    _LCDprint_PARM_3
08F5 90B420    2051            mov     dptr,#_main_buff3_1_97
08F8 75F040    2052            mov     b,#0x40
08FB 120000    2053            lcall   _LCDprint
08FE           2054   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:410: sprintf(buff3,"%04.0f", (float)degrees);
08FE C070      2055            push    _main_degrees_1_97
0900 C071      2056            push    (_main_degrees_1_97 + 1)
0902 C072      2057            push    (_main_degrees_1_97 + 2)
0904 C073      2058            push    (_main_degrees_1_97 + 3)
0906 74F0      2059            mov     a,#__str_12
0908 C0E0      2060            push    acc
090A 74C9      2061            mov     a,#(__str_12 >> 8)
090C C0E0      2062            push    acc
090E 7480      2063            mov     a,#0x80
0910 C0E0      2064            push    acc
0912 7420      2065            mov     a,#_main_buff3_1_97
0914 C0E0      2066            push    acc
0916 74B4      2067            mov     a,#(_main_buff3_1_97 >> 8)
0918 C0E0      2068            push    acc
091A 7440      2069            mov     a,#0x40
091C C0E0      2070            push    acc
091E 120000    2071            lcall   _sprintf
0921 E581      2072            mov     a,sp
0923 24F6      2073            add     a,#0xf6
0925 F581      2074            mov     sp,a
0927           2075   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:411: LCDprint(buff4, 2, 13);
0927 75F802    2076            mov     _LCDprint_PARM_2,#0x02
092A D2A8      2077            setb    _LCDprint_PARM_3
092C 90B470    2078            mov     dptr,#_main_buff4_1_97
092F 75F040    2079            mov     b,#0x40
0932 120000    2080            lcall   _LCDprint
0935           2081   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:412: waitms(500); 
0935 9001F4    2082            mov     dptr,#0x01F4
0938 120000    2083            lcall   _waitms
093B 020000    2084            ljmp    L017070?
093E           2085            rseg R_CSEG
093E           2086   
0000           2087            rseg R_XINIT
0000           2088   
0000           2089            rseg R_CONST
0000           2090   __str_0:
0000 1B        2091            db 0x1B
0001 5B324A    2092            db '[2J'
0004 00        2093            db 0x00
0005           2094   __str_1:
0005 41444320  2095            db 'ADC test program'
     74657374
     2070726F
     6772616D
0015 0A        2096            db 0x0A
0016 46696C65  2097            db 'File: %s'
     3A202573
001E 0A        2098            db 0x0A
001F 436F6D70  2099            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002F 0A        2100            db 0x0A
0030 0A        2101            db 0x0A
0031 00        2102            db 0x00
0032           2103   __str_2:
0032 433A      2104            db 'C:'
0034 5C        2105            db 0x5C
0035 55736572  2106            db 'Users'
     73
003A 5C        2107            db 0x5C
003B 71697579  2108            db 'qiuyu'
     75
0040 5C        2109            db 0x5C
0041 4F6E6544  2110            db 'OneDrive'
     72697665
0049 5C        2111            db 0x5C
004A 446F6375  2112            db 'Documents'
     6D656E74
     73
0053 5C        2113            db 0x5C
0054 47697448  2114            db 'GitHub'
     7562
005A 5C        2115            db 0x5C
005B 4C414235  2116            db 'LAB5'
005F 5C        2117            db 0x5C
0060 6C616235  2118            db 'lab5v3.c'
     76332E63
0068 00        2119            db 0x00
0069           2120   __str_3:
0069 4D617220  2121            db 'Mar  6 2024'
     20362032
     303234
0074 00        2122            db 0x00
0075           2123   __str_4:
0075 32303A34  2124            db '20:41:57'
     313A3537
007D 00        2125            db 0x00
007E           2126   __str_5:
007E 76723A20  2127            db 'vr:   V f:    Hz'
     20205620
     663A2020
     2020487A
008E 00        2128            db 0x00
008F           2129   __str_6:
008F 76743A20  2130            db 'vt:   V  pha:   C'
     20205620
     20706861
     3A202020
     43
00A0 00        2131            db 0x00
00A1           2132   __str_7:
00A1 0A        2133            db 0x0A
00A2 70657269  2134            db 'period=%3.2f'
     6F643D25
     332E3266
00AE 0D        2135            db 0x0D
00AF 00        2136            db 0x00
00B0           2137   __str_8:
00B0 0A        2138            db 0x0A
00B1 56405031  2139            db 'V@P1_4=%7.5fV, V@P1_5=%7.5fV'
     5F343D25
     372E3566
     562C2056
     4050315F
     353D2537
     2E356656
00CD 0D        2140            db 0x0D
00CE 00        2141            db 0x00
00CF           2142   __str_9:
00CF 0D        2143            db 0x0D
00D0 0A        2144            db 0x0A
00D1 64656772  2145            db 'degrees: %f'
     6565733A
     202566
00DC 00        2146            db 0x00
00DD           2147   __str_10:
00DD 2530342E  2148            db '%04.2f'
     3266
00E3 00        2149            db 0x00
00E4           2150   __str_11:
00E4 2530342E  2151            db '%04.1f'
     3166
00EA 00        2152            db 0x00
00EB           2153   __str_12:
00EB 2530342E  2154            db '%04.0f'
     3066
00F1 00        2155            db 0x00
00F2           2156   
0003           2157            CSEG
0003           2158   
0003           2159   end
