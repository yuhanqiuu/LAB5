0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Mar 06 21:29:15 2024
0000              5   ;--------------------------------------------------------
                  5   $name lab5v3
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Get_ADC
0000             30            public _Volts_at_Pin
0000             31            public _ADC_at_Pin
0000             32            public _InitPinADC
0000             33            public _TIMER0_Init
0000             34            public _LCDprint
0000             35            public _LCD_4BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public _InitADC
0000             43            public __c51_external_startup
0000             44            public _LCDprint_PARM_3
0000             45            public _LCDprint_PARM_2
0000             46            public _overflow_count
0000             47   ;--------------------------------------------------------
0000             48   ; Special Function Registers
0000             49   ;--------------------------------------------------------
0000             50   _ACC            DATA 0xe0
0000             51   _ADC0ASAH       DATA 0xb6
0000             52   _ADC0ASAL       DATA 0xb5
0000             53   _ADC0ASCF       DATA 0xa1
0000             54   _ADC0ASCT       DATA 0xc7
0000             55   _ADC0CF0        DATA 0xbc
0000             56   _ADC0CF1        DATA 0xb9
0000             57   _ADC0CF2        DATA 0xdf
0000             58   _ADC0CN0        DATA 0xe8
0000             59   _ADC0CN1        DATA 0xb2
0000             60   _ADC0CN2        DATA 0xb3
0000             61   _ADC0GTH        DATA 0xc4
0000             62   _ADC0GTL        DATA 0xc3
0000             63   _ADC0H          DATA 0xbe
0000             64   _ADC0L          DATA 0xbd
0000             65   _ADC0LTH        DATA 0xc6
0000             66   _ADC0LTL        DATA 0xc5
0000             67   _ADC0MX         DATA 0xbb
0000             68   _B              DATA 0xf0
0000             69   _CKCON0         DATA 0x8e
0000             70   _CKCON1         DATA 0xa6
0000             71   _CLEN0          DATA 0xc6
0000             72   _CLIE0          DATA 0xc7
0000             73   _CLIF0          DATA 0xe8
0000             74   _CLKSEL         DATA 0xa9
0000             75   _CLOUT0         DATA 0xd1
0000             76   _CLU0CF         DATA 0xb1
0000             77   _CLU0FN         DATA 0xaf
0000             78   _CLU0MX         DATA 0x84
0000             79   _CLU1CF         DATA 0xb3
0000             80   _CLU1FN         DATA 0xb2
0000             81   _CLU1MX         DATA 0x85
0000             82   _CLU2CF         DATA 0xb6
0000             83   _CLU2FN         DATA 0xb5
0000             84   _CLU2MX         DATA 0x91
0000             85   _CLU3CF         DATA 0xbf
0000             86   _CLU3FN         DATA 0xbe
0000             87   _CLU3MX         DATA 0xae
0000             88   _CMP0CN0        DATA 0x9b
0000             89   _CMP0CN1        DATA 0x99
0000             90   _CMP0MD         DATA 0x9d
0000             91   _CMP0MX         DATA 0x9f
0000             92   _CMP1CN0        DATA 0xbf
0000             93   _CMP1CN1        DATA 0xac
0000             94   _CMP1MD         DATA 0xab
0000             95   _CMP1MX         DATA 0xaa
0000             96   _CRC0CN0        DATA 0xce
0000             97   _CRC0CN1        DATA 0x86
0000             98   _CRC0CNT        DATA 0xd3
0000             99   _CRC0DAT        DATA 0xcb
0000            100   _CRC0FLIP       DATA 0xcf
0000            101   _CRC0IN         DATA 0xca
0000            102   _CRC0ST         DATA 0xd2
0000            103   _DAC0CF0        DATA 0x91
0000            104   _DAC0CF1        DATA 0x92
0000            105   _DAC0H          DATA 0x85
0000            106   _DAC0L          DATA 0x84
0000            107   _DAC1CF0        DATA 0x93
0000            108   _DAC1CF1        DATA 0x94
0000            109   _DAC1H          DATA 0x8a
0000            110   _DAC1L          DATA 0x89
0000            111   _DAC2CF0        DATA 0x95
0000            112   _DAC2CF1        DATA 0x96
0000            113   _DAC2H          DATA 0x8c
0000            114   _DAC2L          DATA 0x8b
0000            115   _DAC3CF0        DATA 0x9a
0000            116   _DAC3CF1        DATA 0x9c
0000            117   _DAC3H          DATA 0x8e
0000            118   _DAC3L          DATA 0x8d
0000            119   _DACGCF0        DATA 0x88
0000            120   _DACGCF1        DATA 0x98
0000            121   _DACGCF2        DATA 0xa2
0000            122   _DERIVID        DATA 0xad
0000            123   _DEVICEID       DATA 0xb5
0000            124   _DPH            DATA 0x83
0000            125   _DPL            DATA 0x82
0000            126   _EIE1           DATA 0xe6
0000            127   _EIE2           DATA 0xf3
0000            128   _EIP1           DATA 0xbb
0000            129   _EIP1H          DATA 0xee
0000            130   _EIP2           DATA 0xed
0000            131   _EIP2H          DATA 0xf6
0000            132   _EMI0CN         DATA 0xe7
0000            133   _FLKEY          DATA 0xb7
0000            134   _HFO0CAL        DATA 0xc7
0000            135   _HFO1CAL        DATA 0xd6
0000            136   _HFOCN          DATA 0xef
0000            137   _I2C0ADM        DATA 0xff
0000            138   _I2C0CN0        DATA 0xba
0000            139   _I2C0DIN        DATA 0xbc
0000            140   _I2C0DOUT       DATA 0xbb
0000            141   _I2C0FCN0       DATA 0xad
0000            142   _I2C0FCN1       DATA 0xab
0000            143   _I2C0FCT        DATA 0xf5
0000            144   _I2C0SLAD       DATA 0xbd
0000            145   _I2C0STAT       DATA 0xb9
0000            146   _IE             DATA 0xa8
0000            147   _IP             DATA 0xb8
0000            148   _IPH            DATA 0xf2
0000            149   _IT01CF         DATA 0xe4
0000            150   _LFO0CN         DATA 0xb1
0000            151   _P0             DATA 0x80
0000            152   _P0MASK         DATA 0xfe
0000            153   _P0MAT          DATA 0xfd
0000            154   _P0MDIN         DATA 0xf1
0000            155   _P0MDOUT        DATA 0xa4
0000            156   _P0SKIP         DATA 0xd4
0000            157   _P1             DATA 0x90
0000            158   _P1MASK         DATA 0xee
0000            159   _P1MAT          DATA 0xed
0000            160   _P1MDIN         DATA 0xf2
0000            161   _P1MDOUT        DATA 0xa5
0000            162   _P1SKIP         DATA 0xd5
0000            163   _P2             DATA 0xa0
0000            164   _P2MASK         DATA 0xfc
0000            165   _P2MAT          DATA 0xfb
0000            166   _P2MDIN         DATA 0xf3
0000            167   _P2MDOUT        DATA 0xa6
0000            168   _P2SKIP         DATA 0xcc
0000            169   _P3             DATA 0xb0
0000            170   _P3MDIN         DATA 0xf4
0000            171   _P3MDOUT        DATA 0x9c
0000            172   _PCA0CENT       DATA 0x9e
0000            173   _PCA0CLR        DATA 0x9c
0000            174   _PCA0CN0        DATA 0xd8
0000            175   _PCA0CPH0       DATA 0xfc
0000            176   _PCA0CPH1       DATA 0xea
0000            177   _PCA0CPH2       DATA 0xec
0000            178   _PCA0CPH3       DATA 0xf5
0000            179   _PCA0CPH4       DATA 0x85
0000            180   _PCA0CPH5       DATA 0xde
0000            181   _PCA0CPL0       DATA 0xfb
0000            182   _PCA0CPL1       DATA 0xe9
0000            183   _PCA0CPL2       DATA 0xeb
0000            184   _PCA0CPL3       DATA 0xf4
0000            185   _PCA0CPL4       DATA 0x84
0000            186   _PCA0CPL5       DATA 0xdd
0000            187   _PCA0CPM0       DATA 0xda
0000            188   _PCA0CPM1       DATA 0xdb
0000            189   _PCA0CPM2       DATA 0xdc
0000            190   _PCA0CPM3       DATA 0xae
0000            191   _PCA0CPM4       DATA 0xaf
0000            192   _PCA0CPM5       DATA 0xcc
0000            193   _PCA0H          DATA 0xfa
0000            194   _PCA0L          DATA 0xf9
0000            195   _PCA0MD         DATA 0xd9
0000            196   _PCA0POL        DATA 0x96
0000            197   _PCA0PWM        DATA 0xf7
0000            198   _PCON0          DATA 0x87
0000            199   _PCON1          DATA 0xcd
0000            200   _PFE0CN         DATA 0xc1
0000            201   _PRTDRV         DATA 0xf6
0000            202   _PSCTL          DATA 0x8f
0000            203   _PSTAT0         DATA 0xaa
0000            204   _PSW            DATA 0xd0
0000            205   _REF0CN         DATA 0xd1
0000            206   _REG0CN         DATA 0xc9
0000            207   _REVID          DATA 0xb6
0000            208   _RSTSRC         DATA 0xef
0000            209   _SBCON1         DATA 0x94
0000            210   _SBRLH1         DATA 0x96
0000            211   _SBRLL1         DATA 0x95
0000            212   _SBUF           DATA 0x99
0000            213   _SBUF0          DATA 0x99
0000            214   _SBUF1          DATA 0x92
0000            215   _SCON           DATA 0x98
0000            216   _SCON0          DATA 0x98
0000            217   _SCON1          DATA 0xc8
0000            218   _SFRPAGE        DATA 0xa7
0000            219   _SFRPGCN        DATA 0xbc
0000            220   _SFRSTACK       DATA 0xd7
0000            221   _SMB0ADM        DATA 0xd6
0000            222   _SMB0ADR        DATA 0xd7
0000            223   _SMB0CF         DATA 0xc1
0000            224   _SMB0CN0        DATA 0xc0
0000            225   _SMB0DAT        DATA 0xc2
0000            226   _SMB0FCN0       DATA 0xc3
0000            227   _SMB0FCN1       DATA 0xc4
0000            228   _SMB0FCT        DATA 0xef
0000            229   _SMB0RXLN       DATA 0xc5
0000            230   _SMB0TC         DATA 0xac
0000            231   _SMOD1          DATA 0x93
0000            232   _SP             DATA 0x81
0000            233   _SPI0CFG        DATA 0xa1
0000            234   _SPI0CKR        DATA 0xa2
0000            235   _SPI0CN0        DATA 0xf8
0000            236   _SPI0DAT        DATA 0xa3
0000            237   _SPI0FCN0       DATA 0x9a
0000            238   _SPI0FCN1       DATA 0x9b
0000            239   _SPI0FCT        DATA 0xf7
0000            240   _SPI0PCF        DATA 0xdf
0000            241   _TCON           DATA 0x88
0000            242   _TH0            DATA 0x8c
0000            243   _TH1            DATA 0x8d
0000            244   _TL0            DATA 0x8a
0000            245   _TL1            DATA 0x8b
0000            246   _TMOD           DATA 0x89
0000            247   _TMR2CN0        DATA 0xc8
0000            248   _TMR2CN1        DATA 0xfd
0000            249   _TMR2H          DATA 0xcf
0000            250   _TMR2L          DATA 0xce
0000            251   _TMR2RLH        DATA 0xcb
0000            252   _TMR2RLL        DATA 0xca
0000            253   _TMR3CN0        DATA 0x91
0000            254   _TMR3CN1        DATA 0xfe
0000            255   _TMR3H          DATA 0x95
0000            256   _TMR3L          DATA 0x94
0000            257   _TMR3RLH        DATA 0x93
0000            258   _TMR3RLL        DATA 0x92
0000            259   _TMR4CN0        DATA 0x98
0000            260   _TMR4CN1        DATA 0xff
0000            261   _TMR4H          DATA 0xa5
0000            262   _TMR4L          DATA 0xa4
0000            263   _TMR4RLH        DATA 0xa3
0000            264   _TMR4RLL        DATA 0xa2
0000            265   _TMR5CN0        DATA 0xc0
0000            266   _TMR5CN1        DATA 0xf1
0000            267   _TMR5H          DATA 0xd5
0000            268   _TMR5L          DATA 0xd4
0000            269   _TMR5RLH        DATA 0xd3
0000            270   _TMR5RLL        DATA 0xd2
0000            271   _UART0PCF       DATA 0xd9
0000            272   _UART1FCN0      DATA 0x9d
0000            273   _UART1FCN1      DATA 0xd8
0000            274   _UART1FCT       DATA 0xfa
0000            275   _UART1LIN       DATA 0x9e
0000            276   _UART1PCF       DATA 0xda
0000            277   _VDM0CN         DATA 0xff
0000            278   _WDTCN          DATA 0x97
0000            279   _XBR0           DATA 0xe1
0000            280   _XBR1           DATA 0xe2
0000            281   _XBR2           DATA 0xe3
0000            282   _XOSC0CN        DATA 0x86
0000            283   _DPTR           DATA 0x8382
0000            284   _TMR2RL         DATA 0xcbca
0000            285   _TMR3RL         DATA 0x9392
0000            286   _TMR4RL         DATA 0xa3a2
0000            287   _TMR5RL         DATA 0xd3d2
0000            288   _TMR0           DATA 0x8c8a
0000            289   _TMR1           DATA 0x8d8b
0000            290   _TMR2           DATA 0xcfce
0000            291   _TMR3           DATA 0x9594
0000            292   _TMR4           DATA 0xa5a4
0000            293   _TMR5           DATA 0xd5d4
0000            294   _SBRL1          DATA 0x9695
0000            295   _PCA0           DATA 0xfaf9
0000            296   _PCA0CP0        DATA 0xfcfb
0000            297   _PCA0CP1        DATA 0xeae9
0000            298   _PCA0CP2        DATA 0xeceb
0000            299   _PCA0CP3        DATA 0xf5f4
0000            300   _PCA0CP4        DATA 0x8584
0000            301   _PCA0CP5        DATA 0xdedd
0000            302   _ADC0ASA        DATA 0xb6b5
0000            303   _ADC0GT         DATA 0xc4c3
0000            304   _ADC0           DATA 0xbebd
0000            305   _ADC0LT         DATA 0xc6c5
0000            306   _DAC0           DATA 0x8584
0000            307   _DAC1           DATA 0x8a89
0000            308   _DAC2           DATA 0x8c8b
0000            309   _DAC3           DATA 0x8e8d
0000            310   ;--------------------------------------------------------
0000            311   ; special function bits
0000            312   ;--------------------------------------------------------
0000            313   _ACC_0          BIT 0xe0
0000            314   _ACC_1          BIT 0xe1
0000            315   _ACC_2          BIT 0xe2
0000            316   _ACC_3          BIT 0xe3
0000            317   _ACC_4          BIT 0xe4
0000            318   _ACC_5          BIT 0xe5
0000            319   _ACC_6          BIT 0xe6
0000            320   _ACC_7          BIT 0xe7
0000            321   _TEMPE          BIT 0xe8
0000            322   _ADGN0          BIT 0xe9
0000            323   _ADGN1          BIT 0xea
0000            324   _ADWINT         BIT 0xeb
0000            325   _ADBUSY         BIT 0xec
0000            326   _ADINT          BIT 0xed
0000            327   _IPOEN          BIT 0xee
0000            328   _ADEN           BIT 0xef
0000            329   _B_0            BIT 0xf0
0000            330   _B_1            BIT 0xf1
0000            331   _B_2            BIT 0xf2
0000            332   _B_3            BIT 0xf3
0000            333   _B_4            BIT 0xf4
0000            334   _B_5            BIT 0xf5
0000            335   _B_6            BIT 0xf6
0000            336   _B_7            BIT 0xf7
0000            337   _C0FIF          BIT 0xe8
0000            338   _C0RIF          BIT 0xe9
0000            339   _C1FIF          BIT 0xea
0000            340   _C1RIF          BIT 0xeb
0000            341   _C2FIF          BIT 0xec
0000            342   _C2RIF          BIT 0xed
0000            343   _C3FIF          BIT 0xee
0000            344   _C3RIF          BIT 0xef
0000            345   _D1SRC0         BIT 0x88
0000            346   _D1SRC1         BIT 0x89
0000            347   _D1AMEN         BIT 0x8a
0000            348   _D01REFSL       BIT 0x8b
0000            349   _D3SRC0         BIT 0x8c
0000            350   _D3SRC1         BIT 0x8d
0000            351   _D3AMEN         BIT 0x8e
0000            352   _D23REFSL       BIT 0x8f
0000            353   _D0UDIS         BIT 0x98
0000            354   _D1UDIS         BIT 0x99
0000            355   _D2UDIS         BIT 0x9a
0000            356   _D3UDIS         BIT 0x9b
0000            357   _EX0            BIT 0xa8
0000            358   _ET0            BIT 0xa9
0000            359   _EX1            BIT 0xaa
0000            360   _ET1            BIT 0xab
0000            361   _ES0            BIT 0xac
0000            362   _ET2            BIT 0xad
0000            363   _ESPI0          BIT 0xae
0000            364   _EA             BIT 0xaf
0000            365   _PX0            BIT 0xb8
0000            366   _PT0            BIT 0xb9
0000            367   _PX1            BIT 0xba
0000            368   _PT1            BIT 0xbb
0000            369   _PS0            BIT 0xbc
0000            370   _PT2            BIT 0xbd
0000            371   _PSPI0          BIT 0xbe
0000            372   _P0_0           BIT 0x80
0000            373   _P0_1           BIT 0x81
0000            374   _P0_2           BIT 0x82
0000            375   _P0_3           BIT 0x83
0000            376   _P0_4           BIT 0x84
0000            377   _P0_5           BIT 0x85
0000            378   _P0_6           BIT 0x86
0000            379   _P0_7           BIT 0x87
0000            380   _P1_0           BIT 0x90
0000            381   _P1_1           BIT 0x91
0000            382   _P1_2           BIT 0x92
0000            383   _P1_3           BIT 0x93
0000            384   _P1_4           BIT 0x94
0000            385   _P1_5           BIT 0x95
0000            386   _P1_6           BIT 0x96
0000            387   _P1_7           BIT 0x97
0000            388   _P2_0           BIT 0xa0
0000            389   _P2_1           BIT 0xa1
0000            390   _P2_2           BIT 0xa2
0000            391   _P2_3           BIT 0xa3
0000            392   _P2_4           BIT 0xa4
0000            393   _P2_5           BIT 0xa5
0000            394   _P2_6           BIT 0xa6
0000            395   _P3_0           BIT 0xb0
0000            396   _P3_1           BIT 0xb1
0000            397   _P3_2           BIT 0xb2
0000            398   _P3_3           BIT 0xb3
0000            399   _P3_4           BIT 0xb4
0000            400   _P3_7           BIT 0xb7
0000            401   _CCF0           BIT 0xd8
0000            402   _CCF1           BIT 0xd9
0000            403   _CCF2           BIT 0xda
0000            404   _CCF3           BIT 0xdb
0000            405   _CCF4           BIT 0xdc
0000            406   _CCF5           BIT 0xdd
0000            407   _CR             BIT 0xde
0000            408   _CF             BIT 0xdf
0000            409   _PARITY         BIT 0xd0
0000            410   _F1             BIT 0xd1
0000            411   _OV             BIT 0xd2
0000            412   _RS0            BIT 0xd3
0000            413   _RS1            BIT 0xd4
0000            414   _F0             BIT 0xd5
0000            415   _AC             BIT 0xd6
0000            416   _CY             BIT 0xd7
0000            417   _RI             BIT 0x98
0000            418   _TI             BIT 0x99
0000            419   _RB8            BIT 0x9a
0000            420   _TB8            BIT 0x9b
0000            421   _REN            BIT 0x9c
0000            422   _CE             BIT 0x9d
0000            423   _SMODE          BIT 0x9e
0000            424   _RI1            BIT 0xc8
0000            425   _TI1            BIT 0xc9
0000            426   _RBX1           BIT 0xca
0000            427   _TBX1           BIT 0xcb
0000            428   _REN1           BIT 0xcc
0000            429   _PERR1          BIT 0xcd
0000            430   _OVR1           BIT 0xce
0000            431   _SI             BIT 0xc0
0000            432   _ACK            BIT 0xc1
0000            433   _ARBLOST        BIT 0xc2
0000            434   _ACKRQ          BIT 0xc3
0000            435   _STO            BIT 0xc4
0000            436   _STA            BIT 0xc5
0000            437   _TXMODE         BIT 0xc6
0000            438   _MASTER         BIT 0xc7
0000            439   _SPIEN          BIT 0xf8
0000            440   _TXNF           BIT 0xf9
0000            441   _NSSMD0         BIT 0xfa
0000            442   _NSSMD1         BIT 0xfb
0000            443   _RXOVRN         BIT 0xfc
0000            444   _MODF           BIT 0xfd
0000            445   _WCOL           BIT 0xfe
0000            446   _SPIF           BIT 0xff
0000            447   _IT0            BIT 0x88
0000            448   _IE0            BIT 0x89
0000            449   _IT1            BIT 0x8a
0000            450   _IE1            BIT 0x8b
0000            451   _TR0            BIT 0x8c
0000            452   _TF0            BIT 0x8d
0000            453   _TR1            BIT 0x8e
0000            454   _TF1            BIT 0x8f
0000            455   _T2XCLK0        BIT 0xc8
0000            456   _T2XCLK1        BIT 0xc9
0000            457   _TR2            BIT 0xca
0000            458   _T2SPLIT        BIT 0xcb
0000            459   _TF2CEN         BIT 0xcc
0000            460   _TF2LEN         BIT 0xcd
0000            461   _TF2L           BIT 0xce
0000            462   _TF2H           BIT 0xcf
0000            463   _T4XCLK0        BIT 0x98
0000            464   _T4XCLK1        BIT 0x99
0000            465   _TR4            BIT 0x9a
0000            466   _T4SPLIT        BIT 0x9b
0000            467   _TF4CEN         BIT 0x9c
0000            468   _TF4LEN         BIT 0x9d
0000            469   _TF4L           BIT 0x9e
0000            470   _TF4H           BIT 0x9f
0000            471   _T5XCLK0        BIT 0xc0
0000            472   _T5XCLK1        BIT 0xc1
0000            473   _TR5            BIT 0xc2
0000            474   _T5SPLIT        BIT 0xc3
0000            475   _TF5CEN         BIT 0xc4
0000            476   _TF5LEN         BIT 0xc5
0000            477   _TF5L           BIT 0xc6
0000            478   _TF5H           BIT 0xc7
0000            479   _RIE            BIT 0xd8
0000            480   _RXTO0          BIT 0xd9
0000            481   _RXTO1          BIT 0xda
0000            482   _RFRQ           BIT 0xdb
0000            483   _TIE            BIT 0xdc
0000            484   _TXHOLD         BIT 0xdd
0000            485   _TXNF1          BIT 0xde
0000            486   _TFRQ           BIT 0xdf
0000            487   ;--------------------------------------------------------
0000            488   ; overlayable register banks
0000            489   ;--------------------------------------------------------
0000            490            rbank0 segment data overlay
0000            491   ;--------------------------------------------------------
0000            492   ; internal ram data
0000            493   ;--------------------------------------------------------
0000            494            rseg R_DSEG
0000            495   _overflow_count:
0000            496            ds 1
0001            497   _LCDprint_PARM_2:
0001            498            ds 1
0002            499   _main_mst_1_97:
0002            500            ds 4
0006            501   _main_i_1_97:
0006            502            ds 2
0008            503   _main_vmax1_1_97:
0008            504            ds 4
000C            505   _main_vmax2_1_97:
000C            506            ds 4
0010            507   _main_degrees_1_97:
0010            508            ds 4
0014            509   _main_p_n_1_97:
0014            510            ds 4
0018            511   _main_sloc0_1_0:
0018            512            ds 4
001C            513   ;--------------------------------------------------------
001C            514   ; overlayable items in internal ram 
001C            515   ;--------------------------------------------------------
0000            516            rseg    R_OSEG
0000            517            rseg    R_OSEG
0000            518   _InitPinADC_PARM_2:
0000            519            ds 1
0001            520            rseg    R_OSEG
0001            521   ;--------------------------------------------------------
0001            522   ; indirectly addressable internal ram data
0001            523   ;--------------------------------------------------------
0000            524            rseg R_ISEG
0000            525   _main_v_1_97:
0000            526            ds 8
0008            527   _main_buff1_1_97:
0008            528            ds 17
0019            529   _main_buff2_1_97:
0019            530            ds 17
002A            531   ;--------------------------------------------------------
002A            532   ; absolute internal ram data
002A            533   ;--------------------------------------------------------
0000            534            DSEG
0000            535   ;--------------------------------------------------------
0000            536   ; bit data
0000            537   ;--------------------------------------------------------
0000            538            rseg R_BSEG
0000            539   _LCDprint_PARM_3:
0000            540            DBIT    1
0001            541   ;--------------------------------------------------------
0001            542   ; paged external ram data
0001            543   ;--------------------------------------------------------
0000            544            rseg R_PSEG
0000            545   ;--------------------------------------------------------
0000            546   ; external ram data
0000            547   ;--------------------------------------------------------
0000            548            rseg R_XSEG
0000            549   ;--------------------------------------------------------
0000            550   ; absolute external ram data
0000            551   ;--------------------------------------------------------
0000            552            XSEG
0000            553   ;--------------------------------------------------------
0000            554   ; external initialized ram data
0000            555   ;--------------------------------------------------------
0000            556            rseg R_IXSEG
0000            557            rseg R_HOME
0000            558            rseg R_GSINIT
0000            559            rseg R_CSEG
0000            560   ;--------------------------------------------------------
0000            561   ; Reset entry point and interrupt vectors
0000            562   ;--------------------------------------------------------
0000            563            CSEG at 0x0000
0000 020000     564            ljmp    _crt0
0003            565   ;--------------------------------------------------------
0003            566   ; global & static initialisations
0003            567   ;--------------------------------------------------------
0000            568            rseg R_HOME
0000            569            rseg R_GSINIT
0000            570            rseg R_GSINIT
0000            571   ;--------------------------------------------------------
0000            572   ; data variables initialization
0000            573   ;--------------------------------------------------------
0000            574            rseg R_DINIT
0000            575            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            576   ;--------------------------------------------------------
0000            577   ; code
0000            578   ;--------------------------------------------------------
0000            579            rseg R_CSEG
0000            580   ;------------------------------------------------------------
0000            581   ;Allocation info for local variables in function '_c51_external_startup'
0000            582   ;------------------------------------------------------------
0000            583   ;------------------------------------------------------------
0000            584   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:29: char _c51_external_startup (void)
0000            585   ;        -----------------------------------------
0000            586   ;         function _c51_external_startup
0000            587   ;        -----------------------------------------
0000            588   __c51_external_startup:
0000            589            using   0
0000            590   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:32: SFRPAGE = 0x00;
0000 75A700     591            mov     _SFRPAGE,#0x00
0003            592   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:33: WDTCN = 0xDE; //First key
0003 7597DE     593            mov     _WDTCN,#0xDE
0006            594   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:34: WDTCN = 0xAD; //Second key
0006 7597AD     595            mov     _WDTCN,#0xAD
0009            596   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:36: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     597            mov     _VDM0CN,#0x80
000C            598   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:37: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     599            mov     _RSTSRC,#0x06
000F            600   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:44: SFRPAGE = 0x10;
000F 75A710     601            mov     _SFRPAGE,#0x10
0012            602   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:45: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     603            mov     _PFE0CN,#0x20
0015            604   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:46: SFRPAGE = 0x00;
0015 75A700     605            mov     _SFRPAGE,#0x00
0018            606   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:67: CLKSEL = 0x00;
0018 75A900     607            mov     _CLKSEL,#0x00
001B            608   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:68: CLKSEL = 0x00;
001B 75A900     609            mov     _CLKSEL,#0x00
001E            610   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:69: while ((CLKSEL & 0x80) == 0);
001E            611   L002001?:
001E E5A9       612            mov     a,_CLKSEL
0020 30E750     613            jnb     acc.7,L002001?
0023            614   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:70: CLKSEL = 0x03;
0023 75A903     615            mov     _CLKSEL,#0x03
0026            616   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:71: CLKSEL = 0x03;
0026 75A903     617            mov     _CLKSEL,#0x03
0029            618   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:72: while ((CLKSEL & 0x80) == 0);
0029            619   L002004?:
0029 E5A9       620            mov     a,_CLKSEL
002B 30E7D0     621            jnb     acc.7,L002004?
002E            622   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:77: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     623            orl     _P0MDOUT,#0x10
0031            624   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:78: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     625            mov     _XBR0,#0x01
0034            626   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:79: XBR1     = 0X00;
0034 75E200     627            mov     _XBR1,#0x00
0037            628   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:80: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     629            mov     _XBR2,#0x40
003A            630   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:86: SCON0 = 0x10;
003A 759810     631            mov     _SCON0,#0x10
003D            632   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:87: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     633            mov     _CKCON0,_CKCON0
0040            634   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:89: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     635            mov     _TH1,#0xE6
0043            636   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:90: TL1 = TH1;      // Init Timer1
0043 858D8B     637            mov     _TL1,_TH1
0046            638   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:91: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     639            anl     _TMOD,#0x0F
0049            640   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:92: TMOD |=  0x20;                       
0049 438920     641            orl     _TMOD,#0x20
004C            642   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:93: TR1 = 1; // START Timer1
004C D28E       643            setb    _TR1
004E            644   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:94: TI = 1;  // Indicate TX0 ready
004E D299       645            setb    _TI
0050            646   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:96: return 0;
0050 758200     647            mov     dpl,#0x00
0053 22         648            ret
0054            649   ;------------------------------------------------------------
0054            650   ;Allocation info for local variables in function 'InitADC'
0054            651   ;------------------------------------------------------------
0054            652   ;------------------------------------------------------------
0054            653   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:99: void InitADC (void)
0054            654   ;        -----------------------------------------
0054            655   ;         function InitADC
0054            656   ;        -----------------------------------------
0054            657   _InitADC:
0054            658   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:101: SFRPAGE = 0x00;
0054 75A700     659            mov     _SFRPAGE,#0x00
0057            660   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:102: ADEN=0; // Disable ADC
0057 C2EF       661            clr     _ADEN
0059            662   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:107: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0059 75B280     663            mov     _ADC0CN1,#0x80
005C            664   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:111: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
005C 75BC20     665            mov     _ADC0CF0,#0x20
005F            666   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:115: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005F 75B91E     667            mov     _ADC0CF1,#0x1E
0062            668   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:124: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
0062 75E800     669            mov     _ADC0CN0,#0x00
0065            670   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:129: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0065 75DF3F     671            mov     _ADC0CF2,#0x3F
0068            672   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:133: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0068 75B300     673            mov     _ADC0CN2,#0x00
006B            674   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:135: ADEN=1; // Enable ADC
006B D2EF       675            setb    _ADEN
006D 22         676            ret
006E            677   ;------------------------------------------------------------
006E            678   ;Allocation info for local variables in function 'Timer3us'
006E            679   ;------------------------------------------------------------
006E            680   ;us                        Allocated to registers r2 
006E            681   ;i                         Allocated to registers r3 
006E            682   ;------------------------------------------------------------
006E            683   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:139: void Timer3us(unsigned char us)
006E            684   ;        -----------------------------------------
006E            685   ;         function Timer3us
006E            686   ;        -----------------------------------------
006E            687   _Timer3us:
006E AA82       688            mov     r2,dpl
0070            689   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:144: CKCON0|=0b_0100_0000;
0070 438E40     690            orl     _CKCON0,#0x40
0073            691   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:146: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0073 7592B8     692            mov     _TMR3RL,#0xB8
0076 7593FF     693            mov     (_TMR3RL >> 8),#0xFF
0079            694   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:147: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0079 859294     695            mov     _TMR3,_TMR3RL
007C 859395     696            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007F            697   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:149: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007F 759104     698            mov     _TMR3CN0,#0x04
0082            699   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:150: for (i = 0; i < us; i++)       // Count <us> overflows
0082 7B00       700            mov     r3,#0x00
0084            701   L004004?:
0084 C3         702            clr     c
0085 EB         703            mov     a,r3
0086 9A         704            subb    a,r2
0087 5000       705            jnc     L004007?
0089            706   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:152: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0089            707   L004001?:
0089 E591       708            mov     a,_TMR3CN0
008B 30E7D0     709            jnb     acc.7,L004001?
008E            710   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:153: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008E 53917F     711            anl     _TMR3CN0,#0x7F
0091            712   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:150: for (i = 0; i < us; i++)       // Count <us> overflows
0091 0B         713            inc     r3
0092 8000       714            sjmp    L004004?
0094            715   L004007?:
0094            716   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:155: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0094 759100     717            mov     _TMR3CN0,#0x00
0097 22         718            ret
0098            719   ;------------------------------------------------------------
0098            720   ;Allocation info for local variables in function 'waitms'
0098            721   ;------------------------------------------------------------
0098            722   ;ms                        Allocated to registers r2 r3 
0098            723   ;j                         Allocated to registers r4 r5 
0098            724   ;k                         Allocated to registers r6 
0098            725   ;------------------------------------------------------------
0098            726   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:158: void waitms (unsigned int ms)
0098            727   ;        -----------------------------------------
0098            728   ;         function waitms
0098            729   ;        -----------------------------------------
0098            730   _waitms:
0098 AA82       731            mov     r2,dpl
009A AB83       732            mov     r3,dph
009C            733   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:162: for(j=0; j<ms; j++)
009C 7C00       734            mov     r4,#0x00
009E 7D00       735            mov     r5,#0x00
00A0            736   L005005?:
00A0 C3         737            clr     c
00A1 EC         738            mov     a,r4
00A2 9A         739            subb    a,r2
00A3 ED         740            mov     a,r5
00A4 9B         741            subb    a,r3
00A5 5000       742            jnc     L005009?
00A7            743   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:163: for (k=0; k<4; k++) Timer3us(250);
00A7 7E00       744            mov     r6,#0x00
00A9            745   L005001?:
00A9 BE0410     746            cjne    r6,#0x04,L005018?
00AC            747   L005018?:
00AC 5000       748            jnc     L005007?
00AE 7582FA     749            mov     dpl,#0xFA
00B1 C002       750            push    ar2
00B3 C003       751            push    ar3
00B5 C004       752            push    ar4
00B7 C005       753            push    ar5
00B9 C006       754            push    ar6
00BB 120000     755            lcall   _Timer3us
00BE D006       756            pop     ar6
00C0 D005       757            pop     ar5
00C2 D004       758            pop     ar4
00C4 D003       759            pop     ar3
00C6 D002       760            pop     ar2
00C8 0E         761            inc     r6
00C9 8000       762            sjmp    L005001?
00CB            763   L005007?:
00CB            764   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:162: for(j=0; j<ms; j++)
00CB 0C         765            inc     r4
00CC BC0050     766            cjne    r4,#0x00,L005005?
00CF 0D         767            inc     r5
00D0 8000       768            sjmp    L005005?
00D2            769   L005009?:
00D2 22         770            ret
00D3            771   ;------------------------------------------------------------
00D3            772   ;Allocation info for local variables in function 'LCD_pulse'
00D3            773   ;------------------------------------------------------------
00D3            774   ;------------------------------------------------------------
00D3            775   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:166: void LCD_pulse (void)
00D3            776   ;        -----------------------------------------
00D3            777   ;         function LCD_pulse
00D3            778   ;        -----------------------------------------
00D3            779   _LCD_pulse:
00D3            780   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:168: LCD_E=1;
00D3 D2A0       781            setb    _P2_0
00D5            782   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:169: Timer3us(40);
00D5 758228     783            mov     dpl,#0x28
00D8 120000     784            lcall   _Timer3us
00DB            785   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:170: LCD_E=0;
00DB C2A0       786            clr     _P2_0
00DD 22         787            ret
00DE            788   ;------------------------------------------------------------
00DE            789   ;Allocation info for local variables in function 'LCD_byte'
00DE            790   ;------------------------------------------------------------
00DE            791   ;x                         Allocated to registers r2 
00DE            792   ;------------------------------------------------------------
00DE            793   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:173: void LCD_byte (unsigned char x)
00DE            794   ;        -----------------------------------------
00DE            795   ;         function LCD_byte
00DE            796   ;        -----------------------------------------
00DE            797   _LCD_byte:
00DE AA82       798            mov     r2,dpl
00E0            799   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:176: ACC=x; //Send high nible
00E0 8AE0       800            mov     _ACC,r2
00E2            801   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:177: LCD_D7=ACC_7;
00E2 A2E7       802            mov     c,_ACC_7
00E4 9290       803            mov     _P1_0,c
00E6            804   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:178: LCD_D6=ACC_6;
00E6 A2E6       805            mov     c,_ACC_6
00E8 9291       806            mov     _P1_1,c
00EA            807   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:179: LCD_D5=ACC_5;
00EA A2E5       808            mov     c,_ACC_5
00EC 9292       809            mov     _P1_2,c
00EE            810   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:180: LCD_D4=ACC_4;
00EE A2E4       811            mov     c,_ACC_4
00F0 9293       812            mov     _P1_3,c
00F2            813   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:181: LCD_pulse();
00F2 C002       814            push    ar2
00F4 120000     815            lcall   _LCD_pulse
00F7            816   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:182: Timer3us(40);
00F7 758228     817            mov     dpl,#0x28
00FA 120000     818            lcall   _Timer3us
00FD D002       819            pop     ar2
00FF            820   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:183: ACC=x; //Send low nible
00FF 8AE0       821            mov     _ACC,r2
0101            822   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:184: LCD_D7=ACC_3;
0101 A2E3       823            mov     c,_ACC_3
0103 9290       824            mov     _P1_0,c
0105            825   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:185: LCD_D6=ACC_2;
0105 A2E2       826            mov     c,_ACC_2
0107 9291       827            mov     _P1_1,c
0109            828   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:186: LCD_D5=ACC_1;
0109 A2E1       829            mov     c,_ACC_1
010B 9292       830            mov     _P1_2,c
010D            831   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:187: LCD_D4=ACC_0;
010D A2E0       832            mov     c,_ACC_0
010F 9293       833            mov     _P1_3,c
0111            834   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:188: LCD_pulse();
0111 020000     835            ljmp    _LCD_pulse
0114            836   ;------------------------------------------------------------
0114            837   ;Allocation info for local variables in function 'WriteData'
0114            838   ;------------------------------------------------------------
0114            839   ;x                         Allocated to registers r2 
0114            840   ;------------------------------------------------------------
0114            841   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:191: void WriteData (unsigned char x)
0114            842   ;        -----------------------------------------
0114            843   ;         function WriteData
0114            844   ;        -----------------------------------------
0114            845   _WriteData:
0114 AA82       846            mov     r2,dpl
0116            847   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:193: LCD_RS=1;
0116 D297       848            setb    _P1_7
0118            849   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:194: LCD_byte(x);
0118 8A82       850            mov     dpl,r2
011A 120000     851            lcall   _LCD_byte
011D            852   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:195: waitms(2);
011D 900002     853            mov     dptr,#0x0002
0120 020000     854            ljmp    _waitms
0123            855   ;------------------------------------------------------------
0123            856   ;Allocation info for local variables in function 'WriteCommand'
0123            857   ;------------------------------------------------------------
0123            858   ;x                         Allocated to registers r2 
0123            859   ;------------------------------------------------------------
0123            860   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:198: void WriteCommand (unsigned char x)
0123            861   ;        -----------------------------------------
0123            862   ;         function WriteCommand
0123            863   ;        -----------------------------------------
0123            864   _WriteCommand:
0123 AA82       865            mov     r2,dpl
0125            866   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:200: LCD_RS=0;
0125 C297       867            clr     _P1_7
0127            868   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:201: LCD_byte(x);
0127 8A82       869            mov     dpl,r2
0129 120000     870            lcall   _LCD_byte
012C            871   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:202: waitms(5);
012C 900005     872            mov     dptr,#0x0005
012F 020000     873            ljmp    _waitms
0132            874   ;------------------------------------------------------------
0132            875   ;Allocation info for local variables in function 'LCD_4BIT'
0132            876   ;------------------------------------------------------------
0132            877   ;------------------------------------------------------------
0132            878   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:205: void LCD_4BIT (void)
0132            879   ;        -----------------------------------------
0132            880   ;         function LCD_4BIT
0132            881   ;        -----------------------------------------
0132            882   _LCD_4BIT:
0132            883   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:207: LCD_E=0; // Resting state of LCD's enable is zero
0132 C2A0       884            clr     _P2_0
0134            885   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:209: waitms(20);
0134 900014     886            mov     dptr,#0x0014
0137 120000     887            lcall   _waitms
013A            888   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:211: WriteCommand(0x33);
013A 758233     889            mov     dpl,#0x33
013D 120000     890            lcall   _WriteCommand
0140            891   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:212: WriteCommand(0x33);
0140 758233     892            mov     dpl,#0x33
0143 120000     893            lcall   _WriteCommand
0146            894   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:213: WriteCommand(0x32); // Change to 4-bit mode
0146 758232     895            mov     dpl,#0x32
0149 120000     896            lcall   _WriteCommand
014C            897   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:216: WriteCommand(0x28);
014C 758228     898            mov     dpl,#0x28
014F 120000     899            lcall   _WriteCommand
0152            900   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:217: WriteCommand(0x0c);
0152 75820C     901            mov     dpl,#0x0C
0155 120000     902            lcall   _WriteCommand
0158            903   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:218: WriteCommand(0x01); // Clear screen command (takes some time)
0158 758201     904            mov     dpl,#0x01
015B 120000     905            lcall   _WriteCommand
015E            906   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:219: waitms(20); // Wait for clear screen command to finsih.
015E 900014     907            mov     dptr,#0x0014
0161 020000     908            ljmp    _waitms
0164            909   ;------------------------------------------------------------
0164            910   ;Allocation info for local variables in function 'LCDprint'
0164            911   ;------------------------------------------------------------
0164            912   ;line                      Allocated with name '_LCDprint_PARM_2'
0164            913   ;string                    Allocated to registers r2 r3 r4 
0164            914   ;j                         Allocated to registers r5 r6 
0164            915   ;------------------------------------------------------------
0164            916   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:222: void LCDprint(char * string, unsigned char line, bit clear)
0164            917   ;        -----------------------------------------
0164            918   ;         function LCDprint
0164            919   ;        -----------------------------------------
0164            920   _LCDprint:
0164 AA82       921            mov     r2,dpl
0166 AB83       922            mov     r3,dph
0168 ACF0       923            mov     r4,b
016A            924   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:226: WriteCommand(line==2?0xc0:0x80);
016A 7402       925            mov     a,#0x02
016C B5F8D0     926            cjne    a,_LCDprint_PARM_2,L011013?
016F 7DC0       927            mov     r5,#0xC0
0171 8000       928            sjmp    L011014?
0173            929   L011013?:
0173 7D80       930            mov     r5,#0x80
0175            931   L011014?:
0175 8D82       932            mov     dpl,r5
0177 C002       933            push    ar2
0179 C003       934            push    ar3
017B C004       935            push    ar4
017D 120000     936            lcall   _WriteCommand
0180            937   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:227: waitms(5);
0180 900005     938            mov     dptr,#0x0005
0183 120000     939            lcall   _waitms
0186 D004       940            pop     ar4
0188 D003       941            pop     ar3
018A D002       942            pop     ar2
018C            943   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:228: for(j=0; string[j]!=0; j++) WriteData(string[j]);// Write the message
018C 7D00       944            mov     r5,#0x00
018E 7E00       945            mov     r6,#0x00
0190            946   L011003?:
0190 ED         947            mov     a,r5
0191 2A         948            add     a,r2
0192 FF         949            mov     r7,a
0193 EE         950            mov     a,r6
0194 3B         951            addc    a,r3
0195 F8         952            mov     r0,a
0196 8C01       953            mov     ar1,r4
0198 8F82       954            mov     dpl,r7
019A 8883       955            mov     dph,r0
019C 89F0       956            mov     b,r1
019E 120000     957            lcall   __gptrget
01A1 FF         958            mov     r7,a
01A2 6000       959            jz      L011006?
01A4 8F82       960            mov     dpl,r7
01A6 C002       961            push    ar2
01A8 C003       962            push    ar3
01AA C004       963            push    ar4
01AC C005       964            push    ar5
01AE C006       965            push    ar6
01B0 120000     966            lcall   _WriteData
01B3 D006       967            pop     ar6
01B5 D005       968            pop     ar5
01B7 D004       969            pop     ar4
01B9 D003       970            pop     ar3
01BB D002       971            pop     ar2
01BD 0D         972            inc     r5
01BE BD0050     973            cjne    r5,#0x00,L011003?
01C1 0E         974            inc     r6
01C2 8000       975            sjmp    L011003?
01C4            976   L011006?:
01C4            977   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:229: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01C4 30A810     978            jnb     _LCDprint_PARM_3,L011011?
01C7 8D02       979            mov     ar2,r5
01C9 8E03       980            mov     ar3,r6
01CB            981   L011007?:
01CB C3         982            clr     c
01CC EA         983            mov     a,r2
01CD 9410       984            subb    a,#0x10
01CF EB         985            mov     a,r3
01D0 6480       986            xrl     a,#0x80
01D2 9480       987            subb    a,#0x80
01D4 5000       988            jnc     L011011?
01D6 758220     989            mov     dpl,#0x20
01D9 C002       990            push    ar2
01DB C003       991            push    ar3
01DD 120000     992            lcall   _WriteData
01E0 D003       993            pop     ar3
01E2 D002       994            pop     ar2
01E4 0A         995            inc     r2
01E5 BA0050     996            cjne    r2,#0x00,L011007?
01E8 0B         997            inc     r3
01E9 8000       998            sjmp    L011007?
01EB            999   L011011?:
01EB 22        1000            ret
01EC           1001   ;------------------------------------------------------------
01EC           1002   ;Allocation info for local variables in function 'TIMER0_Init'
01EC           1003   ;------------------------------------------------------------
01EC           1004   ;------------------------------------------------------------
01EC           1005   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:232: void TIMER0_Init(void)
01EC           1006   ;        -----------------------------------------
01EC           1007   ;         function TIMER0_Init
01EC           1008   ;        -----------------------------------------
01EC           1009   _TIMER0_Init:
01EC           1010   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:234: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
01EC 5389F0    1011            anl     _TMOD,#0xF0
01EF           1012   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:235: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
01EF 438901    1013            orl     _TMOD,#0x01
01F2           1014   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:236: TR0=0; // Stop Timer/Counter 0
01F2 C28C      1015            clr     _TR0
01F4 22        1016            ret
01F5           1017   ;------------------------------------------------------------
01F5           1018   ;Allocation info for local variables in function 'InitPinADC'
01F5           1019   ;------------------------------------------------------------
01F5           1020   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
01F5           1021   ;portno                    Allocated to registers r2 
01F5           1022   ;mask                      Allocated to registers r3 
01F5           1023   ;------------------------------------------------------------
01F5           1024   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:241: void InitPinADC (unsigned char portno, unsigned char pinno)
01F5           1025   ;        -----------------------------------------
01F5           1026   ;         function InitPinADC
01F5           1027   ;        -----------------------------------------
01F5           1028   _InitPinADC:
01F5 AA82      1029            mov     r2,dpl
01F7           1030   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:245: mask=1<<pinno;
01F7 8548F0    1031            mov     b,_InitPinADC_PARM_2
01FA 05F0      1032            inc     b
01FC 7401      1033            mov     a,#0x01
01FE 8000      1034            sjmp    L013013?
0200           1035   L013011?:
0200 25E0      1036            add     a,acc
0202           1037   L013013?:
0202 D5F0D0    1038            djnz    b,L013011?
0205 FB        1039            mov     r3,a
0206           1040   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:247: SFRPAGE = 0x20;
0206 75A720    1041            mov     _SFRPAGE,#0x20
0209           1042   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:248: switch (portno)
0209 BA0010    1043            cjne    r2,#0x00,L013014?
020C 8000      1044            sjmp    L013001?
020E           1045   L013014?:
020E BA0190    1046            cjne    r2,#0x01,L013015?
0211 8000      1047            sjmp    L013002?
0213           1048   L013015?:
0213           1049   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:250: case 0:
0213 BA0210    1050            cjne    r2,#0x02,L013005?
0216 8000      1051            sjmp    L013003?
0218           1052   L013001?:
0218           1053   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:251: P0MDIN &= (~mask); // Set pin as analog input
0218 EB        1054            mov     a,r3
0219 F4        1055            cpl     a
021A FA        1056            mov     r2,a
021B 52F1      1057            anl     _P0MDIN,a
021D           1058   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:252: P0SKIP |= mask; // Skip Crossbar decoding for this pin
021D EB        1059            mov     a,r3
021E 42D4      1060            orl     _P0SKIP,a
0220           1061   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:253: break;
0220           1062   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:254: case 1:
0220 8000      1063            sjmp    L013005?
0222           1064   L013002?:
0222           1065   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:255: P1MDIN &= (~mask); // Set pin as analog input
0222 EB        1066            mov     a,r3
0223 F4        1067            cpl     a
0224 FA        1068            mov     r2,a
0225 52F2      1069            anl     _P1MDIN,a
0227           1070   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:256: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0227 EB        1071            mov     a,r3
0228 42D5      1072            orl     _P1SKIP,a
022A           1073   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:257: break;
022A           1074   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:258: case 2:
022A 8000      1075            sjmp    L013005?
022C           1076   L013003?:
022C           1077   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:259: P2MDIN &= (~mask); // Set pin as analog input
022C EB        1078            mov     a,r3
022D F4        1079            cpl     a
022E FA        1080            mov     r2,a
022F 52F3      1081            anl     _P2MDIN,a
0231           1082   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:260: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0231 EB        1083            mov     a,r3
0232 42CC      1084            orl     _P2SKIP,a
0234           1085   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:264: }
0234           1086   L013005?:
0234           1087   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:265: SFRPAGE = 0x00;
0234 75A700    1088            mov     _SFRPAGE,#0x00
0237 22        1089            ret
0238           1090   ;------------------------------------------------------------
0238           1091   ;Allocation info for local variables in function 'ADC_at_Pin'
0238           1092   ;------------------------------------------------------------
0238           1093   ;pin                       Allocated to registers 
0238           1094   ;------------------------------------------------------------
0238           1095   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:269: unsigned int ADC_at_Pin(unsigned char pin)
0238           1096   ;        -----------------------------------------
0238           1097   ;         function ADC_at_Pin
0238           1098   ;        -----------------------------------------
0238           1099   _ADC_at_Pin:
0238 8582BB    1100            mov     _ADC0MX,dpl
023B           1101   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:272: ADINT = 0;
023B C2ED      1102            clr     _ADINT
023D           1103   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:273: ADBUSY = 1;     // Convert voltage at the pin
023D D2EC      1104            setb    _ADBUSY
023F           1105   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:274: while (!ADINT); // Wait for conversion to complete
023F           1106   L014001?:
023F 30ED90    1107            jnb     _ADINT,L014001?
0242           1108   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:275: return (ADC0);
0242 85BD82    1109            mov     dpl,_ADC0
0245 85BE83    1110            mov     dph,(_ADC0 >> 8)
0248 22        1111            ret
0249           1112   ;------------------------------------------------------------
0249           1113   ;Allocation info for local variables in function 'Volts_at_Pin'
0249           1114   ;------------------------------------------------------------
0249           1115   ;pin                       Allocated to registers r2 
0249           1116   ;------------------------------------------------------------
0249           1117   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:278: float Volts_at_Pin(unsigned char pin)
0249           1118   ;        -----------------------------------------
0249           1119   ;         function Volts_at_Pin
0249           1120   ;        -----------------------------------------
0249           1121   _Volts_at_Pin:
0249           1122   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:280: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0249 120000    1123            lcall   _ADC_at_Pin
024C 120000    1124            lcall   ___uint2fs
024F AA82      1125            mov     r2,dpl
0251 AB83      1126            mov     r3,dph
0253 ACF0      1127            mov     r4,b
0255 FD        1128            mov     r5,a
0256 C002      1129            push    ar2
0258 C003      1130            push    ar3
025A C004      1131            push    ar4
025C C005      1132            push    ar5
025E 90923A    1133            mov     dptr,#0x923A
0261 75F053    1134            mov     b,#0x53
0264 7440      1135            mov     a,#0x40
0266 120000    1136            lcall   ___fsmul
0269 AA82      1137            mov     r2,dpl
026B AB83      1138            mov     r3,dph
026D ACF0      1139            mov     r4,b
026F FD        1140            mov     r5,a
0270 E581      1141            mov     a,sp
0272 24FC      1142            add     a,#0xfc
0274 F581      1143            mov     sp,a
0276 E4        1144            clr     a
0277 C0E0      1145            push    acc
0279 74FC      1146            mov     a,#0xFC
027B C0E0      1147            push    acc
027D 747F      1148            mov     a,#0x7F
027F C0E0      1149            push    acc
0281 7446      1150            mov     a,#0x46
0283 C0E0      1151            push    acc
0285 8A82      1152            mov     dpl,r2
0287 8B83      1153            mov     dph,r3
0289 8CF0      1154            mov     b,r4
028B ED        1155            mov     a,r5
028C 120000    1156            lcall   ___fsdiv
028F AA82      1157            mov     r2,dpl
0291 AB83      1158            mov     r3,dph
0293 ACF0      1159            mov     r4,b
0295 FD        1160            mov     r5,a
0296 E581      1161            mov     a,sp
0298 24FC      1162            add     a,#0xfc
029A F581      1163            mov     sp,a
029C 8A82      1164            mov     dpl,r2
029E 8B83      1165            mov     dph,r3
02A0 8CF0      1166            mov     b,r4
02A2 ED        1167            mov     a,r5
02A3 22        1168            ret
02A4           1169   ;------------------------------------------------------------
02A4           1170   ;Allocation info for local variables in function 'Get_ADC'
02A4           1171   ;------------------------------------------------------------
02A4           1172   ;------------------------------------------------------------
02A4           1173   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:283: unsigned int Get_ADC (void)
02A4           1174   ;        -----------------------------------------
02A4           1175   ;         function Get_ADC
02A4           1176   ;        -----------------------------------------
02A4           1177   _Get_ADC:
02A4           1178   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:285: ADINT = 0;
02A4 C2ED      1179            clr     _ADINT
02A6           1180   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:286: ADBUSY = 1;
02A6 D2EC      1181            setb    _ADBUSY
02A8           1182   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:287: while (!ADINT); // Wait for conversion to complete
02A8           1183   L016001?:
02A8 30EDD0    1184            jnb     _ADINT,L016001?
02AB           1185   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:288: return (ADC0);
02AB 85BD82    1186            mov     dpl,_ADC0
02AE 85BE83    1187            mov     dph,(_ADC0 >> 8)
02B1 22        1188            ret
02B2           1189   ;------------------------------------------------------------
02B2           1190   ;Allocation info for local variables in function 'main'
02B2           1191   ;------------------------------------------------------------
02B2           1192   ;period                    Allocated to registers r2 r3 r4 r5 
02B2           1193   ;mst                       Allocated with name '_main_mst_1_97'
02B2           1194   ;i                         Allocated with name '_main_i_1_97'
02B2           1195   ;vmax1                     Allocated with name '_main_vmax1_1_97'
02B2           1196   ;vmax2                     Allocated with name '_main_vmax2_1_97'
02B2           1197   ;phase_diff                Allocated to registers r2 r3 r4 r5 
02B2           1198   ;degrees                   Allocated with name '_main_degrees_1_97'
02B2           1199   ;p_n                       Allocated with name '_main_p_n_1_97'
02B2           1200   ;sloc0                     Allocated with name '_main_sloc0_1_0'
02B2           1201   ;v                         Allocated with name '_main_v_1_97'
02B2           1202   ;buff1                     Allocated with name '_main_buff1_1_97'
02B2           1203   ;buff2                     Allocated with name '_main_buff2_1_97'
02B2           1204   ;------------------------------------------------------------
02B2           1205   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:293: void main (void)
02B2           1206   ;        -----------------------------------------
02B2           1207   ;         function main
02B2           1208   ;        -----------------------------------------
02B2           1209   _main:
02B2           1210   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:300: float mst = 0.0;
02B2 754000    1211            mov     _main_mst_1_97,#0x00
02B5 754100    1212            mov     (_main_mst_1_97 + 1),#0x00
02B8 754200    1213            mov     (_main_mst_1_97 + 2),#0x00
02BB 754300    1214            mov     (_main_mst_1_97 + 3),#0x00
02BE           1215   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:302: float vmax1=0.0;
02BE 75D000    1216            mov     _main_vmax1_1_97,#0x00
02C1 75D100    1217            mov     (_main_vmax1_1_97 + 1),#0x00
02C4 75D200    1218            mov     (_main_vmax1_1_97 + 2),#0x00
02C7 75D300    1219            mov     (_main_vmax1_1_97 + 3),#0x00
02CA           1220   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:303: float vmax2=0.0;
02CA 752000    1221            mov     _main_vmax2_1_97,#0x00
02CD 752100    1222            mov     (_main_vmax2_1_97 + 1),#0x00
02D0 752200    1223            mov     (_main_vmax2_1_97 + 2),#0x00
02D3 752300    1224            mov     (_main_vmax2_1_97 + 3),#0x00
02D6           1225   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:306: float p_n=0.0;
02D6 75B000    1226            mov     _main_p_n_1_97,#0x00
02D9 75B100    1227            mov     (_main_p_n_1_97 + 1),#0x00
02DC 75B200    1228            mov     (_main_p_n_1_97 + 2),#0x00
02DF 75B300    1229            mov     (_main_p_n_1_97 + 3),#0x00
02E2           1230   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:308: TIMER0_Init();
02E2 120000    1231            lcall   _TIMER0_Init
02E5           1232   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:309: LCD_4BIT();
02E5 120000    1233            lcall   _LCD_4BIT
02E8           1234   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:311: waitms(500); // Give PuTTy a chance to start before sending
02E8 9001F4    1235            mov     dptr,#0x01F4
02EB 120000    1236            lcall   _waitms
02EE           1237   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:312: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
02EE 7410      1238            mov     a,#__str_0
02F0 C0E0      1239            push    acc
02F2 74BD      1240            mov     a,#(__str_0 >> 8)
02F4 C0E0      1241            push    acc
02F6 7480      1242            mov     a,#0x80
02F8 C0E0      1243            push    acc
02FA 120000    1244            lcall   _printf
02FD 1581      1245            dec     sp
02FF 1581      1246            dec     sp
0301 1581      1247            dec     sp
0303           1248   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:317: __FILE__, __DATE__, __TIME__);
0303           1249   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:316: "Compiled: %s, %s\n\n",
0303 7490      1250            mov     a,#__str_4
0305 C0E0      1251            push    acc
0307 74BD      1252            mov     a,#(__str_4 >> 8)
0309 C0E0      1253            push    acc
030B 7480      1254            mov     a,#0x80
030D C0E0      1255            push    acc
030F 74D0      1256            mov     a,#__str_3
0311 C0E0      1257            push    acc
0313 74BD      1258            mov     a,#(__str_3 >> 8)
0315 C0E0      1259            push    acc
0317 7480      1260            mov     a,#0x80
0319 C0E0      1261            push    acc
031B 7410      1262            mov     a,#__str_2
031D C0E0      1263            push    acc
031F 74BE      1264            mov     a,#(__str_2 >> 8)
0321 C0E0      1265            push    acc
0323 7480      1266            mov     a,#0x80
0325 C0E0      1267            push    acc
0327 7450      1268            mov     a,#__str_1
0329 C0E0      1269            push    acc
032B 74BE      1270            mov     a,#(__str_1 >> 8)
032D C0E0      1271            push    acc
032F 7480      1272            mov     a,#0x80
0331 C0E0      1273            push    acc
0333 120000    1274            lcall   _printf
0336 E581      1275            mov     a,sp
0338 24F4      1276            add     a,#0xf4
033A F581      1277            mov     sp,a
033C           1278   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:319: InitPinADC(1, 4); // Configure P1.6 as analog input
033C 754804    1279            mov     _InitPinADC_PARM_2,#0x04
033F 758201    1280            mov     dpl,#0x01
0342 120000    1281            lcall   _InitPinADC
0345           1282   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:320: InitPinADC(1, 5); // Configure P1.7 as analog input
0345 754805    1283            mov     _InitPinADC_PARM_2,#0x05
0348 758201    1284            mov     dpl,#0x01
034B 120000    1285            lcall   _InitPinADC
034E           1286   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:322: InitADC();
034E 120000    1287            lcall   _InitADC
0351           1288   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:326: for (i = 0; i < 10; i++){
0351           1289   L017073?:
0351 E4        1290            clr     a
0352 F580      1291            mov     _main_i_1_97,a
0354 F581      1292            mov     (_main_i_1_97 + 1),a
0356           1293   L017052?:
0356 C3        1294            clr     c
0357 E580      1295            mov     a,_main_i_1_97
0359 940A      1296            subb    a,#0x0A
035B E581      1297            mov     a,(_main_i_1_97 + 1)
035D 6480      1298            xrl     a,#0x80
035F 9480      1299            subb    a,#0x80
0361 4000      1300            jc      L017092?
0363 020000    1301            ljmp    L017055?
0366           1302   L017092?:
0366           1303   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:328: TL0=0; 
0366 758A00    1304            mov     _TL0,#0x00
0369           1305   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:329: TH0=0;
0369 758C00    1306            mov     _TH0,#0x00
036C           1307   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:330: TF0=0;
036C C28D      1308            clr     _TF0
036E           1309   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:331: overflow_count=0;
036E 753800    1310            mov     _overflow_count,#0x00
0371           1311   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:332: while(P0_1!=0); // Wait for the signal to be zero
0371           1312   L017001?:
0371 208190    1313            jb      _P0_1,L017001?
0374           1314   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:333: while(P0_1!=1); // Wait for the signal to be one
0374           1315   L017004?:
0374 3081D0    1316            jnb     _P0_1,L017004?
0377           1317   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:334: TR0=1; // Start the timer
0377 D28C      1318            setb    _TR0
0379           1319   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:335: while(P0_1!=0) // Wait for the signal to be zero
0379           1320   L017009?:
0379 308150    1321            jnb     _P0_1,L017014?
037C           1322   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:337: if(TF0==1) // Did the 16-bit timer overflow?
037C           1323   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:339: TF0=0;
037C 108D90    1324            jbc     _TF0,L017096?
037F 8000      1325            sjmp    L017009?
0381           1326   L017096?:
0381           1327   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:340: overflow_count++;
0381 0538      1328            inc     _overflow_count
0383           1329   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:343: while(P0_1!=1) // Wait for the signal to be one
0383 8000      1330            sjmp    L017009?
0385           1331   L017014?:
0385 2081D0    1332            jb      _P0_1,L017016?
0388           1333   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:345: if(TF0==1) // Did the 16-bit timer overflow?
0388           1334   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:347: TF0=0;
0388 108D10    1335            jbc     _TF0,L017098?
038B 8000      1336            sjmp    L017014?
038D           1337   L017098?:
038D           1338   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:348: overflow_count++;
038D 0538      1339            inc     _overflow_count
038F 8000      1340            sjmp    L017014?
0391           1341   L017016?:
0391           1342   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:351: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
0391 C28C      1343            clr     _TR0
0393           1344   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:352: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
0393 853882    1345            mov     dpl,_overflow_count
0396 120000    1346            lcall   ___uchar2fs
0399 AE82      1347            mov     r6,dpl
039B AF83      1348            mov     r7,dph
039D AAF0      1349            mov     r2,b
039F FB        1350            mov     r3,a
03A0 C006      1351            push    ar6
03A2 C007      1352            push    ar7
03A4 C002      1353            push    ar2
03A6 C003      1354            push    ar3
03A8 900000    1355            mov     dptr,#0x0000
03AB 75F080    1356            mov     b,#0x80
03AE 7447      1357            mov     a,#0x47
03B0 120000    1358            lcall   ___fsmul
03B3 8582F0    1359            mov     _main_sloc0_1_0,dpl
03B6 8583F1    1360            mov     (_main_sloc0_1_0 + 1),dph
03B9 85F0F2    1361            mov     (_main_sloc0_1_0 + 2),b
03BC F5F3      1362            mov     (_main_sloc0_1_0 + 3),a
03BE E581      1363            mov     a,sp
03C0 24FC      1364            add     a,#0xfc
03C2 F581      1365            mov     sp,a
03C4 858C82    1366            mov     dpl,_TH0
03C7 120000    1367            lcall   ___uchar2fs
03CA AE82      1368            mov     r6,dpl
03CC AF83      1369            mov     r7,dph
03CE AAF0      1370            mov     r2,b
03D0 FB        1371            mov     r3,a
03D1 C006      1372            push    ar6
03D3 C007      1373            push    ar7
03D5 C002      1374            push    ar2
03D7 C003      1375            push    ar3
03D9 900000    1376            mov     dptr,#0x0000
03DC 75F080    1377            mov     b,#0x80
03DF 7443      1378            mov     a,#0x43
03E1 120000    1379            lcall   ___fsmul
03E4 AA82      1380            mov     r2,dpl
03E6 AB83      1381            mov     r3,dph
03E8 ACF0      1382            mov     r4,b
03EA FD        1383            mov     r5,a
03EB E581      1384            mov     a,sp
03ED 24FC      1385            add     a,#0xfc
03EF F581      1386            mov     sp,a
03F1 C002      1387            push    ar2
03F3 C003      1388            push    ar3
03F5 C004      1389            push    ar4
03F7 C005      1390            push    ar5
03F9 85F082    1391            mov     dpl,_main_sloc0_1_0
03FC 85F183    1392            mov     dph,(_main_sloc0_1_0 + 1)
03FF 85F2F0    1393            mov     b,(_main_sloc0_1_0 + 2)
0402 E5F3      1394            mov     a,(_main_sloc0_1_0 + 3)
0404 120000    1395            lcall   ___fsadd
0407 8582F0    1396            mov     _main_sloc0_1_0,dpl
040A 8583F1    1397            mov     (_main_sloc0_1_0 + 1),dph
040D 85F0F2    1398            mov     (_main_sloc0_1_0 + 2),b
0410 F5F3      1399            mov     (_main_sloc0_1_0 + 3),a
0412 E581      1400            mov     a,sp
0414 24FC      1401            add     a,#0xfc
0416 F581      1402            mov     sp,a
0418 AE8A      1403            mov     r6,_TL0
041A 7F00      1404            mov     r7,#0x00
041C 8E82      1405            mov     dpl,r6
041E 8F83      1406            mov     dph,r7
0420 120000    1407            lcall   ___sint2fs
0423 AE82      1408            mov     r6,dpl
0425 AF83      1409            mov     r7,dph
0427 AAF0      1410            mov     r2,b
0429 FB        1411            mov     r3,a
042A C006      1412            push    ar6
042C C007      1413            push    ar7
042E C002      1414            push    ar2
0430 C003      1415            push    ar3
0432 85F082    1416            mov     dpl,_main_sloc0_1_0
0435 85F183    1417            mov     dph,(_main_sloc0_1_0 + 1)
0438 85F2F0    1418            mov     b,(_main_sloc0_1_0 + 2)
043B E5F3      1419            mov     a,(_main_sloc0_1_0 + 3)
043D 120000    1420            lcall   ___fsadd
0440 AA82      1421            mov     r2,dpl
0442 AB83      1422            mov     r3,dph
0444 ACF0      1423            mov     r4,b
0446 FD        1424            mov     r5,a
0447 E581      1425            mov     a,sp
0449 24FC      1426            add     a,#0xfc
044B F581      1427            mov     sp,a
044D C002      1428            push    ar2
044F C003      1429            push    ar3
0451 C004      1430            push    ar4
0453 C005      1431            push    ar5
0455 90F4FC    1432            mov     dptr,#0xF4FC
0458 75F032    1433            mov     b,#0x32
045B 7434      1434            mov     a,#0x34
045D 120000    1435            lcall   ___fsmul
0460 AA82      1436            mov     r2,dpl
0462 AB83      1437            mov     r3,dph
0464 ACF0      1438            mov     r4,b
0466 FD        1439            mov     r5,a
0467 E581      1440            mov     a,sp
0469 24FC      1441            add     a,#0xfc
046B F581      1442            mov     sp,a
046D           1443   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:353: if (period > mst){
046D C002      1444            push    ar2
046F C003      1445            push    ar3
0471 C004      1446            push    ar4
0473 C005      1447            push    ar5
0475 C040      1448            push    _main_mst_1_97
0477 C041      1449            push    (_main_mst_1_97 + 1)
0479 C042      1450            push    (_main_mst_1_97 + 2)
047B C043      1451            push    (_main_mst_1_97 + 3)
047D 8A82      1452            mov     dpl,r2
047F 8B83      1453            mov     dph,r3
0481 8CF0      1454            mov     b,r4
0483 ED        1455            mov     a,r5
0484 120000    1456            lcall   ___fsgt
0487 AE82      1457            mov     r6,dpl
0489 E581      1458            mov     a,sp
048B 24FC      1459            add     a,#0xfc
048D F581      1460            mov     sp,a
048F D005      1461            pop     ar5
0491 D004      1462            pop     ar4
0493 D003      1463            pop     ar3
0495 D002      1464            pop     ar2
0497 EE        1465            mov     a,r6
0498 6000      1466            jz      L017018?
049A           1467   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:354: mst = period;
049A 8A40      1468            mov     _main_mst_1_97,r2
049C 8B41      1469            mov     (_main_mst_1_97 + 1),r3
049E 8C42      1470            mov     (_main_mst_1_97 + 2),r4
04A0 8D43      1471            mov     (_main_mst_1_97 + 3),r5
04A2           1472   L017018?:
04A2           1473   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:356: waitms(1);
04A2 900001    1474            mov     dptr,#0x0001
04A5 120000    1475            lcall   _waitms
04A8           1476   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:326: for (i = 0; i < 10; i++){
04A8 0580      1477            inc     _main_i_1_97
04AA E4        1478            clr     a
04AB B58090    1479            cjne    a,_main_i_1_97,L017100?
04AE 0581      1480            inc     (_main_i_1_97 + 1)
04B0           1481   L017100?:
04B0 020000    1482            ljmp    L017052?
04B3           1483   L017055?:
04B3           1484   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:358: for(i=0;i<20;i++){
04B3 7A00      1485            mov     r2,#0x00
04B5 7B00      1486            mov     r3,#0x00
04B7           1487   L017056?:
04B7 C3        1488            clr     c
04B8 EA        1489            mov     a,r2
04B9 9414      1490            subb    a,#0x14
04BB EB        1491            mov     a,r3
04BC 6480      1492            xrl     a,#0x80
04BE 9480      1493            subb    a,#0x80
04C0 4000      1494            jc      L017101?
04C2 020000    1495            ljmp    L017059?
04C5           1496   L017101?:
04C5           1497   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:359: v[0] = Volts_at_Pin(QFP32_MUX_P1_4);
04C5 75820A    1498            mov     dpl,#0x0A
04C8 C002      1499            push    ar2
04CA C003      1500            push    ar3
04CC 120000    1501            lcall   _Volts_at_Pin
04CF AC82      1502            mov     r4,dpl
04D1 AD83      1503            mov     r5,dph
04D3 AEF0      1504            mov     r6,b
04D5 FF        1505            mov     r7,a
04D6 7830      1506            mov     r0,#_main_v_1_97
04D8 A604      1507            mov     @r0,ar4
04DA 08        1508            inc     r0
04DB A605      1509            mov     @r0,ar5
04DD 08        1510            inc     r0
04DE A606      1511            mov     @r0,ar6
04E0 08        1512            inc     r0
04E1 A607      1513            mov     @r0,ar7
04E3           1514   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:360: v[1] = Volts_at_Pin(QFP32_MUX_P1_5);
04E3 75820B    1515            mov     dpl,#0x0B
04E6 120000    1516            lcall   _Volts_at_Pin
04E9 AC82      1517            mov     r4,dpl
04EB AD83      1518            mov     r5,dph
04ED AEF0      1519            mov     r6,b
04EF FF        1520            mov     r7,a
04F0 7834      1521            mov     r0,#(_main_v_1_97 + 0x0004)
04F2 A604      1522            mov     @r0,ar4
04F4 08        1523            inc     r0
04F5 A605      1524            mov     @r0,ar5
04F7 08        1525            inc     r0
04F8 A606      1526            mov     @r0,ar6
04FA 08        1527            inc     r0
04FB A607      1528            mov     @r0,ar7
04FD           1529   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:361: if(vmax1<v[0]){
04FD 7830      1530            mov     r0,#_main_v_1_97
04FF 8604      1531            mov     ar4,@r0
0501 08        1532            inc     r0
0502 8605      1533            mov     ar5,@r0
0504 08        1534            inc     r0
0505 8606      1535            mov     ar6,@r0
0507 08        1536            inc     r0
0508 8607      1537            mov     ar7,@r0
050A C004      1538            push    ar4
050C C005      1539            push    ar5
050E C006      1540            push    ar6
0510 C007      1541            push    ar7
0512 85D082    1542            mov     dpl,_main_vmax1_1_97
0515 85D183    1543            mov     dph,(_main_vmax1_1_97 + 1)
0518 85D2F0    1544            mov     b,(_main_vmax1_1_97 + 2)
051B E5D3      1545            mov     a,(_main_vmax1_1_97 + 3)
051D 120000    1546            lcall   ___fslt
0520 AC82      1547            mov     r4,dpl
0522 E581      1548            mov     a,sp
0524 24FC      1549            add     a,#0xfc
0526 F581      1550            mov     sp,a
0528 D003      1551            pop     ar3
052A D002      1552            pop     ar2
052C EC        1553            mov     a,r4
052D 6000      1554            jz      L017020?
052F           1555   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:362: vmax1=v[0];
052F 7830      1556            mov     r0,#_main_v_1_97
0531 86D0      1557            mov     _main_vmax1_1_97,@r0
0533 08        1558            inc     r0
0534 86D1      1559            mov     (_main_vmax1_1_97 + 1),@r0
0536 08        1560            inc     r0
0537 86D2      1561            mov     (_main_vmax1_1_97 + 2),@r0
0539 08        1562            inc     r0
053A 86D3      1563            mov     (_main_vmax1_1_97 + 3),@r0
053C           1564   L017020?:
053C           1565   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:364: if(vmax2<v[1]){
053C 7834      1566            mov     r0,#(_main_v_1_97 + 0x0004)
053E 8604      1567            mov     ar4,@r0
0540 08        1568            inc     r0
0541 8605      1569            mov     ar5,@r0
0543 08        1570            inc     r0
0544 8606      1571            mov     ar6,@r0
0546 08        1572            inc     r0
0547 8607      1573            mov     ar7,@r0
0549 C002      1574            push    ar2
054B C003      1575            push    ar3
054D C004      1576            push    ar4
054F C005      1577            push    ar5
0551 C006      1578            push    ar6
0553 C007      1579            push    ar7
0555 852082    1580            mov     dpl,_main_vmax2_1_97
0558 852183    1581            mov     dph,(_main_vmax2_1_97 + 1)
055B 8522F0    1582            mov     b,(_main_vmax2_1_97 + 2)
055E E523      1583            mov     a,(_main_vmax2_1_97 + 3)
0560 120000    1584            lcall   ___fslt
0563 AC82      1585            mov     r4,dpl
0565 E581      1586            mov     a,sp
0567 24FC      1587            add     a,#0xfc
0569 F581      1588            mov     sp,a
056B D003      1589            pop     ar3
056D D002      1590            pop     ar2
056F EC        1591            mov     a,r4
0570 6000      1592            jz      L017022?
0572           1593   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:365: vmax2=v[1];
0572 7834      1594            mov     r0,#(_main_v_1_97 + 0x0004)
0574 8620      1595            mov     _main_vmax2_1_97,@r0
0576 08        1596            inc     r0
0577 8621      1597            mov     (_main_vmax2_1_97 + 1),@r0
0579 08        1598            inc     r0
057A 8622      1599            mov     (_main_vmax2_1_97 + 2),@r0
057C 08        1600            inc     r0
057D 8623      1601            mov     (_main_vmax2_1_97 + 3),@r0
057F           1602   L017022?:
057F           1603   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:367: waitms(1); 
057F 900001    1604            mov     dptr,#0x0001
0582 C002      1605            push    ar2
0584 C003      1606            push    ar3
0586 120000    1607            lcall   _waitms
0589 D003      1608            pop     ar3
058B D002      1609            pop     ar2
058D           1610   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:358: for(i=0;i<20;i++){
058D 0A        1611            inc     r2
058E BA0050    1612            cjne    r2,#0x00,L017104?
0591 0B        1613            inc     r3
0592           1614   L017104?:
0592 020000    1615            ljmp    L017056?
0595           1616   L017059?:
0595           1617   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:369: printf("\nperiod=%3.2f\r",mst*1000);
0595 C040      1618            push    _main_mst_1_97
0597 C041      1619            push    (_main_mst_1_97 + 1)
0599 C042      1620            push    (_main_mst_1_97 + 2)
059B C043      1621            push    (_main_mst_1_97 + 3)
059D 900000    1622            mov     dptr,#0x0000
05A0 75F07A    1623            mov     b,#0x7A
05A3 7444      1624            mov     a,#0x44
05A5 120000    1625            lcall   ___fsmul
05A8 AA82      1626            mov     r2,dpl
05AA AB83      1627            mov     r3,dph
05AC ACF0      1628            mov     r4,b
05AE FD        1629            mov     r5,a
05AF E581      1630            mov     a,sp
05B1 24FC      1631            add     a,#0xfc
05B3 F581      1632            mov     sp,a
05B5 C002      1633            push    ar2
05B7 C003      1634            push    ar3
05B9 C004      1635            push    ar4
05BB C005      1636            push    ar5
05BD 7490      1637            mov     a,#__str_5
05BF C0E0      1638            push    acc
05C1 74C4      1639            mov     a,#(__str_5 >> 8)
05C3 C0E0      1640            push    acc
05C5 7480      1641            mov     a,#0x80
05C7 C0E0      1642            push    acc
05C9 120000    1643            lcall   _printf
05CC E581      1644            mov     a,sp
05CE 24F9      1645            add     a,#0xf9
05D0 F581      1646            mov     sp,a
05D2           1647   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:370: printf ("\nV@P1_4=%7.5fV, V@P1_5=%7.5fV\r",vmax1, vmax2);
05D2 C020      1648            push    _main_vmax2_1_97
05D4 C021      1649            push    (_main_vmax2_1_97 + 1)
05D6 C022      1650            push    (_main_vmax2_1_97 + 2)
05D8 C023      1651            push    (_main_vmax2_1_97 + 3)
05DA C0D0      1652            push    _main_vmax1_1_97
05DC C0D1      1653            push    (_main_vmax1_1_97 + 1)
05DE C0D2      1654            push    (_main_vmax1_1_97 + 2)
05E0 C0D3      1655            push    (_main_vmax1_1_97 + 3)
05E2 74D0      1656            mov     a,#__str_6
05E4 C0E0      1657            push    acc
05E6 74C4      1658            mov     a,#(__str_6 >> 8)
05E8 C0E0      1659            push    acc
05EA 7480      1660            mov     a,#0x80
05EC C0E0      1661            push    acc
05EE 120000    1662            lcall   _printf
05F1 E581      1663            mov     a,sp
05F3 24F5      1664            add     a,#0xf5
05F5 F581      1665            mov     sp,a
05F7           1666   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:372: if(P2_6==0) {
05F7 20A610    1667            jb      _P2_6,L017031?
05FA           1668   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:373: while(P0_1==0&&P0_2==0);
05FA           1669   L017024?:
05FA 208190    1670            jb      _P0_1,L017026?
05FD 308250    1671            jnb     _P0_2,L017024?
0600           1672   L017026?:
0600           1673   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:374: if(P0_1==1){
0600 3081D0    1674            jnb     _P0_1,L017028?
0603           1675   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:375: p_n=1;
0603 75B000    1676            mov     _main_p_n_1_97,#0x00
0606 75B100    1677            mov     (_main_p_n_1_97 + 1),#0x00
0609 75B280    1678            mov     (_main_p_n_1_97 + 2),#0x80
060C 75B33F    1679            mov     (_main_p_n_1_97 + 3),#0x3F
060F 8000      1680            sjmp    L017031?
0611           1681   L017028?:
0611           1682   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:378: p_n=-1;
0611 75B000    1683            mov     _main_p_n_1_97,#0x00
0614 75B100    1684            mov     (_main_p_n_1_97 + 1),#0x00
0617 75B280    1685            mov     (_main_p_n_1_97 + 2),#0x80
061A 75B3BF    1686            mov     (_main_p_n_1_97 + 3),#0xBF
061D           1687   L017031?:
061D           1688   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:381: waitms(1);
061D 900001    1689            mov     dptr,#0x0001
0620 120000    1690            lcall   _waitms
0623           1691   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:382: TL0=0; TH0=0; TF0=0;overflow_count=0;
0623 758A00    1692            mov     _TL0,#0x00
0626 758C00    1693            mov     _TH0,#0x00
0629 C28D      1694            clr     _TF0
062B 753800    1695            mov     _overflow_count,#0x00
062E           1696   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:383: while(P0_1==1);
062E           1697   L017032?:
062E 208110    1698            jb      _P0_1,L017032?
0631           1699   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:384: while(P0_1==0);
0631           1700   L017035?:
0631 308150    1701            jnb     _P0_1,L017035?
0634           1702   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:385: while(P0_1==1){
0634           1703   L017044?:
0634 3081D0    1704            jnb     _P0_1,L017046?
0637           1705   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:386: while(P0_2==0&&P0_1==1){
0637           1706   L017041?:
0637 208250    1707            jb      _P0_2,L017043?
063A 308150    1708            jnb     _P0_1,L017043?
063D           1709   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:387: TR0=1;
063D D28C      1710            setb    _TR0
063F           1711   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:388: if(TF0==1) // Did the 16-bit timer overflow?
063F           1712   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:390: TF0=0;
063F 108D90    1713            jbc     _TF0,L017114?
0642 8000      1714            sjmp    L017041?
0644           1715   L017114?:
0644           1716   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:391: overflow_count++;
0644 0538      1717            inc     _overflow_count
0646 8000      1718            sjmp    L017041?
0648           1719   L017043?:
0648           1720   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:395: TR0=0; 
0648 C28C      1721            clr     _TR0
064A 8000      1722            sjmp    L017044?
064C           1723   L017046?:
064C           1724   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:397: phase_diff=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
064C 853882    1725            mov     dpl,_overflow_count
064F 120000    1726            lcall   ___uchar2fs
0652 AA82      1727            mov     r2,dpl
0654 AB83      1728            mov     r3,dph
0656 ACF0      1729            mov     r4,b
0658 FD        1730            mov     r5,a
0659 C002      1731            push    ar2
065B C003      1732            push    ar3
065D C004      1733            push    ar4
065F C005      1734            push    ar5
0661 900000    1735            mov     dptr,#0x0000
0664 75F080    1736            mov     b,#0x80
0667 7447      1737            mov     a,#0x47
0669 120000    1738            lcall   ___fsmul
066C 8582F0    1739            mov     _main_sloc0_1_0,dpl
066F 8583F1    1740            mov     (_main_sloc0_1_0 + 1),dph
0672 85F0F2    1741            mov     (_main_sloc0_1_0 + 2),b
0675 F5F3      1742            mov     (_main_sloc0_1_0 + 3),a
0677 E581      1743            mov     a,sp
0679 24FC      1744            add     a,#0xfc
067B F581      1745            mov     sp,a
067D 858C82    1746            mov     dpl,_TH0
0680 120000    1747            lcall   ___uchar2fs
0683 AE82      1748            mov     r6,dpl
0685 AF83      1749            mov     r7,dph
0687 AAF0      1750            mov     r2,b
0689 FB        1751            mov     r3,a
068A C006      1752            push    ar6
068C C007      1753            push    ar7
068E C002      1754            push    ar2
0690 C003      1755            push    ar3
0692 900000    1756            mov     dptr,#0x0000
0695 75F080    1757            mov     b,#0x80
0698 7443      1758            mov     a,#0x43
069A 120000    1759            lcall   ___fsmul
069D AA82      1760            mov     r2,dpl
069F AB83      1761            mov     r3,dph
06A1 ACF0      1762            mov     r4,b
06A3 FD        1763            mov     r5,a
06A4 E581      1764            mov     a,sp
06A6 24FC      1765            add     a,#0xfc
06A8 F581      1766            mov     sp,a
06AA C002      1767            push    ar2
06AC C003      1768            push    ar3
06AE C004      1769            push    ar4
06B0 C005      1770            push    ar5
06B2 85F082    1771            mov     dpl,_main_sloc0_1_0
06B5 85F183    1772            mov     dph,(_main_sloc0_1_0 + 1)
06B8 85F2F0    1773            mov     b,(_main_sloc0_1_0 + 2)
06BB E5F3      1774            mov     a,(_main_sloc0_1_0 + 3)
06BD 120000    1775            lcall   ___fsadd
06C0 8582F0    1776            mov     _main_sloc0_1_0,dpl
06C3 8583F1    1777            mov     (_main_sloc0_1_0 + 1),dph
06C6 85F0F2    1778            mov     (_main_sloc0_1_0 + 2),b
06C9 F5F3      1779            mov     (_main_sloc0_1_0 + 3),a
06CB E581      1780            mov     a,sp
06CD 24FC      1781            add     a,#0xfc
06CF F581      1782            mov     sp,a
06D1 AE8A      1783            mov     r6,_TL0
06D3 7F00      1784            mov     r7,#0x00
06D5 8E82      1785            mov     dpl,r6
06D7 8F83      1786            mov     dph,r7
06D9 120000    1787            lcall   ___sint2fs
06DC AE82      1788            mov     r6,dpl
06DE AF83      1789            mov     r7,dph
06E0 AAF0      1790            mov     r2,b
06E2 FB        1791            mov     r3,a
06E3 C006      1792            push    ar6
06E5 C007      1793            push    ar7
06E7 C002      1794            push    ar2
06E9 C003      1795            push    ar3
06EB 85F082    1796            mov     dpl,_main_sloc0_1_0
06EE 85F183    1797            mov     dph,(_main_sloc0_1_0 + 1)
06F1 85F2F0    1798            mov     b,(_main_sloc0_1_0 + 2)
06F4 E5F3      1799            mov     a,(_main_sloc0_1_0 + 3)
06F6 120000    1800            lcall   ___fsadd
06F9 AA82      1801            mov     r2,dpl
06FB AB83      1802            mov     r3,dph
06FD ACF0      1803            mov     r4,b
06FF FD        1804            mov     r5,a
0700 E581      1805            mov     a,sp
0702 24FC      1806            add     a,#0xfc
0704 F581      1807            mov     sp,a
0706 C002      1808            push    ar2
0708 C003      1809            push    ar3
070A C004      1810            push    ar4
070C C005      1811            push    ar5
070E 90F4FC    1812            mov     dptr,#0xF4FC
0711 75F032    1813            mov     b,#0x32
0714 7434      1814            mov     a,#0x34
0716 120000    1815            lcall   ___fsmul
0719 AA82      1816            mov     r2,dpl
071B AB83      1817            mov     r3,dph
071D ACF0      1818            mov     r4,b
071F FD        1819            mov     r5,a
0720 E581      1820            mov     a,sp
0722 24FC      1821            add     a,#0xfc
0724 F581      1822            mov     sp,a
0726           1823   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:399: degrees = p_n*phase_diff*360/mst ;
0726 C002      1824            push    ar2
0728 C003      1825            push    ar3
072A C004      1826            push    ar4
072C C005      1827            push    ar5
072E 85B082    1828            mov     dpl,_main_p_n_1_97
0731 85B183    1829            mov     dph,(_main_p_n_1_97 + 1)
0734 85B2F0    1830            mov     b,(_main_p_n_1_97 + 2)
0737 E5B3      1831            mov     a,(_main_p_n_1_97 + 3)
0739 120000    1832            lcall   ___fsmul
073C AA82      1833            mov     r2,dpl
073E AB83      1834            mov     r3,dph
0740 ACF0      1835            mov     r4,b
0742 FD        1836            mov     r5,a
0743 E581      1837            mov     a,sp
0745 24FC      1838            add     a,#0xfc
0747 F581      1839            mov     sp,a
0749 C002      1840            push    ar2
074B C003      1841            push    ar3
074D C004      1842            push    ar4
074F C005      1843            push    ar5
0751 900000    1844            mov     dptr,#0x0000
0754 75F0B4    1845            mov     b,#0xB4
0757 7443      1846            mov     a,#0x43
0759 120000    1847            lcall   ___fsmul
075C AA82      1848            mov     r2,dpl
075E AB83      1849            mov     r3,dph
0760 ACF0      1850            mov     r4,b
0762 FD        1851            mov     r5,a
0763 E581      1852            mov     a,sp
0765 24FC      1853            add     a,#0xfc
0767 F581      1854            mov     sp,a
0769 C040      1855            push    _main_mst_1_97
076B C041      1856            push    (_main_mst_1_97 + 1)
076D C042      1857            push    (_main_mst_1_97 + 2)
076F C043      1858            push    (_main_mst_1_97 + 3)
0771 8A82      1859            mov     dpl,r2
0773 8B83      1860            mov     dph,r3
0775 8CF0      1861            mov     b,r4
0777 ED        1862            mov     a,r5
0778 120000    1863            lcall   ___fsdiv
077B 858270    1864            mov     _main_degrees_1_97,dpl
077E 858371    1865            mov     (_main_degrees_1_97 + 1),dph
0781 85F072    1866            mov     (_main_degrees_1_97 + 2),b
0784 F573      1867            mov     (_main_degrees_1_97 + 3),a
0786 E581      1868            mov     a,sp
0788 24FC      1869            add     a,#0xfc
078A F581      1870            mov     sp,a
078C           1871   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:401: printf("\r\ndegrees: %f", degrees);
078C C070      1872            push    _main_degrees_1_97
078E C071      1873            push    (_main_degrees_1_97 + 1)
0790 C072      1874            push    (_main_degrees_1_97 + 2)
0792 C073      1875            push    (_main_degrees_1_97 + 3)
0794 74D0      1876            mov     a,#__str_7
0796 C0E0      1877            push    acc
0798 74C7      1878            mov     a,#(__str_7 >> 8)
079A C0E0      1879            push    acc
079C 7480      1880            mov     a,#0x80
079E C0E0      1881            push    acc
07A0 120000    1882            lcall   _printf
07A3 E581      1883            mov     a,sp
07A5 24F9      1884            add     a,#0xf9
07A7 F581      1885            mov     sp,a
07A9           1886   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:407: if (P2_6==0) {
07A9 30A610    1887            jnb     _P2_6,L017115?
07AC 020000    1888            ljmp    L017048?
07AF           1889   L017115?:
07AF           1890   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:408: sprintf(buff1,"vr:%04.2f f:%04.1fHz", (float)vmax1/1.14121356237,(float)1/mst);
07AF C040      1891            push    _main_mst_1_97
07B1 C041      1892            push    (_main_mst_1_97 + 1)
07B3 C042      1893            push    (_main_mst_1_97 + 2)
07B5 C043      1894            push    (_main_mst_1_97 + 3)
07B7 900000    1895            mov     dptr,#0x0000
07BA 75F080    1896            mov     b,#0x80
07BD 743F      1897            mov     a,#0x3F
07BF 120000    1898            lcall   ___fsdiv
07C2 8582F0    1899            mov     _main_sloc0_1_0,dpl
07C5 8583F1    1900            mov     (_main_sloc0_1_0 + 1),dph
07C8 85F0F2    1901            mov     (_main_sloc0_1_0 + 2),b
07CB F5F3      1902            mov     (_main_sloc0_1_0 + 3),a
07CD E581      1903            mov     a,sp
07CF 24FC      1904            add     a,#0xfc
07D1 F581      1905            mov     sp,a
07D3 7449      1906            mov     a,#0x49
07D5 C0E0      1907            push    acc
07D7 7413      1908            mov     a,#0x13
07D9 C0E0      1909            push    acc
07DB 7492      1910            mov     a,#0x92
07DD C0E0      1911            push    acc
07DF 743F      1912            mov     a,#0x3F
07E1 C0E0      1913            push    acc
07E3 85D082    1914            mov     dpl,_main_vmax1_1_97
07E6 85D183    1915            mov     dph,(_main_vmax1_1_97 + 1)
07E9 85D2F0    1916            mov     b,(_main_vmax1_1_97 + 2)
07EC E5D3      1917            mov     a,(_main_vmax1_1_97 + 3)
07EE 120000    1918            lcall   ___fsdiv
07F1 AC82      1919            mov     r4,dpl
07F3 AD83      1920            mov     r5,dph
07F5 AAF0      1921            mov     r2,b
07F7 FB        1922            mov     r3,a
07F8 E581      1923            mov     a,sp
07FA 24FC      1924            add     a,#0xfc
07FC F581      1925            mov     sp,a
07FE C0F0      1926            push    _main_sloc0_1_0
0800 C0F1      1927            push    (_main_sloc0_1_0 + 1)
0802 C0F2      1928            push    (_main_sloc0_1_0 + 2)
0804 C0F3      1929            push    (_main_sloc0_1_0 + 3)
0806 C004      1930            push    ar4
0808 C005      1931            push    ar5
080A C002      1932            push    ar2
080C C003      1933            push    ar3
080E 7490      1934            mov     a,#__str_8
0810 C0E0      1935            push    acc
0812 74C8      1936            mov     a,#(__str_8 >> 8)
0814 C0E0      1937            push    acc
0816 7480      1938            mov     a,#0x80
0818 C0E0      1939            push    acc
081A 7480      1940            mov     a,#_main_buff1_1_97
081C C0E0      1941            push    acc
081E 74B3      1942            mov     a,#(_main_buff1_1_97 >> 8)
0820 C0E0      1943            push    acc
0822 7440      1944            mov     a,#0x40
0824 C0E0      1945            push    acc
0826 120000    1946            lcall   _sprintf
0829 E581      1947            mov     a,sp
082B 24F2      1948            add     a,#0xf2
082D F581      1949            mov     sp,a
082F           1950   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:409: LCDprint(buff1, 1, 0);
082F 75F801    1951            mov     _LCDprint_PARM_2,#0x01
0832 C2A8      1952            clr     _LCDprint_PARM_3
0834 90B380    1953            mov     dptr,#_main_buff1_1_97
0837 75F040    1954            mov     b,#0x40
083A 120000    1955            lcall   _LCDprint
083D           1956   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:411: sprintf(buff2,"vt:%04.2fV ph:%3.0fC", (float)vmax2/1.14121356237,(float)degrees);
083D 7449      1957            mov     a,#0x49
083F C0E0      1958            push    acc
0841 7413      1959            mov     a,#0x13
0843 C0E0      1960            push    acc
0845 7492      1961            mov     a,#0x92
0847 C0E0      1962            push    acc
0849 743F      1963            mov     a,#0x3F
084B C0E0      1964            push    acc
084D 852082    1965            mov     dpl,_main_vmax2_1_97
0850 852183    1966            mov     dph,(_main_vmax2_1_97 + 1)
0853 8522F0    1967            mov     b,(_main_vmax2_1_97 + 2)
0856 E523      1968            mov     a,(_main_vmax2_1_97 + 3)
0858 120000    1969            lcall   ___fsdiv
085B AA82      1970            mov     r2,dpl
085D AB83      1971            mov     r3,dph
085F ACF0      1972            mov     r4,b
0861 FD        1973            mov     r5,a
0862 E581      1974            mov     a,sp
0864 24FC      1975            add     a,#0xfc
0866 F581      1976            mov     sp,a
0868 C070      1977            push    _main_degrees_1_97
086A C071      1978            push    (_main_degrees_1_97 + 1)
086C C072      1979            push    (_main_degrees_1_97 + 2)
086E C073      1980            push    (_main_degrees_1_97 + 3)
0870 C002      1981            push    ar2
0872 C003      1982            push    ar3
0874 C004      1983            push    ar4
0876 C005      1984            push    ar5
0878 7410      1985            mov     a,#__str_9
087A C0E0      1986            push    acc
087C 74C9      1987            mov     a,#(__str_9 >> 8)
087E C0E0      1988            push    acc
0880 7480      1989            mov     a,#0x80
0882 C0E0      1990            push    acc
0884 74D0      1991            mov     a,#_main_buff2_1_97
0886 C0E0      1992            push    acc
0888 74B3      1993            mov     a,#(_main_buff2_1_97 >> 8)
088A C0E0      1994            push    acc
088C 7440      1995            mov     a,#0x40
088E C0E0      1996            push    acc
0890 120000    1997            lcall   _sprintf
0893 E581      1998            mov     a,sp
0895 24F2      1999            add     a,#0xf2
0897 F581      2000            mov     sp,a
0899           2001   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:412: LCDprint(buff2, 2, 0);       
0899 75F802    2002            mov     _LCDprint_PARM_2,#0x02
089C C2A8      2003            clr     _LCDprint_PARM_3
089E 90B3D0    2004            mov     dptr,#_main_buff2_1_97
08A1 75F040    2005            mov     b,#0x40
08A4 120000    2006            lcall   _LCDprint
08A7           2007   L017048?:
08A7           2008   ;        C:\Users\qiuyu\OneDrive\Documents\GitHub\LAB5\lab5v3.c:414: waitms(500); 
08A7 9001F4    2009            mov     dptr,#0x01F4
08AA 120000    2010            lcall   _waitms
08AD 020000    2011            ljmp    L017073?
08B0           2012            rseg R_CSEG
08B0           2013   
0000           2014            rseg R_XINIT
0000           2015   
0000           2016            rseg R_CONST
0000           2017   __str_0:
0000 1B        2018            db 0x1B
0001 5B324A    2019            db '[2J'
0004 00        2020            db 0x00
0005           2021   __str_1:
0005 41444320  2022            db 'ADC test program'
     74657374
     2070726F
     6772616D
0015 0A        2023            db 0x0A
0016 46696C65  2024            db 'File: %s'
     3A202573
001E 0A        2025            db 0x0A
001F 436F6D70  2026            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002F 0A        2027            db 0x0A
0030 0A        2028            db 0x0A
0031 00        2029            db 0x00
0032           2030   __str_2:
0032 433A      2031            db 'C:'
0034 5C        2032            db 0x5C
0035 55736572  2033            db 'Users'
     73
003A 5C        2034            db 0x5C
003B 71697579  2035            db 'qiuyu'
     75
0040 5C        2036            db 0x5C
0041 4F6E6544  2037            db 'OneDrive'
     72697665
0049 5C        2038            db 0x5C
004A 446F6375  2039            db 'Documents'
     6D656E74
     73
0053 5C        2040            db 0x5C
0054 47697448  2041            db 'GitHub'
     7562
005A 5C        2042            db 0x5C
005B 4C414235  2043            db 'LAB5'
005F 5C        2044            db 0x5C
0060 6C616235  2045            db 'lab5v3.c'
     76332E63
0068 00        2046            db 0x00
0069           2047   __str_3:
0069 4D617220  2048            db 'Mar  6 2024'
     20362032
     303234
0074 00        2049            db 0x00
0075           2050   __str_4:
0075 32313A32  2051            db '21:29:15'
     393A3135
007D 00        2052            db 0x00
007E           2053   __str_5:
007E 0A        2054            db 0x0A
007F 70657269  2055            db 'period=%3.2f'
     6F643D25
     332E3266
008B 0D        2056            db 0x0D
008C 00        2057            db 0x00
008D           2058   __str_6:
008D 0A        2059            db 0x0A
008E 56405031  2060            db 'V@P1_4=%7.5fV, V@P1_5=%7.5fV'
     5F343D25
     372E3566
     562C2056
     4050315F
     353D2537
     2E356656
00AA 0D        2061            db 0x0D
00AB 00        2062            db 0x00
00AC           2063   __str_7:
00AC 0D        2064            db 0x0D
00AD 0A        2065            db 0x0A
00AE 64656772  2066            db 'degrees: %f'
     6565733A
     202566
00B9 00        2067            db 0x00
00BA           2068   __str_8:
00BA 76723A25  2069            db 'vr:%04.2f f:%04.1fHz'
     30342E32
     6620663A
     2530342E
     3166487A
00CE 00        2070            db 0x00
00CF           2071   __str_9:
00CF 76743A25  2072            db 'vt:%04.2fV ph:%3.0fC'
     30342E32
     66562070
     683A2533
     2E306643
00E3 00        2073            db 0x00
00E4           2074   
0003           2075            CSEG
0003           2076   
0003           2077   end
