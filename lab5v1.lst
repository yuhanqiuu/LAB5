0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Mar 06 13:10:57 2024
0000              5   ;--------------------------------------------------------
                  5   $name lab5v1
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Get_ADC
0000             30            public _Volts_at_Pin
0000             31            public _ADC_at_Pin
0000             32            public _InitPinADC
0000             33            public _TIMER0_Init
0000             34            public _LCDprint
0000             35            public _LCD_4BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public _InitADC
0000             43            public __c51_external_startup
0000             44            public _LCDprint_PARM_3
0000             45            public _LCDprint_PARM_2
0000             46            public _overflow_count
0000             47   ;--------------------------------------------------------
0000             48   ; Special Function Registers
0000             49   ;--------------------------------------------------------
0000             50   _ACC            DATA 0xe0
0000             51   _ADC0ASAH       DATA 0xb6
0000             52   _ADC0ASAL       DATA 0xb5
0000             53   _ADC0ASCF       DATA 0xa1
0000             54   _ADC0ASCT       DATA 0xc7
0000             55   _ADC0CF0        DATA 0xbc
0000             56   _ADC0CF1        DATA 0xb9
0000             57   _ADC0CF2        DATA 0xdf
0000             58   _ADC0CN0        DATA 0xe8
0000             59   _ADC0CN1        DATA 0xb2
0000             60   _ADC0CN2        DATA 0xb3
0000             61   _ADC0GTH        DATA 0xc4
0000             62   _ADC0GTL        DATA 0xc3
0000             63   _ADC0H          DATA 0xbe
0000             64   _ADC0L          DATA 0xbd
0000             65   _ADC0LTH        DATA 0xc6
0000             66   _ADC0LTL        DATA 0xc5
0000             67   _ADC0MX         DATA 0xbb
0000             68   _B              DATA 0xf0
0000             69   _CKCON0         DATA 0x8e
0000             70   _CKCON1         DATA 0xa6
0000             71   _CLEN0          DATA 0xc6
0000             72   _CLIE0          DATA 0xc7
0000             73   _CLIF0          DATA 0xe8
0000             74   _CLKSEL         DATA 0xa9
0000             75   _CLOUT0         DATA 0xd1
0000             76   _CLU0CF         DATA 0xb1
0000             77   _CLU0FN         DATA 0xaf
0000             78   _CLU0MX         DATA 0x84
0000             79   _CLU1CF         DATA 0xb3
0000             80   _CLU1FN         DATA 0xb2
0000             81   _CLU1MX         DATA 0x85
0000             82   _CLU2CF         DATA 0xb6
0000             83   _CLU2FN         DATA 0xb5
0000             84   _CLU2MX         DATA 0x91
0000             85   _CLU3CF         DATA 0xbf
0000             86   _CLU3FN         DATA 0xbe
0000             87   _CLU3MX         DATA 0xae
0000             88   _CMP0CN0        DATA 0x9b
0000             89   _CMP0CN1        DATA 0x99
0000             90   _CMP0MD         DATA 0x9d
0000             91   _CMP0MX         DATA 0x9f
0000             92   _CMP1CN0        DATA 0xbf
0000             93   _CMP1CN1        DATA 0xac
0000             94   _CMP1MD         DATA 0xab
0000             95   _CMP1MX         DATA 0xaa
0000             96   _CRC0CN0        DATA 0xce
0000             97   _CRC0CN1        DATA 0x86
0000             98   _CRC0CNT        DATA 0xd3
0000             99   _CRC0DAT        DATA 0xcb
0000            100   _CRC0FLIP       DATA 0xcf
0000            101   _CRC0IN         DATA 0xca
0000            102   _CRC0ST         DATA 0xd2
0000            103   _DAC0CF0        DATA 0x91
0000            104   _DAC0CF1        DATA 0x92
0000            105   _DAC0H          DATA 0x85
0000            106   _DAC0L          DATA 0x84
0000            107   _DAC1CF0        DATA 0x93
0000            108   _DAC1CF1        DATA 0x94
0000            109   _DAC1H          DATA 0x8a
0000            110   _DAC1L          DATA 0x89
0000            111   _DAC2CF0        DATA 0x95
0000            112   _DAC2CF1        DATA 0x96
0000            113   _DAC2H          DATA 0x8c
0000            114   _DAC2L          DATA 0x8b
0000            115   _DAC3CF0        DATA 0x9a
0000            116   _DAC3CF1        DATA 0x9c
0000            117   _DAC3H          DATA 0x8e
0000            118   _DAC3L          DATA 0x8d
0000            119   _DACGCF0        DATA 0x88
0000            120   _DACGCF1        DATA 0x98
0000            121   _DACGCF2        DATA 0xa2
0000            122   _DERIVID        DATA 0xad
0000            123   _DEVICEID       DATA 0xb5
0000            124   _DPH            DATA 0x83
0000            125   _DPL            DATA 0x82
0000            126   _EIE1           DATA 0xe6
0000            127   _EIE2           DATA 0xf3
0000            128   _EIP1           DATA 0xbb
0000            129   _EIP1H          DATA 0xee
0000            130   _EIP2           DATA 0xed
0000            131   _EIP2H          DATA 0xf6
0000            132   _EMI0CN         DATA 0xe7
0000            133   _FLKEY          DATA 0xb7
0000            134   _HFO0CAL        DATA 0xc7
0000            135   _HFO1CAL        DATA 0xd6
0000            136   _HFOCN          DATA 0xef
0000            137   _I2C0ADM        DATA 0xff
0000            138   _I2C0CN0        DATA 0xba
0000            139   _I2C0DIN        DATA 0xbc
0000            140   _I2C0DOUT       DATA 0xbb
0000            141   _I2C0FCN0       DATA 0xad
0000            142   _I2C0FCN1       DATA 0xab
0000            143   _I2C0FCT        DATA 0xf5
0000            144   _I2C0SLAD       DATA 0xbd
0000            145   _I2C0STAT       DATA 0xb9
0000            146   _IE             DATA 0xa8
0000            147   _IP             DATA 0xb8
0000            148   _IPH            DATA 0xf2
0000            149   _IT01CF         DATA 0xe4
0000            150   _LFO0CN         DATA 0xb1
0000            151   _P0             DATA 0x80
0000            152   _P0MASK         DATA 0xfe
0000            153   _P0MAT          DATA 0xfd
0000            154   _P0MDIN         DATA 0xf1
0000            155   _P0MDOUT        DATA 0xa4
0000            156   _P0SKIP         DATA 0xd4
0000            157   _P1             DATA 0x90
0000            158   _P1MASK         DATA 0xee
0000            159   _P1MAT          DATA 0xed
0000            160   _P1MDIN         DATA 0xf2
0000            161   _P1MDOUT        DATA 0xa5
0000            162   _P1SKIP         DATA 0xd5
0000            163   _P2             DATA 0xa0
0000            164   _P2MASK         DATA 0xfc
0000            165   _P2MAT          DATA 0xfb
0000            166   _P2MDIN         DATA 0xf3
0000            167   _P2MDOUT        DATA 0xa6
0000            168   _P2SKIP         DATA 0xcc
0000            169   _P3             DATA 0xb0
0000            170   _P3MDIN         DATA 0xf4
0000            171   _P3MDOUT        DATA 0x9c
0000            172   _PCA0CENT       DATA 0x9e
0000            173   _PCA0CLR        DATA 0x9c
0000            174   _PCA0CN0        DATA 0xd8
0000            175   _PCA0CPH0       DATA 0xfc
0000            176   _PCA0CPH1       DATA 0xea
0000            177   _PCA0CPH2       DATA 0xec
0000            178   _PCA0CPH3       DATA 0xf5
0000            179   _PCA0CPH4       DATA 0x85
0000            180   _PCA0CPH5       DATA 0xde
0000            181   _PCA0CPL0       DATA 0xfb
0000            182   _PCA0CPL1       DATA 0xe9
0000            183   _PCA0CPL2       DATA 0xeb
0000            184   _PCA0CPL3       DATA 0xf4
0000            185   _PCA0CPL4       DATA 0x84
0000            186   _PCA0CPL5       DATA 0xdd
0000            187   _PCA0CPM0       DATA 0xda
0000            188   _PCA0CPM1       DATA 0xdb
0000            189   _PCA0CPM2       DATA 0xdc
0000            190   _PCA0CPM3       DATA 0xae
0000            191   _PCA0CPM4       DATA 0xaf
0000            192   _PCA0CPM5       DATA 0xcc
0000            193   _PCA0H          DATA 0xfa
0000            194   _PCA0L          DATA 0xf9
0000            195   _PCA0MD         DATA 0xd9
0000            196   _PCA0POL        DATA 0x96
0000            197   _PCA0PWM        DATA 0xf7
0000            198   _PCON0          DATA 0x87
0000            199   _PCON1          DATA 0xcd
0000            200   _PFE0CN         DATA 0xc1
0000            201   _PRTDRV         DATA 0xf6
0000            202   _PSCTL          DATA 0x8f
0000            203   _PSTAT0         DATA 0xaa
0000            204   _PSW            DATA 0xd0
0000            205   _REF0CN         DATA 0xd1
0000            206   _REG0CN         DATA 0xc9
0000            207   _REVID          DATA 0xb6
0000            208   _RSTSRC         DATA 0xef
0000            209   _SBCON1         DATA 0x94
0000            210   _SBRLH1         DATA 0x96
0000            211   _SBRLL1         DATA 0x95
0000            212   _SBUF           DATA 0x99
0000            213   _SBUF0          DATA 0x99
0000            214   _SBUF1          DATA 0x92
0000            215   _SCON           DATA 0x98
0000            216   _SCON0          DATA 0x98
0000            217   _SCON1          DATA 0xc8
0000            218   _SFRPAGE        DATA 0xa7
0000            219   _SFRPGCN        DATA 0xbc
0000            220   _SFRSTACK       DATA 0xd7
0000            221   _SMB0ADM        DATA 0xd6
0000            222   _SMB0ADR        DATA 0xd7
0000            223   _SMB0CF         DATA 0xc1
0000            224   _SMB0CN0        DATA 0xc0
0000            225   _SMB0DAT        DATA 0xc2
0000            226   _SMB0FCN0       DATA 0xc3
0000            227   _SMB0FCN1       DATA 0xc4
0000            228   _SMB0FCT        DATA 0xef
0000            229   _SMB0RXLN       DATA 0xc5
0000            230   _SMB0TC         DATA 0xac
0000            231   _SMOD1          DATA 0x93
0000            232   _SP             DATA 0x81
0000            233   _SPI0CFG        DATA 0xa1
0000            234   _SPI0CKR        DATA 0xa2
0000            235   _SPI0CN0        DATA 0xf8
0000            236   _SPI0DAT        DATA 0xa3
0000            237   _SPI0FCN0       DATA 0x9a
0000            238   _SPI0FCN1       DATA 0x9b
0000            239   _SPI0FCT        DATA 0xf7
0000            240   _SPI0PCF        DATA 0xdf
0000            241   _TCON           DATA 0x88
0000            242   _TH0            DATA 0x8c
0000            243   _TH1            DATA 0x8d
0000            244   _TL0            DATA 0x8a
0000            245   _TL1            DATA 0x8b
0000            246   _TMOD           DATA 0x89
0000            247   _TMR2CN0        DATA 0xc8
0000            248   _TMR2CN1        DATA 0xfd
0000            249   _TMR2H          DATA 0xcf
0000            250   _TMR2L          DATA 0xce
0000            251   _TMR2RLH        DATA 0xcb
0000            252   _TMR2RLL        DATA 0xca
0000            253   _TMR3CN0        DATA 0x91
0000            254   _TMR3CN1        DATA 0xfe
0000            255   _TMR3H          DATA 0x95
0000            256   _TMR3L          DATA 0x94
0000            257   _TMR3RLH        DATA 0x93
0000            258   _TMR3RLL        DATA 0x92
0000            259   _TMR4CN0        DATA 0x98
0000            260   _TMR4CN1        DATA 0xff
0000            261   _TMR4H          DATA 0xa5
0000            262   _TMR4L          DATA 0xa4
0000            263   _TMR4RLH        DATA 0xa3
0000            264   _TMR4RLL        DATA 0xa2
0000            265   _TMR5CN0        DATA 0xc0
0000            266   _TMR5CN1        DATA 0xf1
0000            267   _TMR5H          DATA 0xd5
0000            268   _TMR5L          DATA 0xd4
0000            269   _TMR5RLH        DATA 0xd3
0000            270   _TMR5RLL        DATA 0xd2
0000            271   _UART0PCF       DATA 0xd9
0000            272   _UART1FCN0      DATA 0x9d
0000            273   _UART1FCN1      DATA 0xd8
0000            274   _UART1FCT       DATA 0xfa
0000            275   _UART1LIN       DATA 0x9e
0000            276   _UART1PCF       DATA 0xda
0000            277   _VDM0CN         DATA 0xff
0000            278   _WDTCN          DATA 0x97
0000            279   _XBR0           DATA 0xe1
0000            280   _XBR1           DATA 0xe2
0000            281   _XBR2           DATA 0xe3
0000            282   _XOSC0CN        DATA 0x86
0000            283   _DPTR           DATA 0x8382
0000            284   _TMR2RL         DATA 0xcbca
0000            285   _TMR3RL         DATA 0x9392
0000            286   _TMR4RL         DATA 0xa3a2
0000            287   _TMR5RL         DATA 0xd3d2
0000            288   _TMR0           DATA 0x8c8a
0000            289   _TMR1           DATA 0x8d8b
0000            290   _TMR2           DATA 0xcfce
0000            291   _TMR3           DATA 0x9594
0000            292   _TMR4           DATA 0xa5a4
0000            293   _TMR5           DATA 0xd5d4
0000            294   _SBRL1          DATA 0x9695
0000            295   _PCA0           DATA 0xfaf9
0000            296   _PCA0CP0        DATA 0xfcfb
0000            297   _PCA0CP1        DATA 0xeae9
0000            298   _PCA0CP2        DATA 0xeceb
0000            299   _PCA0CP3        DATA 0xf5f4
0000            300   _PCA0CP4        DATA 0x8584
0000            301   _PCA0CP5        DATA 0xdedd
0000            302   _ADC0ASA        DATA 0xb6b5
0000            303   _ADC0GT         DATA 0xc4c3
0000            304   _ADC0           DATA 0xbebd
0000            305   _ADC0LT         DATA 0xc6c5
0000            306   _DAC0           DATA 0x8584
0000            307   _DAC1           DATA 0x8a89
0000            308   _DAC2           DATA 0x8c8b
0000            309   _DAC3           DATA 0x8e8d
0000            310   ;--------------------------------------------------------
0000            311   ; special function bits
0000            312   ;--------------------------------------------------------
0000            313   _ACC_0          BIT 0xe0
0000            314   _ACC_1          BIT 0xe1
0000            315   _ACC_2          BIT 0xe2
0000            316   _ACC_3          BIT 0xe3
0000            317   _ACC_4          BIT 0xe4
0000            318   _ACC_5          BIT 0xe5
0000            319   _ACC_6          BIT 0xe6
0000            320   _ACC_7          BIT 0xe7
0000            321   _TEMPE          BIT 0xe8
0000            322   _ADGN0          BIT 0xe9
0000            323   _ADGN1          BIT 0xea
0000            324   _ADWINT         BIT 0xeb
0000            325   _ADBUSY         BIT 0xec
0000            326   _ADINT          BIT 0xed
0000            327   _IPOEN          BIT 0xee
0000            328   _ADEN           BIT 0xef
0000            329   _B_0            BIT 0xf0
0000            330   _B_1            BIT 0xf1
0000            331   _B_2            BIT 0xf2
0000            332   _B_3            BIT 0xf3
0000            333   _B_4            BIT 0xf4
0000            334   _B_5            BIT 0xf5
0000            335   _B_6            BIT 0xf6
0000            336   _B_7            BIT 0xf7
0000            337   _C0FIF          BIT 0xe8
0000            338   _C0RIF          BIT 0xe9
0000            339   _C1FIF          BIT 0xea
0000            340   _C1RIF          BIT 0xeb
0000            341   _C2FIF          BIT 0xec
0000            342   _C2RIF          BIT 0xed
0000            343   _C3FIF          BIT 0xee
0000            344   _C3RIF          BIT 0xef
0000            345   _D1SRC0         BIT 0x88
0000            346   _D1SRC1         BIT 0x89
0000            347   _D1AMEN         BIT 0x8a
0000            348   _D01REFSL       BIT 0x8b
0000            349   _D3SRC0         BIT 0x8c
0000            350   _D3SRC1         BIT 0x8d
0000            351   _D3AMEN         BIT 0x8e
0000            352   _D23REFSL       BIT 0x8f
0000            353   _D0UDIS         BIT 0x98
0000            354   _D1UDIS         BIT 0x99
0000            355   _D2UDIS         BIT 0x9a
0000            356   _D3UDIS         BIT 0x9b
0000            357   _EX0            BIT 0xa8
0000            358   _ET0            BIT 0xa9
0000            359   _EX1            BIT 0xaa
0000            360   _ET1            BIT 0xab
0000            361   _ES0            BIT 0xac
0000            362   _ET2            BIT 0xad
0000            363   _ESPI0          BIT 0xae
0000            364   _EA             BIT 0xaf
0000            365   _PX0            BIT 0xb8
0000            366   _PT0            BIT 0xb9
0000            367   _PX1            BIT 0xba
0000            368   _PT1            BIT 0xbb
0000            369   _PS0            BIT 0xbc
0000            370   _PT2            BIT 0xbd
0000            371   _PSPI0          BIT 0xbe
0000            372   _P0_0           BIT 0x80
0000            373   _P0_1           BIT 0x81
0000            374   _P0_2           BIT 0x82
0000            375   _P0_3           BIT 0x83
0000            376   _P0_4           BIT 0x84
0000            377   _P0_5           BIT 0x85
0000            378   _P0_6           BIT 0x86
0000            379   _P0_7           BIT 0x87
0000            380   _P1_0           BIT 0x90
0000            381   _P1_1           BIT 0x91
0000            382   _P1_2           BIT 0x92
0000            383   _P1_3           BIT 0x93
0000            384   _P1_4           BIT 0x94
0000            385   _P1_5           BIT 0x95
0000            386   _P1_6           BIT 0x96
0000            387   _P1_7           BIT 0x97
0000            388   _P2_0           BIT 0xa0
0000            389   _P2_1           BIT 0xa1
0000            390   _P2_2           BIT 0xa2
0000            391   _P2_3           BIT 0xa3
0000            392   _P2_4           BIT 0xa4
0000            393   _P2_5           BIT 0xa5
0000            394   _P2_6           BIT 0xa6
0000            395   _P3_0           BIT 0xb0
0000            396   _P3_1           BIT 0xb1
0000            397   _P3_2           BIT 0xb2
0000            398   _P3_3           BIT 0xb3
0000            399   _P3_4           BIT 0xb4
0000            400   _P3_7           BIT 0xb7
0000            401   _CCF0           BIT 0xd8
0000            402   _CCF1           BIT 0xd9
0000            403   _CCF2           BIT 0xda
0000            404   _CCF3           BIT 0xdb
0000            405   _CCF4           BIT 0xdc
0000            406   _CCF5           BIT 0xdd
0000            407   _CR             BIT 0xde
0000            408   _CF             BIT 0xdf
0000            409   _PARITY         BIT 0xd0
0000            410   _F1             BIT 0xd1
0000            411   _OV             BIT 0xd2
0000            412   _RS0            BIT 0xd3
0000            413   _RS1            BIT 0xd4
0000            414   _F0             BIT 0xd5
0000            415   _AC             BIT 0xd6
0000            416   _CY             BIT 0xd7
0000            417   _RI             BIT 0x98
0000            418   _TI             BIT 0x99
0000            419   _RB8            BIT 0x9a
0000            420   _TB8            BIT 0x9b
0000            421   _REN            BIT 0x9c
0000            422   _CE             BIT 0x9d
0000            423   _SMODE          BIT 0x9e
0000            424   _RI1            BIT 0xc8
0000            425   _TI1            BIT 0xc9
0000            426   _RBX1           BIT 0xca
0000            427   _TBX1           BIT 0xcb
0000            428   _REN1           BIT 0xcc
0000            429   _PERR1          BIT 0xcd
0000            430   _OVR1           BIT 0xce
0000            431   _SI             BIT 0xc0
0000            432   _ACK            BIT 0xc1
0000            433   _ARBLOST        BIT 0xc2
0000            434   _ACKRQ          BIT 0xc3
0000            435   _STO            BIT 0xc4
0000            436   _STA            BIT 0xc5
0000            437   _TXMODE         BIT 0xc6
0000            438   _MASTER         BIT 0xc7
0000            439   _SPIEN          BIT 0xf8
0000            440   _TXNF           BIT 0xf9
0000            441   _NSSMD0         BIT 0xfa
0000            442   _NSSMD1         BIT 0xfb
0000            443   _RXOVRN         BIT 0xfc
0000            444   _MODF           BIT 0xfd
0000            445   _WCOL           BIT 0xfe
0000            446   _SPIF           BIT 0xff
0000            447   _IT0            BIT 0x88
0000            448   _IE0            BIT 0x89
0000            449   _IT1            BIT 0x8a
0000            450   _IE1            BIT 0x8b
0000            451   _TR0            BIT 0x8c
0000            452   _TF0            BIT 0x8d
0000            453   _TR1            BIT 0x8e
0000            454   _TF1            BIT 0x8f
0000            455   _T2XCLK0        BIT 0xc8
0000            456   _T2XCLK1        BIT 0xc9
0000            457   _TR2            BIT 0xca
0000            458   _T2SPLIT        BIT 0xcb
0000            459   _TF2CEN         BIT 0xcc
0000            460   _TF2LEN         BIT 0xcd
0000            461   _TF2L           BIT 0xce
0000            462   _TF2H           BIT 0xcf
0000            463   _T4XCLK0        BIT 0x98
0000            464   _T4XCLK1        BIT 0x99
0000            465   _TR4            BIT 0x9a
0000            466   _T4SPLIT        BIT 0x9b
0000            467   _TF4CEN         BIT 0x9c
0000            468   _TF4LEN         BIT 0x9d
0000            469   _TF4L           BIT 0x9e
0000            470   _TF4H           BIT 0x9f
0000            471   _T5XCLK0        BIT 0xc0
0000            472   _T5XCLK1        BIT 0xc1
0000            473   _TR5            BIT 0xc2
0000            474   _T5SPLIT        BIT 0xc3
0000            475   _TF5CEN         BIT 0xc4
0000            476   _TF5LEN         BIT 0xc5
0000            477   _TF5L           BIT 0xc6
0000            478   _TF5H           BIT 0xc7
0000            479   _RIE            BIT 0xd8
0000            480   _RXTO0          BIT 0xd9
0000            481   _RXTO1          BIT 0xda
0000            482   _RFRQ           BIT 0xdb
0000            483   _TIE            BIT 0xdc
0000            484   _TXHOLD         BIT 0xdd
0000            485   _TXNF1          BIT 0xde
0000            486   _TFRQ           BIT 0xdf
0000            487   ;--------------------------------------------------------
0000            488   ; overlayable register banks
0000            489   ;--------------------------------------------------------
0000            490            rbank0 segment data overlay
0000            491   ;--------------------------------------------------------
0000            492   ; internal ram data
0000            493   ;--------------------------------------------------------
0000            494            rseg R_DSEG
0000            495   _overflow_count:
0000            496            ds 1
0001            497   _LCDprint_PARM_2:
0001            498            ds 1
0002            499   _main_mst_1_75:
0002            500            ds 4
0006            501   _main_i_1_75:
0006            502            ds 2
0008            503   _main_vmax1_1_75:
0008            504            ds 4
000C            505   _main_vmax2_1_75:
000C            506            ds 4
0010            507   _main_p_n_1_75:
0010            508            ds 4
0014            509   _main_sloc0_1_0:
0014            510            ds 4
0018            511   ;--------------------------------------------------------
0018            512   ; overlayable items in internal ram 
0018            513   ;--------------------------------------------------------
0000            514            rseg    R_OSEG
0000            515            rseg    R_OSEG
0000            516   _InitPinADC_PARM_2:
0000            517            ds 1
0001            518            rseg    R_OSEG
0001            519   ;--------------------------------------------------------
0001            520   ; indirectly addressable internal ram data
0001            521   ;--------------------------------------------------------
0000            522            rseg R_ISEG
0000            523   _main_v_1_75:
0000            524            ds 8
0008            525   ;--------------------------------------------------------
0008            526   ; absolute internal ram data
0008            527   ;--------------------------------------------------------
0000            528            DSEG
0000            529   ;--------------------------------------------------------
0000            530   ; bit data
0000            531   ;--------------------------------------------------------
0000            532            rseg R_BSEG
0000            533   _LCDprint_PARM_3:
0000            534            DBIT    1
0001            535   ;--------------------------------------------------------
0001            536   ; paged external ram data
0001            537   ;--------------------------------------------------------
0000            538            rseg R_PSEG
0000            539   ;--------------------------------------------------------
0000            540   ; external ram data
0000            541   ;--------------------------------------------------------
0000            542            rseg R_XSEG
0000            543   ;--------------------------------------------------------
0000            544   ; absolute external ram data
0000            545   ;--------------------------------------------------------
0000            546            XSEG
0000            547   ;--------------------------------------------------------
0000            548   ; external initialized ram data
0000            549   ;--------------------------------------------------------
0000            550            rseg R_IXSEG
0000            551            rseg R_HOME
0000            552            rseg R_GSINIT
0000            553            rseg R_CSEG
0000            554   ;--------------------------------------------------------
0000            555   ; Reset entry point and interrupt vectors
0000            556   ;--------------------------------------------------------
0000            557            CSEG at 0x0000
0000 020000     558            ljmp    _crt0
0003            559   ;--------------------------------------------------------
0003            560   ; global & static initialisations
0003            561   ;--------------------------------------------------------
0000            562            rseg R_HOME
0000            563            rseg R_GSINIT
0000            564            rseg R_GSINIT
0000            565   ;--------------------------------------------------------
0000            566   ; data variables initialization
0000            567   ;--------------------------------------------------------
0000            568            rseg R_DINIT
0000            569            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            570   ;--------------------------------------------------------
0000            571   ; code
0000            572   ;--------------------------------------------------------
0000            573            rseg R_CSEG
0000            574   ;------------------------------------------------------------
0000            575   ;Allocation info for local variables in function '_c51_external_startup'
0000            576   ;------------------------------------------------------------
0000            577   ;------------------------------------------------------------
0000            578   ;        D:\clone\LAB5\lab5v1.c:28: char _c51_external_startup (void)
0000            579   ;        -----------------------------------------
0000            580   ;         function _c51_external_startup
0000            581   ;        -----------------------------------------
0000            582   __c51_external_startup:
0000            583            using   0
0000            584   ;        D:\clone\LAB5\lab5v1.c:31: SFRPAGE = 0x00;
0000 75A700     585            mov     _SFRPAGE,#0x00
0003            586   ;        D:\clone\LAB5\lab5v1.c:32: WDTCN = 0xDE; //First key
0003 7597DE     587            mov     _WDTCN,#0xDE
0006            588   ;        D:\clone\LAB5\lab5v1.c:33: WDTCN = 0xAD; //Second key
0006 7597AD     589            mov     _WDTCN,#0xAD
0009            590   ;        D:\clone\LAB5\lab5v1.c:35: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     591            mov     _VDM0CN,#0x80
000C            592   ;        D:\clone\LAB5\lab5v1.c:36: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     593            mov     _RSTSRC,#0x06
000F            594   ;        D:\clone\LAB5\lab5v1.c:43: SFRPAGE = 0x10;
000F 75A710     595            mov     _SFRPAGE,#0x10
0012            596   ;        D:\clone\LAB5\lab5v1.c:44: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     597            mov     _PFE0CN,#0x20
0015            598   ;        D:\clone\LAB5\lab5v1.c:45: SFRPAGE = 0x00;
0015 75A700     599            mov     _SFRPAGE,#0x00
0018            600   ;        D:\clone\LAB5\lab5v1.c:66: CLKSEL = 0x00;
0018 75A900     601            mov     _CLKSEL,#0x00
001B            602   ;        D:\clone\LAB5\lab5v1.c:67: CLKSEL = 0x00;
001B 75A900     603            mov     _CLKSEL,#0x00
001E            604   ;        D:\clone\LAB5\lab5v1.c:68: while ((CLKSEL & 0x80) == 0);
001E            605   L002001?:
001E E5A9       606            mov     a,_CLKSEL
0020 30E7D0     607            jnb     acc.7,L002001?
0023            608   ;        D:\clone\LAB5\lab5v1.c:69: CLKSEL = 0x03;
0023 75A903     609            mov     _CLKSEL,#0x03
0026            610   ;        D:\clone\LAB5\lab5v1.c:70: CLKSEL = 0x03;
0026 75A903     611            mov     _CLKSEL,#0x03
0029            612   ;        D:\clone\LAB5\lab5v1.c:71: while ((CLKSEL & 0x80) == 0);
0029            613   L002004?:
0029 E5A9       614            mov     a,_CLKSEL
002B 30E750     615            jnb     acc.7,L002004?
002E            616   ;        D:\clone\LAB5\lab5v1.c:76: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     617            orl     _P0MDOUT,#0x10
0031            618   ;        D:\clone\LAB5\lab5v1.c:77: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     619            mov     _XBR0,#0x01
0034            620   ;        D:\clone\LAB5\lab5v1.c:78: XBR1     = 0X00;
0034 75E200     621            mov     _XBR1,#0x00
0037            622   ;        D:\clone\LAB5\lab5v1.c:79: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     623            mov     _XBR2,#0x40
003A            624   ;        D:\clone\LAB5\lab5v1.c:85: SCON0 = 0x10;
003A 759810     625            mov     _SCON0,#0x10
003D            626   ;        D:\clone\LAB5\lab5v1.c:86: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     627            mov     _CKCON0,_CKCON0
0040            628   ;        D:\clone\LAB5\lab5v1.c:88: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     629            mov     _TH1,#0xE6
0043            630   ;        D:\clone\LAB5\lab5v1.c:89: TL1 = TH1;      // Init Timer1
0043 858D8B     631            mov     _TL1,_TH1
0046            632   ;        D:\clone\LAB5\lab5v1.c:90: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     633            anl     _TMOD,#0x0F
0049            634   ;        D:\clone\LAB5\lab5v1.c:91: TMOD |=  0x20;                       
0049 438920     635            orl     _TMOD,#0x20
004C            636   ;        D:\clone\LAB5\lab5v1.c:92: TR1 = 1; // START Timer1
004C D28E       637            setb    _TR1
004E            638   ;        D:\clone\LAB5\lab5v1.c:93: TI = 1;  // Indicate TX0 ready
004E D299       639            setb    _TI
0050            640   ;        D:\clone\LAB5\lab5v1.c:95: return 0;
0050 758200     641            mov     dpl,#0x00
0053 22         642            ret
0054            643   ;------------------------------------------------------------
0054            644   ;Allocation info for local variables in function 'InitADC'
0054            645   ;------------------------------------------------------------
0054            646   ;------------------------------------------------------------
0054            647   ;        D:\clone\LAB5\lab5v1.c:98: void InitADC (void)
0054            648   ;        -----------------------------------------
0054            649   ;         function InitADC
0054            650   ;        -----------------------------------------
0054            651   _InitADC:
0054            652   ;        D:\clone\LAB5\lab5v1.c:100: SFRPAGE = 0x00;
0054 75A700     653            mov     _SFRPAGE,#0x00
0057            654   ;        D:\clone\LAB5\lab5v1.c:101: ADEN=0; // Disable ADC
0057 C2EF       655            clr     _ADEN
0059            656   ;        D:\clone\LAB5\lab5v1.c:106: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0059 75B280     657            mov     _ADC0CN1,#0x80
005C            658   ;        D:\clone\LAB5\lab5v1.c:110: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
005C 75BC20     659            mov     _ADC0CF0,#0x20
005F            660   ;        D:\clone\LAB5\lab5v1.c:114: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005F 75B91E     661            mov     _ADC0CF1,#0x1E
0062            662   ;        D:\clone\LAB5\lab5v1.c:123: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
0062 75E800     663            mov     _ADC0CN0,#0x00
0065            664   ;        D:\clone\LAB5\lab5v1.c:128: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0065 75DF3F     665            mov     _ADC0CF2,#0x3F
0068            666   ;        D:\clone\LAB5\lab5v1.c:132: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0068 75B300     667            mov     _ADC0CN2,#0x00
006B            668   ;        D:\clone\LAB5\lab5v1.c:134: ADEN=1; // Enable ADC
006B D2EF       669            setb    _ADEN
006D 22         670            ret
006E            671   ;------------------------------------------------------------
006E            672   ;Allocation info for local variables in function 'Timer3us'
006E            673   ;------------------------------------------------------------
006E            674   ;us                        Allocated to registers r2 
006E            675   ;i                         Allocated to registers r3 
006E            676   ;------------------------------------------------------------
006E            677   ;        D:\clone\LAB5\lab5v1.c:138: void Timer3us(unsigned char us)
006E            678   ;        -----------------------------------------
006E            679   ;         function Timer3us
006E            680   ;        -----------------------------------------
006E            681   _Timer3us:
006E AA82       682            mov     r2,dpl
0070            683   ;        D:\clone\LAB5\lab5v1.c:143: CKCON0|=0b_0100_0000;
0070 438E40     684            orl     _CKCON0,#0x40
0073            685   ;        D:\clone\LAB5\lab5v1.c:145: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0073 7592B8     686            mov     _TMR3RL,#0xB8
0076 7593FF     687            mov     (_TMR3RL >> 8),#0xFF
0079            688   ;        D:\clone\LAB5\lab5v1.c:146: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0079 859294     689            mov     _TMR3,_TMR3RL
007C 859395     690            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007F            691   ;        D:\clone\LAB5\lab5v1.c:148: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007F 759104     692            mov     _TMR3CN0,#0x04
0082            693   ;        D:\clone\LAB5\lab5v1.c:149: for (i = 0; i < us; i++)       // Count <us> overflows
0082 7B00       694            mov     r3,#0x00
0084            695   L004004?:
0084 C3         696            clr     c
0085 EB         697            mov     a,r3
0086 9A         698            subb    a,r2
0087 5000       699            jnc     L004007?
0089            700   ;        D:\clone\LAB5\lab5v1.c:151: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0089            701   L004001?:
0089 E591       702            mov     a,_TMR3CN0
008B 30E750     703            jnb     acc.7,L004001?
008E            704   ;        D:\clone\LAB5\lab5v1.c:152: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008E 53917F     705            anl     _TMR3CN0,#0x7F
0091            706   ;        D:\clone\LAB5\lab5v1.c:149: for (i = 0; i < us; i++)       // Count <us> overflows
0091 0B         707            inc     r3
0092 8000       708            sjmp    L004004?
0094            709   L004007?:
0094            710   ;        D:\clone\LAB5\lab5v1.c:154: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0094 759100     711            mov     _TMR3CN0,#0x00
0097 22         712            ret
0098            713   ;------------------------------------------------------------
0098            714   ;Allocation info for local variables in function 'waitms'
0098            715   ;------------------------------------------------------------
0098            716   ;ms                        Allocated to registers r2 r3 
0098            717   ;j                         Allocated to registers r4 r5 
0098            718   ;k                         Allocated to registers r6 
0098            719   ;------------------------------------------------------------
0098            720   ;        D:\clone\LAB5\lab5v1.c:157: void waitms (unsigned int ms)
0098            721   ;        -----------------------------------------
0098            722   ;         function waitms
0098            723   ;        -----------------------------------------
0098            724   _waitms:
0098 AA82       725            mov     r2,dpl
009A AB83       726            mov     r3,dph
009C            727   ;        D:\clone\LAB5\lab5v1.c:161: for(j=0; j<ms; j++)
009C 7C00       728            mov     r4,#0x00
009E 7D00       729            mov     r5,#0x00
00A0            730   L005005?:
00A0 C3         731            clr     c
00A1 EC         732            mov     a,r4
00A2 9A         733            subb    a,r2
00A3 ED         734            mov     a,r5
00A4 9B         735            subb    a,r3
00A5 5000       736            jnc     L005009?
00A7            737   ;        D:\clone\LAB5\lab5v1.c:162: for (k=0; k<4; k++) Timer3us(250);
00A7 7E00       738            mov     r6,#0x00
00A9            739   L005001?:
00A9 BE0490     740            cjne    r6,#0x04,L005018?
00AC            741   L005018?:
00AC 5000       742            jnc     L005007?
00AE 7582FA     743            mov     dpl,#0xFA
00B1 C002       744            push    ar2
00B3 C003       745            push    ar3
00B5 C004       746            push    ar4
00B7 C005       747            push    ar5
00B9 C006       748            push    ar6
00BB 120000     749            lcall   _Timer3us
00BE D006       750            pop     ar6
00C0 D005       751            pop     ar5
00C2 D004       752            pop     ar4
00C4 D003       753            pop     ar3
00C6 D002       754            pop     ar2
00C8 0E         755            inc     r6
00C9 8000       756            sjmp    L005001?
00CB            757   L005007?:
00CB            758   ;        D:\clone\LAB5\lab5v1.c:161: for(j=0; j<ms; j++)
00CB 0C         759            inc     r4
00CC BC00D0     760            cjne    r4,#0x00,L005005?
00CF 0D         761            inc     r5
00D0 8000       762            sjmp    L005005?
00D2            763   L005009?:
00D2 22         764            ret
00D3            765   ;------------------------------------------------------------
00D3            766   ;Allocation info for local variables in function 'LCD_pulse'
00D3            767   ;------------------------------------------------------------
00D3            768   ;------------------------------------------------------------
00D3            769   ;        D:\clone\LAB5\lab5v1.c:165: void LCD_pulse (void)
00D3            770   ;        -----------------------------------------
00D3            771   ;         function LCD_pulse
00D3            772   ;        -----------------------------------------
00D3            773   _LCD_pulse:
00D3            774   ;        D:\clone\LAB5\lab5v1.c:167: LCD_E=1;
00D3 D2A0       775            setb    _P2_0
00D5            776   ;        D:\clone\LAB5\lab5v1.c:168: Timer3us(40);
00D5 758228     777            mov     dpl,#0x28
00D8 120000     778            lcall   _Timer3us
00DB            779   ;        D:\clone\LAB5\lab5v1.c:169: LCD_E=0;
00DB C2A0       780            clr     _P2_0
00DD 22         781            ret
00DE            782   ;------------------------------------------------------------
00DE            783   ;Allocation info for local variables in function 'LCD_byte'
00DE            784   ;------------------------------------------------------------
00DE            785   ;x                         Allocated to registers r2 
00DE            786   ;------------------------------------------------------------
00DE            787   ;        D:\clone\LAB5\lab5v1.c:172: void LCD_byte (unsigned char x)
00DE            788   ;        -----------------------------------------
00DE            789   ;         function LCD_byte
00DE            790   ;        -----------------------------------------
00DE            791   _LCD_byte:
00DE AA82       792            mov     r2,dpl
00E0            793   ;        D:\clone\LAB5\lab5v1.c:175: ACC=x; //Send high nible
00E0 8AE0       794            mov     _ACC,r2
00E2            795   ;        D:\clone\LAB5\lab5v1.c:176: LCD_D7=ACC_7;
00E2 A2E7       796            mov     c,_ACC_7
00E4 9290       797            mov     _P1_0,c
00E6            798   ;        D:\clone\LAB5\lab5v1.c:177: LCD_D6=ACC_6;
00E6 A2E6       799            mov     c,_ACC_6
00E8 9291       800            mov     _P1_1,c
00EA            801   ;        D:\clone\LAB5\lab5v1.c:178: LCD_D5=ACC_5;
00EA A2E5       802            mov     c,_ACC_5
00EC 9292       803            mov     _P1_2,c
00EE            804   ;        D:\clone\LAB5\lab5v1.c:179: LCD_D4=ACC_4;
00EE A2E4       805            mov     c,_ACC_4
00F0 9293       806            mov     _P1_3,c
00F2            807   ;        D:\clone\LAB5\lab5v1.c:180: LCD_pulse();
00F2 C002       808            push    ar2
00F4 120000     809            lcall   _LCD_pulse
00F7            810   ;        D:\clone\LAB5\lab5v1.c:181: Timer3us(40);
00F7 758228     811            mov     dpl,#0x28
00FA 120000     812            lcall   _Timer3us
00FD D002       813            pop     ar2
00FF            814   ;        D:\clone\LAB5\lab5v1.c:182: ACC=x; //Send low nible
00FF 8AE0       815            mov     _ACC,r2
0101            816   ;        D:\clone\LAB5\lab5v1.c:183: LCD_D7=ACC_3;
0101 A2E3       817            mov     c,_ACC_3
0103 9290       818            mov     _P1_0,c
0105            819   ;        D:\clone\LAB5\lab5v1.c:184: LCD_D6=ACC_2;
0105 A2E2       820            mov     c,_ACC_2
0107 9291       821            mov     _P1_1,c
0109            822   ;        D:\clone\LAB5\lab5v1.c:185: LCD_D5=ACC_1;
0109 A2E1       823            mov     c,_ACC_1
010B 9292       824            mov     _P1_2,c
010D            825   ;        D:\clone\LAB5\lab5v1.c:186: LCD_D4=ACC_0;
010D A2E0       826            mov     c,_ACC_0
010F 9293       827            mov     _P1_3,c
0111            828   ;        D:\clone\LAB5\lab5v1.c:187: LCD_pulse();
0111 020000     829            ljmp    _LCD_pulse
0114            830   ;------------------------------------------------------------
0114            831   ;Allocation info for local variables in function 'WriteData'
0114            832   ;------------------------------------------------------------
0114            833   ;x                         Allocated to registers r2 
0114            834   ;------------------------------------------------------------
0114            835   ;        D:\clone\LAB5\lab5v1.c:190: void WriteData (unsigned char x)
0114            836   ;        -----------------------------------------
0114            837   ;         function WriteData
0114            838   ;        -----------------------------------------
0114            839   _WriteData:
0114 AA82       840            mov     r2,dpl
0116            841   ;        D:\clone\LAB5\lab5v1.c:192: LCD_RS=1;
0116 D297       842            setb    _P1_7
0118            843   ;        D:\clone\LAB5\lab5v1.c:193: LCD_byte(x);
0118 8A82       844            mov     dpl,r2
011A 120000     845            lcall   _LCD_byte
011D            846   ;        D:\clone\LAB5\lab5v1.c:194: waitms(2);
011D 900002     847            mov     dptr,#0x0002
0120 020000     848            ljmp    _waitms
0123            849   ;------------------------------------------------------------
0123            850   ;Allocation info for local variables in function 'WriteCommand'
0123            851   ;------------------------------------------------------------
0123            852   ;x                         Allocated to registers r2 
0123            853   ;------------------------------------------------------------
0123            854   ;        D:\clone\LAB5\lab5v1.c:197: void WriteCommand (unsigned char x)
0123            855   ;        -----------------------------------------
0123            856   ;         function WriteCommand
0123            857   ;        -----------------------------------------
0123            858   _WriteCommand:
0123 AA82       859            mov     r2,dpl
0125            860   ;        D:\clone\LAB5\lab5v1.c:199: LCD_RS=0;
0125 C297       861            clr     _P1_7
0127            862   ;        D:\clone\LAB5\lab5v1.c:200: LCD_byte(x);
0127 8A82       863            mov     dpl,r2
0129 120000     864            lcall   _LCD_byte
012C            865   ;        D:\clone\LAB5\lab5v1.c:201: waitms(5);
012C 900005     866            mov     dptr,#0x0005
012F 020000     867            ljmp    _waitms
0132            868   ;------------------------------------------------------------
0132            869   ;Allocation info for local variables in function 'LCD_4BIT'
0132            870   ;------------------------------------------------------------
0132            871   ;------------------------------------------------------------
0132            872   ;        D:\clone\LAB5\lab5v1.c:204: void LCD_4BIT (void)
0132            873   ;        -----------------------------------------
0132            874   ;         function LCD_4BIT
0132            875   ;        -----------------------------------------
0132            876   _LCD_4BIT:
0132            877   ;        D:\clone\LAB5\lab5v1.c:206: LCD_E=0; // Resting state of LCD's enable is zero
0132 C2A0       878            clr     _P2_0
0134            879   ;        D:\clone\LAB5\lab5v1.c:208: waitms(20);
0134 900014     880            mov     dptr,#0x0014
0137 120000     881            lcall   _waitms
013A            882   ;        D:\clone\LAB5\lab5v1.c:210: WriteCommand(0x33);
013A 758233     883            mov     dpl,#0x33
013D 120000     884            lcall   _WriteCommand
0140            885   ;        D:\clone\LAB5\lab5v1.c:211: WriteCommand(0x33);
0140 758233     886            mov     dpl,#0x33
0143 120000     887            lcall   _WriteCommand
0146            888   ;        D:\clone\LAB5\lab5v1.c:212: WriteCommand(0x32); // Change to 4-bit mode
0146 758232     889            mov     dpl,#0x32
0149 120000     890            lcall   _WriteCommand
014C            891   ;        D:\clone\LAB5\lab5v1.c:215: WriteCommand(0x28);
014C 758228     892            mov     dpl,#0x28
014F 120000     893            lcall   _WriteCommand
0152            894   ;        D:\clone\LAB5\lab5v1.c:216: WriteCommand(0x0c);
0152 75820C     895            mov     dpl,#0x0C
0155 120000     896            lcall   _WriteCommand
0158            897   ;        D:\clone\LAB5\lab5v1.c:217: WriteCommand(0x01); // Clear screen command (takes some time)
0158 758201     898            mov     dpl,#0x01
015B 120000     899            lcall   _WriteCommand
015E            900   ;        D:\clone\LAB5\lab5v1.c:218: waitms(20); // Wait for clear screen command to finsih.
015E 900014     901            mov     dptr,#0x0014
0161 020000     902            ljmp    _waitms
0164            903   ;------------------------------------------------------------
0164            904   ;Allocation info for local variables in function 'LCDprint'
0164            905   ;------------------------------------------------------------
0164            906   ;line                      Allocated with name '_LCDprint_PARM_2'
0164            907   ;string                    Allocated to registers r2 r3 r4 
0164            908   ;j                         Allocated to registers r5 r6 
0164            909   ;------------------------------------------------------------
0164            910   ;        D:\clone\LAB5\lab5v1.c:221: void LCDprint(char * string, unsigned char line, bit clear)
0164            911   ;        -----------------------------------------
0164            912   ;         function LCDprint
0164            913   ;        -----------------------------------------
0164            914   _LCDprint:
0164 AA82       915            mov     r2,dpl
0166 AB83       916            mov     r3,dph
0168 ACF0       917            mov     r4,b
016A            918   ;        D:\clone\LAB5\lab5v1.c:225: WriteCommand(line==2?0xc0:0x80);
016A 7402       919            mov     a,#0x02
016C B57050     920            cjne    a,_LCDprint_PARM_2,L011013?
016F 7DC0       921            mov     r5,#0xC0
0171 8000       922            sjmp    L011014?
0173            923   L011013?:
0173 7D80       924            mov     r5,#0x80
0175            925   L011014?:
0175 8D82       926            mov     dpl,r5
0177 C002       927            push    ar2
0179 C003       928            push    ar3
017B C004       929            push    ar4
017D 120000     930            lcall   _WriteCommand
0180            931   ;        D:\clone\LAB5\lab5v1.c:226: waitms(5);
0180 900005     932            mov     dptr,#0x0005
0183 120000     933            lcall   _waitms
0186 D004       934            pop     ar4
0188 D003       935            pop     ar3
018A D002       936            pop     ar2
018C            937   ;        D:\clone\LAB5\lab5v1.c:227: for(j=0; string[j]!=0; j++) WriteData(string[j]);// Write the message
018C 7D00       938            mov     r5,#0x00
018E 7E00       939            mov     r6,#0x00
0190            940   L011003?:
0190 ED         941            mov     a,r5
0191 2A         942            add     a,r2
0192 FF         943            mov     r7,a
0193 EE         944            mov     a,r6
0194 3B         945            addc    a,r3
0195 F8         946            mov     r0,a
0196 8C01       947            mov     ar1,r4
0198 8F82       948            mov     dpl,r7
019A 8883       949            mov     dph,r0
019C 89F0       950            mov     b,r1
019E 120000     951            lcall   __gptrget
01A1 FF         952            mov     r7,a
01A2 6000       953            jz      L011006?
01A4 8F82       954            mov     dpl,r7
01A6 C002       955            push    ar2
01A8 C003       956            push    ar3
01AA C004       957            push    ar4
01AC C005       958            push    ar5
01AE C006       959            push    ar6
01B0 120000     960            lcall   _WriteData
01B3 D006       961            pop     ar6
01B5 D005       962            pop     ar5
01B7 D004       963            pop     ar4
01B9 D003       964            pop     ar3
01BB D002       965            pop     ar2
01BD 0D         966            inc     r5
01BE BD00D0     967            cjne    r5,#0x00,L011003?
01C1 0E         968            inc     r6
01C2 8000       969            sjmp    L011003?
01C4            970   L011006?:
01C4            971   ;        D:\clone\LAB5\lab5v1.c:228: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01C4 302090     972            jnb     _LCDprint_PARM_3,L011011?
01C7 8D02       973            mov     ar2,r5
01C9 8E03       974            mov     ar3,r6
01CB            975   L011007?:
01CB C3         976            clr     c
01CC EA         977            mov     a,r2
01CD 9410       978            subb    a,#0x10
01CF EB         979            mov     a,r3
01D0 6480       980            xrl     a,#0x80
01D2 9480       981            subb    a,#0x80
01D4 5000       982            jnc     L011011?
01D6 758220     983            mov     dpl,#0x20
01D9 C002       984            push    ar2
01DB C003       985            push    ar3
01DD 120000     986            lcall   _WriteData
01E0 D003       987            pop     ar3
01E2 D002       988            pop     ar2
01E4 0A         989            inc     r2
01E5 BA00D0     990            cjne    r2,#0x00,L011007?
01E8 0B         991            inc     r3
01E9 8000       992            sjmp    L011007?
01EB            993   L011011?:
01EB 22         994            ret
01EC            995   ;------------------------------------------------------------
01EC            996   ;Allocation info for local variables in function 'TIMER0_Init'
01EC            997   ;------------------------------------------------------------
01EC            998   ;------------------------------------------------------------
01EC            999   ;        D:\clone\LAB5\lab5v1.c:231: void TIMER0_Init(void)
01EC           1000   ;        -----------------------------------------
01EC           1001   ;         function TIMER0_Init
01EC           1002   ;        -----------------------------------------
01EC           1003   _TIMER0_Init:
01EC           1004   ;        D:\clone\LAB5\lab5v1.c:233: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
01EC 5389F0    1005            anl     _TMOD,#0xF0
01EF           1006   ;        D:\clone\LAB5\lab5v1.c:234: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
01EF 438901    1007            orl     _TMOD,#0x01
01F2           1008   ;        D:\clone\LAB5\lab5v1.c:235: TR0=0; // Stop Timer/Counter 0
01F2 C28C      1009            clr     _TR0
01F4 22        1010            ret
01F5           1011   ;------------------------------------------------------------
01F5           1012   ;Allocation info for local variables in function 'InitPinADC'
01F5           1013   ;------------------------------------------------------------
01F5           1014   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
01F5           1015   ;portno                    Allocated to registers r2 
01F5           1016   ;mask                      Allocated to registers r3 
01F5           1017   ;------------------------------------------------------------
01F5           1018   ;        D:\clone\LAB5\lab5v1.c:240: void InitPinADC (unsigned char portno, unsigned char pinno)
01F5           1019   ;        -----------------------------------------
01F5           1020   ;         function InitPinADC
01F5           1021   ;        -----------------------------------------
01F5           1022   _InitPinADC:
01F5 AA82      1023            mov     r2,dpl
01F7           1024   ;        D:\clone\LAB5\lab5v1.c:244: mask=1<<pinno;
01F7 85C0F0    1025            mov     b,_InitPinADC_PARM_2
01FA 05F0      1026            inc     b
01FC 7401      1027            mov     a,#0x01
01FE 8000      1028            sjmp    L013013?
0200           1029   L013011?:
0200 25E0      1030            add     a,acc
0202           1031   L013013?:
0202 D5F050    1032            djnz    b,L013011?
0205 FB        1033            mov     r3,a
0206           1034   ;        D:\clone\LAB5\lab5v1.c:246: SFRPAGE = 0x20;
0206 75A720    1035            mov     _SFRPAGE,#0x20
0209           1036   ;        D:\clone\LAB5\lab5v1.c:247: switch (portno)
0209 BA0090    1037            cjne    r2,#0x00,L013014?
020C 8000      1038            sjmp    L013001?
020E           1039   L013014?:
020E BA0110    1040            cjne    r2,#0x01,L013015?
0211 8000      1041            sjmp    L013002?
0213           1042   L013015?:
0213           1043   ;        D:\clone\LAB5\lab5v1.c:249: case 0:
0213 BA0290    1044            cjne    r2,#0x02,L013005?
0216 8000      1045            sjmp    L013003?
0218           1046   L013001?:
0218           1047   ;        D:\clone\LAB5\lab5v1.c:250: P0MDIN &= (~mask); // Set pin as analog input
0218 EB        1048            mov     a,r3
0219 F4        1049            cpl     a
021A FA        1050            mov     r2,a
021B 52F1      1051            anl     _P0MDIN,a
021D           1052   ;        D:\clone\LAB5\lab5v1.c:251: P0SKIP |= mask; // Skip Crossbar decoding for this pin
021D EB        1053            mov     a,r3
021E 42D4      1054            orl     _P0SKIP,a
0220           1055   ;        D:\clone\LAB5\lab5v1.c:252: break;
0220           1056   ;        D:\clone\LAB5\lab5v1.c:253: case 1:
0220 8000      1057            sjmp    L013005?
0222           1058   L013002?:
0222           1059   ;        D:\clone\LAB5\lab5v1.c:254: P1MDIN &= (~mask); // Set pin as analog input
0222 EB        1060            mov     a,r3
0223 F4        1061            cpl     a
0224 FA        1062            mov     r2,a
0225 52F2      1063            anl     _P1MDIN,a
0227           1064   ;        D:\clone\LAB5\lab5v1.c:255: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0227 EB        1065            mov     a,r3
0228 42D5      1066            orl     _P1SKIP,a
022A           1067   ;        D:\clone\LAB5\lab5v1.c:256: break;
022A           1068   ;        D:\clone\LAB5\lab5v1.c:257: case 2:
022A 8000      1069            sjmp    L013005?
022C           1070   L013003?:
022C           1071   ;        D:\clone\LAB5\lab5v1.c:258: P2MDIN &= (~mask); // Set pin as analog input
022C EB        1072            mov     a,r3
022D F4        1073            cpl     a
022E FA        1074            mov     r2,a
022F 52F3      1075            anl     _P2MDIN,a
0231           1076   ;        D:\clone\LAB5\lab5v1.c:259: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0231 EB        1077            mov     a,r3
0232 42CC      1078            orl     _P2SKIP,a
0234           1079   ;        D:\clone\LAB5\lab5v1.c:263: }
0234           1080   L013005?:
0234           1081   ;        D:\clone\LAB5\lab5v1.c:264: SFRPAGE = 0x00;
0234 75A700    1082            mov     _SFRPAGE,#0x00
0237 22        1083            ret
0238           1084   ;------------------------------------------------------------
0238           1085   ;Allocation info for local variables in function 'ADC_at_Pin'
0238           1086   ;------------------------------------------------------------
0238           1087   ;pin                       Allocated to registers 
0238           1088   ;------------------------------------------------------------
0238           1089   ;        D:\clone\LAB5\lab5v1.c:268: unsigned int ADC_at_Pin(unsigned char pin)
0238           1090   ;        -----------------------------------------
0238           1091   ;         function ADC_at_Pin
0238           1092   ;        -----------------------------------------
0238           1093   _ADC_at_Pin:
0238 8582BB    1094            mov     _ADC0MX,dpl
023B           1095   ;        D:\clone\LAB5\lab5v1.c:271: ADINT = 0;
023B C2ED      1096            clr     _ADINT
023D           1097   ;        D:\clone\LAB5\lab5v1.c:272: ADBUSY = 1;     // Convert voltage at the pin
023D D2EC      1098            setb    _ADBUSY
023F           1099   ;        D:\clone\LAB5\lab5v1.c:273: while (!ADINT); // Wait for conversion to complete
023F           1100   L014001?:
023F 30ED10    1101            jnb     _ADINT,L014001?
0242           1102   ;        D:\clone\LAB5\lab5v1.c:274: return (ADC0);
0242 85BD82    1103            mov     dpl,_ADC0
0245 85BE83    1104            mov     dph,(_ADC0 >> 8)
0248 22        1105            ret
0249           1106   ;------------------------------------------------------------
0249           1107   ;Allocation info for local variables in function 'Volts_at_Pin'
0249           1108   ;------------------------------------------------------------
0249           1109   ;pin                       Allocated to registers r2 
0249           1110   ;------------------------------------------------------------
0249           1111   ;        D:\clone\LAB5\lab5v1.c:277: float Volts_at_Pin(unsigned char pin)
0249           1112   ;        -----------------------------------------
0249           1113   ;         function Volts_at_Pin
0249           1114   ;        -----------------------------------------
0249           1115   _Volts_at_Pin:
0249           1116   ;        D:\clone\LAB5\lab5v1.c:279: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0249 120000    1117            lcall   _ADC_at_Pin
024C 120000    1118            lcall   ___uint2fs
024F AA82      1119            mov     r2,dpl
0251 AB83      1120            mov     r3,dph
0253 ACF0      1121            mov     r4,b
0255 FD        1122            mov     r5,a
0256 C002      1123            push    ar2
0258 C003      1124            push    ar3
025A C004      1125            push    ar4
025C C005      1126            push    ar5
025E 90923A    1127            mov     dptr,#0x923A
0261 75F053    1128            mov     b,#0x53
0264 7440      1129            mov     a,#0x40
0266 120000    1130            lcall   ___fsmul
0269 AA82      1131            mov     r2,dpl
026B AB83      1132            mov     r3,dph
026D ACF0      1133            mov     r4,b
026F FD        1134            mov     r5,a
0270 E581      1135            mov     a,sp
0272 24FC      1136            add     a,#0xfc
0274 F581      1137            mov     sp,a
0276 E4        1138            clr     a
0277 C0E0      1139            push    acc
0279 74FC      1140            mov     a,#0xFC
027B C0E0      1141            push    acc
027D 747F      1142            mov     a,#0x7F
027F C0E0      1143            push    acc
0281 7446      1144            mov     a,#0x46
0283 C0E0      1145            push    acc
0285 8A82      1146            mov     dpl,r2
0287 8B83      1147            mov     dph,r3
0289 8CF0      1148            mov     b,r4
028B ED        1149            mov     a,r5
028C 120000    1150            lcall   ___fsdiv
028F AA82      1151            mov     r2,dpl
0291 AB83      1152            mov     r3,dph
0293 ACF0      1153            mov     r4,b
0295 FD        1154            mov     r5,a
0296 E581      1155            mov     a,sp
0298 24FC      1156            add     a,#0xfc
029A F581      1157            mov     sp,a
029C 8A82      1158            mov     dpl,r2
029E 8B83      1159            mov     dph,r3
02A0 8CF0      1160            mov     b,r4
02A2 ED        1161            mov     a,r5
02A3 22        1162            ret
02A4           1163   ;------------------------------------------------------------
02A4           1164   ;Allocation info for local variables in function 'Get_ADC'
02A4           1165   ;------------------------------------------------------------
02A4           1166   ;------------------------------------------------------------
02A4           1167   ;        D:\clone\LAB5\lab5v1.c:282: unsigned int Get_ADC (void)
02A4           1168   ;        -----------------------------------------
02A4           1169   ;         function Get_ADC
02A4           1170   ;        -----------------------------------------
02A4           1171   _Get_ADC:
02A4           1172   ;        D:\clone\LAB5\lab5v1.c:284: ADINT = 0;
02A4 C2ED      1173            clr     _ADINT
02A6           1174   ;        D:\clone\LAB5\lab5v1.c:285: ADBUSY = 1;
02A6 D2EC      1175            setb    _ADBUSY
02A8           1176   ;        D:\clone\LAB5\lab5v1.c:286: while (!ADINT); // Wait for conversion to complete
02A8           1177   L016001?:
02A8 30ED50    1178            jnb     _ADINT,L016001?
02AB           1179   ;        D:\clone\LAB5\lab5v1.c:287: return (ADC0);
02AB 85BD82    1180            mov     dpl,_ADC0
02AE 85BE83    1181            mov     dph,(_ADC0 >> 8)
02B1 22        1182            ret
02B2           1183   ;------------------------------------------------------------
02B2           1184   ;Allocation info for local variables in function 'main'
02B2           1185   ;------------------------------------------------------------
02B2           1186   ;period                    Allocated to registers r2 r3 r4 r5 
02B2           1187   ;mst                       Allocated with name '_main_mst_1_75'
02B2           1188   ;i                         Allocated with name '_main_i_1_75'
02B2           1189   ;vmax1                     Allocated with name '_main_vmax1_1_75'
02B2           1190   ;vmax2                     Allocated with name '_main_vmax2_1_75'
02B2           1191   ;phase_diff                Allocated to registers r2 r3 r4 r5 
02B2           1192   ;degrees                   Allocated to registers r2 r3 r4 r5 
02B2           1193   ;p_n                       Allocated with name '_main_p_n_1_75'
02B2           1194   ;sloc0                     Allocated with name '_main_sloc0_1_0'
02B2           1195   ;v                         Allocated with name '_main_v_1_75'
02B2           1196   ;------------------------------------------------------------
02B2           1197   ;        D:\clone\LAB5\lab5v1.c:292: void main (void)
02B2           1198   ;        -----------------------------------------
02B2           1199   ;         function main
02B2           1200   ;        -----------------------------------------
02B2           1201   _main:
02B2           1202   ;        D:\clone\LAB5\lab5v1.c:296: float mst = 0.0;
02B2 75B000    1203            mov     _main_mst_1_75,#0x00
02B5 75B100    1204            mov     (_main_mst_1_75 + 1),#0x00
02B8 75B200    1205            mov     (_main_mst_1_75 + 2),#0x00
02BB 75B300    1206            mov     (_main_mst_1_75 + 3),#0x00
02BE           1207   ;        D:\clone\LAB5\lab5v1.c:298: float vmax1=0.0;
02BE 754000    1208            mov     _main_vmax1_1_75,#0x00
02C1 754100    1209            mov     (_main_vmax1_1_75 + 1),#0x00
02C4 754200    1210            mov     (_main_vmax1_1_75 + 2),#0x00
02C7 754300    1211            mov     (_main_vmax1_1_75 + 3),#0x00
02CA           1212   ;        D:\clone\LAB5\lab5v1.c:299: float vmax2=0.0;
02CA 759000    1213            mov     _main_vmax2_1_75,#0x00
02CD 759100    1214            mov     (_main_vmax2_1_75 + 1),#0x00
02D0 759200    1215            mov     (_main_vmax2_1_75 + 2),#0x00
02D3 759300    1216            mov     (_main_vmax2_1_75 + 3),#0x00
02D6           1217   ;        D:\clone\LAB5\lab5v1.c:302: float p_n=0.0;
02D6 75D000    1218            mov     _main_p_n_1_75,#0x00
02D9 75D100    1219            mov     (_main_p_n_1_75 + 1),#0x00
02DC 75D200    1220            mov     (_main_p_n_1_75 + 2),#0x00
02DF 75D300    1221            mov     (_main_p_n_1_75 + 3),#0x00
02E2           1222   ;        D:\clone\LAB5\lab5v1.c:303: TIMER0_Init();
02E2 120000    1223            lcall   _TIMER0_Init
02E5           1224   ;        D:\clone\LAB5\lab5v1.c:304: LCD_4BIT();
02E5 120000    1225            lcall   _LCD_4BIT
02E8           1226   ;        D:\clone\LAB5\lab5v1.c:306: waitms(500); // Give PuTTy a chance to start before sending
02E8 9001F4    1227            mov     dptr,#0x01F4
02EB 120000    1228            lcall   _waitms
02EE           1229   ;        D:\clone\LAB5\lab5v1.c:307: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
02EE 7490      1230            mov     a,#__str_0
02F0 C0E0      1231            push    acc
02F2 74BB      1232            mov     a,#(__str_0 >> 8)
02F4 C0E0      1233            push    acc
02F6 7480      1234            mov     a,#0x80
02F8 C0E0      1235            push    acc
02FA 120000    1236            lcall   _printf
02FD 1581      1237            dec     sp
02FF 1581      1238            dec     sp
0301 1581      1239            dec     sp
0303           1240   ;        D:\clone\LAB5\lab5v1.c:312: __FILE__, __DATE__, __TIME__);
0303           1241   ;        D:\clone\LAB5\lab5v1.c:311: "Compiled: %s, %s\n\n",
0303 7410      1242            mov     a,#__str_4
0305 C0E0      1243            push    acc
0307 74BC      1244            mov     a,#(__str_4 >> 8)
0309 C0E0      1245            push    acc
030B 7480      1246            mov     a,#0x80
030D C0E0      1247            push    acc
030F 7450      1248            mov     a,#__str_3
0311 C0E0      1249            push    acc
0313 74BC      1250            mov     a,#(__str_3 >> 8)
0315 C0E0      1251            push    acc
0317 7480      1252            mov     a,#0x80
0319 C0E0      1253            push    acc
031B 7490      1254            mov     a,#__str_2
031D C0E0      1255            push    acc
031F 74BC      1256            mov     a,#(__str_2 >> 8)
0321 C0E0      1257            push    acc
0323 7480      1258            mov     a,#0x80
0325 C0E0      1259            push    acc
0327 74D0      1260            mov     a,#__str_1
0329 C0E0      1261            push    acc
032B 74BC      1262            mov     a,#(__str_1 >> 8)
032D C0E0      1263            push    acc
032F 7480      1264            mov     a,#0x80
0331 C0E0      1265            push    acc
0333 120000    1266            lcall   _printf
0336 E581      1267            mov     a,sp
0338 24F4      1268            add     a,#0xf4
033A F581      1269            mov     sp,a
033C           1270   ;        D:\clone\LAB5\lab5v1.c:314: InitPinADC(1, 4); // Configure P1.6 as analog input
033C 75C004    1271            mov     _InitPinADC_PARM_2,#0x04
033F 758201    1272            mov     dpl,#0x01
0342 120000    1273            lcall   _InitPinADC
0345           1274   ;        D:\clone\LAB5\lab5v1.c:315: InitPinADC(1, 5); // Configure P1.7 as analog input
0345 75C005    1275            mov     _InitPinADC_PARM_2,#0x05
0348 758201    1276            mov     dpl,#0x01
034B 120000    1277            lcall   _InitPinADC
034E           1278   ;        D:\clone\LAB5\lab5v1.c:317: InitADC();
034E 120000    1279            lcall   _InitADC
0351           1280   ;        D:\clone\LAB5\lab5v1.c:319: LCDprint("vr:     f:    Hz",1,1);
0351 757001    1281            mov     _LCDprint_PARM_2,#0x01
0354 D220      1282            setb    _LCDprint_PARM_3
0356 90BD10    1283            mov     dptr,#__str_5
0359 75F080    1284            mov     b,#0x80
035C 120000    1285            lcall   _LCDprint
035F           1286   ;        D:\clone\LAB5\lab5v1.c:320: LCDprint("vt:     pha:    ",2,1);
035F 757002    1287            mov     _LCDprint_PARM_2,#0x02
0362 D220      1288            setb    _LCDprint_PARM_3
0364 90BD50    1289            mov     dptr,#__str_6
0367 75F080    1290            mov     b,#0x80
036A 120000    1291            lcall   _LCDprint
036D           1292   ;        D:\clone\LAB5\lab5v1.c:323: for (i = 0; i < 10; i++){
036D           1293   L017070?:
036D E4        1294            clr     a
036E F5F0      1295            mov     _main_i_1_75,a
0370 F5F1      1296            mov     (_main_i_1_75 + 1),a
0372           1297   L017049?:
0372 C3        1298            clr     c
0373 E5F0      1299            mov     a,_main_i_1_75
0375 940A      1300            subb    a,#0x0A
0377 E5F1      1301            mov     a,(_main_i_1_75 + 1)
0379 6480      1302            xrl     a,#0x80
037B 9480      1303            subb    a,#0x80
037D 4000      1304            jc      L017089?
037F 020000    1305            ljmp    L017052?
0382           1306   L017089?:
0382           1307   ;        D:\clone\LAB5\lab5v1.c:325: TL0=0; 
0382 758A00    1308            mov     _TL0,#0x00
0385           1309   ;        D:\clone\LAB5\lab5v1.c:326: TH0=0;
0385 758C00    1310            mov     _TH0,#0x00
0388           1311   ;        D:\clone\LAB5\lab5v1.c:327: TF0=0;
0388 C28D      1312            clr     _TF0
038A           1313   ;        D:\clone\LAB5\lab5v1.c:328: overflow_count=0;
038A 75B000    1314            mov     _overflow_count,#0x00
038D           1315   ;        D:\clone\LAB5\lab5v1.c:329: while(P0_1!=0); // Wait for the signal to be zero
038D           1316   L017001?:
038D 208190    1317            jb      _P0_1,L017001?
0390           1318   ;        D:\clone\LAB5\lab5v1.c:330: while(P0_1!=1); // Wait for the signal to be one
0390           1319   L017004?:
0390 3081D0    1320            jnb     _P0_1,L017004?
0393           1321   ;        D:\clone\LAB5\lab5v1.c:331: TR0=1; // Start the timer
0393 D28C      1322            setb    _TR0
0395           1323   ;        D:\clone\LAB5\lab5v1.c:332: while(P0_1!=0) // Wait for the signal to be zero
0395           1324   L017009?:
0395 308150    1325            jnb     _P0_1,L017014?
0398           1326   ;        D:\clone\LAB5\lab5v1.c:334: if(TF0==1) // Did the 16-bit timer overflow?
0398           1327   ;        D:\clone\LAB5\lab5v1.c:336: TF0=0;
0398 108D90    1328            jbc     _TF0,L017093?
039B 8000      1329            sjmp    L017009?
039D           1330   L017093?:
039D           1331   ;        D:\clone\LAB5\lab5v1.c:337: overflow_count++;
039D 05B0      1332            inc     _overflow_count
039F           1333   ;        D:\clone\LAB5\lab5v1.c:340: while(P0_1!=1) // Wait for the signal to be one
039F 8000      1334            sjmp    L017009?
03A1           1335   L017014?:
03A1 2081D0    1336            jb      _P0_1,L017016?
03A4           1337   ;        D:\clone\LAB5\lab5v1.c:342: if(TF0==1) // Did the 16-bit timer overflow?
03A4           1338   ;        D:\clone\LAB5\lab5v1.c:344: TF0=0;
03A4 108D10    1339            jbc     _TF0,L017095?
03A7 8000      1340            sjmp    L017014?
03A9           1341   L017095?:
03A9           1342   ;        D:\clone\LAB5\lab5v1.c:345: overflow_count++;
03A9 05B0      1343            inc     _overflow_count
03AB 8000      1344            sjmp    L017014?
03AD           1345   L017016?:
03AD           1346   ;        D:\clone\LAB5\lab5v1.c:348: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
03AD C28C      1347            clr     _TR0
03AF           1348   ;        D:\clone\LAB5\lab5v1.c:349: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
03AF 85B082    1349            mov     dpl,_overflow_count
03B2 120000    1350            lcall   ___uchar2fs
03B5 AE82      1351            mov     r6,dpl
03B7 AF83      1352            mov     r7,dph
03B9 AAF0      1353            mov     r2,b
03BB FB        1354            mov     r3,a
03BC C006      1355            push    ar6
03BE C007      1356            push    ar7
03C0 C002      1357            push    ar2
03C2 C003      1358            push    ar3
03C4 900000    1359            mov     dptr,#0x0000
03C7 75F080    1360            mov     b,#0x80
03CA 7447      1361            mov     a,#0x47
03CC 120000    1362            lcall   ___fsmul
03CF 858210    1363            mov     _main_sloc0_1_0,dpl
03D2 858311    1364            mov     (_main_sloc0_1_0 + 1),dph
03D5 85F012    1365            mov     (_main_sloc0_1_0 + 2),b
03D8 F513      1366            mov     (_main_sloc0_1_0 + 3),a
03DA E581      1367            mov     a,sp
03DC 24FC      1368            add     a,#0xfc
03DE F581      1369            mov     sp,a
03E0 858C82    1370            mov     dpl,_TH0
03E3 120000    1371            lcall   ___uchar2fs
03E6 AE82      1372            mov     r6,dpl
03E8 AF83      1373            mov     r7,dph
03EA AAF0      1374            mov     r2,b
03EC FB        1375            mov     r3,a
03ED C006      1376            push    ar6
03EF C007      1377            push    ar7
03F1 C002      1378            push    ar2
03F3 C003      1379            push    ar3
03F5 900000    1380            mov     dptr,#0x0000
03F8 75F080    1381            mov     b,#0x80
03FB 7443      1382            mov     a,#0x43
03FD 120000    1383            lcall   ___fsmul
0400 AA82      1384            mov     r2,dpl
0402 AB83      1385            mov     r3,dph
0404 ACF0      1386            mov     r4,b
0406 FD        1387            mov     r5,a
0407 E581      1388            mov     a,sp
0409 24FC      1389            add     a,#0xfc
040B F581      1390            mov     sp,a
040D C002      1391            push    ar2
040F C003      1392            push    ar3
0411 C004      1393            push    ar4
0413 C005      1394            push    ar5
0415 851082    1395            mov     dpl,_main_sloc0_1_0
0418 851183    1396            mov     dph,(_main_sloc0_1_0 + 1)
041B 8512F0    1397            mov     b,(_main_sloc0_1_0 + 2)
041E E513      1398            mov     a,(_main_sloc0_1_0 + 3)
0420 120000    1399            lcall   ___fsadd
0423 858210    1400            mov     _main_sloc0_1_0,dpl
0426 858311    1401            mov     (_main_sloc0_1_0 + 1),dph
0429 85F012    1402            mov     (_main_sloc0_1_0 + 2),b
042C F513      1403            mov     (_main_sloc0_1_0 + 3),a
042E E581      1404            mov     a,sp
0430 24FC      1405            add     a,#0xfc
0432 F581      1406            mov     sp,a
0434 AE8A      1407            mov     r6,_TL0
0436 7F00      1408            mov     r7,#0x00
0438 8E82      1409            mov     dpl,r6
043A 8F83      1410            mov     dph,r7
043C 120000    1411            lcall   ___sint2fs
043F AE82      1412            mov     r6,dpl
0441 AF83      1413            mov     r7,dph
0443 AAF0      1414            mov     r2,b
0445 FB        1415            mov     r3,a
0446 C006      1416            push    ar6
0448 C007      1417            push    ar7
044A C002      1418            push    ar2
044C C003      1419            push    ar3
044E 851082    1420            mov     dpl,_main_sloc0_1_0
0451 851183    1421            mov     dph,(_main_sloc0_1_0 + 1)
0454 8512F0    1422            mov     b,(_main_sloc0_1_0 + 2)
0457 E513      1423            mov     a,(_main_sloc0_1_0 + 3)
0459 120000    1424            lcall   ___fsadd
045C AA82      1425            mov     r2,dpl
045E AB83      1426            mov     r3,dph
0460 ACF0      1427            mov     r4,b
0462 FD        1428            mov     r5,a
0463 E581      1429            mov     a,sp
0465 24FC      1430            add     a,#0xfc
0467 F581      1431            mov     sp,a
0469 C002      1432            push    ar2
046B C003      1433            push    ar3
046D C004      1434            push    ar4
046F C005      1435            push    ar5
0471 90F4FC    1436            mov     dptr,#0xF4FC
0474 75F032    1437            mov     b,#0x32
0477 7434      1438            mov     a,#0x34
0479 120000    1439            lcall   ___fsmul
047C AA82      1440            mov     r2,dpl
047E AB83      1441            mov     r3,dph
0480 ACF0      1442            mov     r4,b
0482 FD        1443            mov     r5,a
0483 E581      1444            mov     a,sp
0485 24FC      1445            add     a,#0xfc
0487 F581      1446            mov     sp,a
0489           1447   ;        D:\clone\LAB5\lab5v1.c:350: if (period > mst){
0489 C002      1448            push    ar2
048B C003      1449            push    ar3
048D C004      1450            push    ar4
048F C005      1451            push    ar5
0491 C0B0      1452            push    _main_mst_1_75
0493 C0B1      1453            push    (_main_mst_1_75 + 1)
0495 C0B2      1454            push    (_main_mst_1_75 + 2)
0497 C0B3      1455            push    (_main_mst_1_75 + 3)
0499 8A82      1456            mov     dpl,r2
049B 8B83      1457            mov     dph,r3
049D 8CF0      1458            mov     b,r4
049F ED        1459            mov     a,r5
04A0 120000    1460            lcall   ___fsgt
04A3 AE82      1461            mov     r6,dpl
04A5 E581      1462            mov     a,sp
04A7 24FC      1463            add     a,#0xfc
04A9 F581      1464            mov     sp,a
04AB D005      1465            pop     ar5
04AD D004      1466            pop     ar4
04AF D003      1467            pop     ar3
04B1 D002      1468            pop     ar2
04B3 EE        1469            mov     a,r6
04B4 6000      1470            jz      L017018?
04B6           1471   ;        D:\clone\LAB5\lab5v1.c:351: mst = period;
04B6 8AB0      1472            mov     _main_mst_1_75,r2
04B8 8BB1      1473            mov     (_main_mst_1_75 + 1),r3
04BA 8CB2      1474            mov     (_main_mst_1_75 + 2),r4
04BC 8DB3      1475            mov     (_main_mst_1_75 + 3),r5
04BE           1476   L017018?:
04BE           1477   ;        D:\clone\LAB5\lab5v1.c:353: waitms(1);
04BE 900001    1478            mov     dptr,#0x0001
04C1 120000    1479            lcall   _waitms
04C4           1480   ;        D:\clone\LAB5\lab5v1.c:323: for (i = 0; i < 10; i++){
04C4 05F0      1481            inc     _main_i_1_75
04C6 E4        1482            clr     a
04C7 B5F090    1483            cjne    a,_main_i_1_75,L017097?
04CA 05F1      1484            inc     (_main_i_1_75 + 1)
04CC           1485   L017097?:
04CC 020000    1486            ljmp    L017049?
04CF           1487   L017052?:
04CF           1488   ;        D:\clone\LAB5\lab5v1.c:355: for(i=0;i<20;i++){
04CF 7A00      1489            mov     r2,#0x00
04D1 7B00      1490            mov     r3,#0x00
04D3           1491   L017053?:
04D3 C3        1492            clr     c
04D4 EA        1493            mov     a,r2
04D5 9414      1494            subb    a,#0x14
04D7 EB        1495            mov     a,r3
04D8 6480      1496            xrl     a,#0x80
04DA 9480      1497            subb    a,#0x80
04DC 4000      1498            jc      L017098?
04DE 020000    1499            ljmp    L017056?
04E1           1500   L017098?:
04E1           1501   ;        D:\clone\LAB5\lab5v1.c:356: v[0] = Volts_at_Pin(QFP32_MUX_P1_4);
04E1 75820A    1502            mov     dpl,#0x0A
04E4 C002      1503            push    ar2
04E6 C003      1504            push    ar3
04E8 120000    1505            lcall   _Volts_at_Pin
04EB AC82      1506            mov     r4,dpl
04ED AD83      1507            mov     r5,dph
04EF AEF0      1508            mov     r6,b
04F1 FF        1509            mov     r7,a
04F2 7850      1510            mov     r0,#_main_v_1_75
04F4 A604      1511            mov     @r0,ar4
04F6 08        1512            inc     r0
04F7 A605      1513            mov     @r0,ar5
04F9 08        1514            inc     r0
04FA A606      1515            mov     @r0,ar6
04FC 08        1516            inc     r0
04FD A607      1517            mov     @r0,ar7
04FF           1518   ;        D:\clone\LAB5\lab5v1.c:357: v[1] = Volts_at_Pin(QFP32_MUX_P1_5);
04FF 75820B    1519            mov     dpl,#0x0B
0502 120000    1520            lcall   _Volts_at_Pin
0505 AC82      1521            mov     r4,dpl
0507 AD83      1522            mov     r5,dph
0509 AEF0      1523            mov     r6,b
050B FF        1524            mov     r7,a
050C 7854      1525            mov     r0,#(_main_v_1_75 + 0x0004)
050E A604      1526            mov     @r0,ar4
0510 08        1527            inc     r0
0511 A605      1528            mov     @r0,ar5
0513 08        1529            inc     r0
0514 A606      1530            mov     @r0,ar6
0516 08        1531            inc     r0
0517 A607      1532            mov     @r0,ar7
0519           1533   ;        D:\clone\LAB5\lab5v1.c:358: if(vmax1<v[0]){
0519 7850      1534            mov     r0,#_main_v_1_75
051B 8604      1535            mov     ar4,@r0
051D 08        1536            inc     r0
051E 8605      1537            mov     ar5,@r0
0520 08        1538            inc     r0
0521 8606      1539            mov     ar6,@r0
0523 08        1540            inc     r0
0524 8607      1541            mov     ar7,@r0
0526 C004      1542            push    ar4
0528 C005      1543            push    ar5
052A C006      1544            push    ar6
052C C007      1545            push    ar7
052E 854082    1546            mov     dpl,_main_vmax1_1_75
0531 854183    1547            mov     dph,(_main_vmax1_1_75 + 1)
0534 8542F0    1548            mov     b,(_main_vmax1_1_75 + 2)
0537 E543      1549            mov     a,(_main_vmax1_1_75 + 3)
0539 120000    1550            lcall   ___fslt
053C AC82      1551            mov     r4,dpl
053E E581      1552            mov     a,sp
0540 24FC      1553            add     a,#0xfc
0542 F581      1554            mov     sp,a
0544 D003      1555            pop     ar3
0546 D002      1556            pop     ar2
0548 EC        1557            mov     a,r4
0549 6000      1558            jz      L017020?
054B           1559   ;        D:\clone\LAB5\lab5v1.c:359: vmax1=v[0];
054B 7850      1560            mov     r0,#_main_v_1_75
054D 8640      1561            mov     _main_vmax1_1_75,@r0
054F 08        1562            inc     r0
0550 8641      1563            mov     (_main_vmax1_1_75 + 1),@r0
0552 08        1564            inc     r0
0553 8642      1565            mov     (_main_vmax1_1_75 + 2),@r0
0555 08        1566            inc     r0
0556 8643      1567            mov     (_main_vmax1_1_75 + 3),@r0
0558           1568   L017020?:
0558           1569   ;        D:\clone\LAB5\lab5v1.c:361: if(vmax2<v[1]){
0558 7854      1570            mov     r0,#(_main_v_1_75 + 0x0004)
055A 8604      1571            mov     ar4,@r0
055C 08        1572            inc     r0
055D 8605      1573            mov     ar5,@r0
055F 08        1574            inc     r0
0560 8606      1575            mov     ar6,@r0
0562 08        1576            inc     r0
0563 8607      1577            mov     ar7,@r0
0565 C002      1578            push    ar2
0567 C003      1579            push    ar3
0569 C004      1580            push    ar4
056B C005      1581            push    ar5
056D C006      1582            push    ar6
056F C007      1583            push    ar7
0571 859082    1584            mov     dpl,_main_vmax2_1_75
0574 859183    1585            mov     dph,(_main_vmax2_1_75 + 1)
0577 8592F0    1586            mov     b,(_main_vmax2_1_75 + 2)
057A E593      1587            mov     a,(_main_vmax2_1_75 + 3)
057C 120000    1588            lcall   ___fslt
057F AC82      1589            mov     r4,dpl
0581 E581      1590            mov     a,sp
0583 24FC      1591            add     a,#0xfc
0585 F581      1592            mov     sp,a
0587 D003      1593            pop     ar3
0589 D002      1594            pop     ar2
058B EC        1595            mov     a,r4
058C 6000      1596            jz      L017022?
058E           1597   ;        D:\clone\LAB5\lab5v1.c:362: vmax2=v[1];
058E 7854      1598            mov     r0,#(_main_v_1_75 + 0x0004)
0590 8690      1599            mov     _main_vmax2_1_75,@r0
0592 08        1600            inc     r0
0593 8691      1601            mov     (_main_vmax2_1_75 + 1),@r0
0595 08        1602            inc     r0
0596 8692      1603            mov     (_main_vmax2_1_75 + 2),@r0
0598 08        1604            inc     r0
0599 8693      1605            mov     (_main_vmax2_1_75 + 3),@r0
059B           1606   L017022?:
059B           1607   ;        D:\clone\LAB5\lab5v1.c:364: waitms(1); 
059B 900001    1608            mov     dptr,#0x0001
059E C002      1609            push    ar2
05A0 C003      1610            push    ar3
05A2 120000    1611            lcall   _waitms
05A5 D003      1612            pop     ar3
05A7 D002      1613            pop     ar2
05A9           1614   ;        D:\clone\LAB5\lab5v1.c:355: for(i=0;i<20;i++){
05A9 0A        1615            inc     r2
05AA BA0050    1616            cjne    r2,#0x00,L017101?
05AD 0B        1617            inc     r3
05AE           1618   L017101?:
05AE 020000    1619            ljmp    L017053?
05B1           1620   L017056?:
05B1           1621   ;        D:\clone\LAB5\lab5v1.c:366: printf("\nperiod=%3.2f\r",mst*1000);
05B1 C0B0      1622            push    _main_mst_1_75
05B3 C0B1      1623            push    (_main_mst_1_75 + 1)
05B5 C0B2      1624            push    (_main_mst_1_75 + 2)
05B7 C0B3      1625            push    (_main_mst_1_75 + 3)
05B9 900000    1626            mov     dptr,#0x0000
05BC 75F07A    1627            mov     b,#0x7A
05BF 7444      1628            mov     a,#0x44
05C1 120000    1629            lcall   ___fsmul
05C4 AA82      1630            mov     r2,dpl
05C6 AB83      1631            mov     r3,dph
05C8 ACF0      1632            mov     r4,b
05CA FD        1633            mov     r5,a
05CB E581      1634            mov     a,sp
05CD 24FC      1635            add     a,#0xfc
05CF F581      1636            mov     sp,a
05D1 C002      1637            push    ar2
05D3 C003      1638            push    ar3
05D5 C004      1639            push    ar4
05D7 C005      1640            push    ar5
05D9 7490      1641            mov     a,#__str_7
05DB C0E0      1642            push    acc
05DD 74C3      1643            mov     a,#(__str_7 >> 8)
05DF C0E0      1644            push    acc
05E1 7480      1645            mov     a,#0x80
05E3 C0E0      1646            push    acc
05E5 120000    1647            lcall   _printf
05E8 E581      1648            mov     a,sp
05EA 24F9      1649            add     a,#0xf9
05EC F581      1650            mov     sp,a
05EE           1651   ;        D:\clone\LAB5\lab5v1.c:367: printf ("\nV@P1_4=%7.5fV, V@P1_5=%7.5fV\r",vmax1, vmax2);
05EE C090      1652            push    _main_vmax2_1_75
05F0 C091      1653            push    (_main_vmax2_1_75 + 1)
05F2 C092      1654            push    (_main_vmax2_1_75 + 2)
05F4 C093      1655            push    (_main_vmax2_1_75 + 3)
05F6 C040      1656            push    _main_vmax1_1_75
05F8 C041      1657            push    (_main_vmax1_1_75 + 1)
05FA C042      1658            push    (_main_vmax1_1_75 + 2)
05FC C043      1659            push    (_main_vmax1_1_75 + 3)
05FE 74D0      1660            mov     a,#__str_8
0600 C0E0      1661            push    acc
0602 74C3      1662            mov     a,#(__str_8 >> 8)
0604 C0E0      1663            push    acc
0606 7480      1664            mov     a,#0x80
0608 C0E0      1665            push    acc
060A 120000    1666            lcall   _printf
060D E581      1667            mov     a,sp
060F 24F5      1668            add     a,#0xf5
0611 F581      1669            mov     sp,a
0613           1670   ;        D:\clone\LAB5\lab5v1.c:369: while(P0_1==0&&P0_2==0);
0613           1671   L017024?:
0613 208150    1672            jb      _P0_1,L017026?
0616 308210    1673            jnb     _P0_2,L017024?
0619           1674   L017026?:
0619           1675   ;        D:\clone\LAB5\lab5v1.c:370: if(P0_1==1){
0619 308190    1676            jnb     _P0_1,L017028?
061C           1677   ;        D:\clone\LAB5\lab5v1.c:371: p_n=1;
061C 75D000    1678            mov     _main_p_n_1_75,#0x00
061F 75D100    1679            mov     (_main_p_n_1_75 + 1),#0x00
0622 75D280    1680            mov     (_main_p_n_1_75 + 2),#0x80
0625 75D33F    1681            mov     (_main_p_n_1_75 + 3),#0x3F
0628           1682   L017028?:
0628           1683   ;        D:\clone\LAB5\lab5v1.c:373: if(P0_2==1){
0628 3082D0    1684            jnb     _P0_2,L017030?
062B           1685   ;        D:\clone\LAB5\lab5v1.c:374: p_n=-1;
062B 75D000    1686            mov     _main_p_n_1_75,#0x00
062E 75D100    1687            mov     (_main_p_n_1_75 + 1),#0x00
0631 75D280    1688            mov     (_main_p_n_1_75 + 2),#0x80
0634 75D3BF    1689            mov     (_main_p_n_1_75 + 3),#0xBF
0637           1690   L017030?:
0637           1691   ;        D:\clone\LAB5\lab5v1.c:376: waitms(1);
0637 900001    1692            mov     dptr,#0x0001
063A 120000    1693            lcall   _waitms
063D           1694   ;        D:\clone\LAB5\lab5v1.c:377: TL0=0; TH0=0; TF0=0;overflow_count=0;
063D 758A00    1695            mov     _TL0,#0x00
0640 758C00    1696            mov     _TH0,#0x00
0643 C28D      1697            clr     _TF0
0645 75B000    1698            mov     _overflow_count,#0x00
0648           1699   ;        D:\clone\LAB5\lab5v1.c:378: while(P0_1==1);
0648           1700   L017031?:
0648 208110    1701            jb      _P0_1,L017031?
064B           1702   ;        D:\clone\LAB5\lab5v1.c:379: while(P0_1==0);
064B           1703   L017034?:
064B 308150    1704            jnb     _P0_1,L017034?
064E           1705   ;        D:\clone\LAB5\lab5v1.c:380: while(P0_1==1){
064E           1706   L017043?:
064E 3081D0    1707            jnb     _P0_1,L017045?
0651           1708   ;        D:\clone\LAB5\lab5v1.c:381: while(P0_2==0&&P0_1==1){
0651           1709   L017040?:
0651 208250    1710            jb      _P0_2,L017042?
0654 308150    1711            jnb     _P0_1,L017042?
0657           1712   ;        D:\clone\LAB5\lab5v1.c:382: TR0=1;
0657 D28C      1713            setb    _TR0
0659           1714   ;        D:\clone\LAB5\lab5v1.c:383: if(TF0==1) // Did the 16-bit timer overflow?
0659           1715   ;        D:\clone\LAB5\lab5v1.c:385: TF0=0;
0659 108D90    1716            jbc     _TF0,L017111?
065C 8000      1717            sjmp    L017040?
065E           1718   L017111?:
065E           1719   ;        D:\clone\LAB5\lab5v1.c:386: overflow_count++;
065E 05B0      1720            inc     _overflow_count
0660 8000      1721            sjmp    L017040?
0662           1722   L017042?:
0662           1723   ;        D:\clone\LAB5\lab5v1.c:390: TR0=0; 
0662 C28C      1724            clr     _TR0
0664 8000      1725            sjmp    L017043?
0666           1726   L017045?:
0666           1727   ;        D:\clone\LAB5\lab5v1.c:392: phase_diff=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
0666 85B082    1728            mov     dpl,_overflow_count
0669 120000    1729            lcall   ___uchar2fs
066C AA82      1730            mov     r2,dpl
066E AB83      1731            mov     r3,dph
0670 ACF0      1732            mov     r4,b
0672 FD        1733            mov     r5,a
0673 C002      1734            push    ar2
0675 C003      1735            push    ar3
0677 C004      1736            push    ar4
0679 C005      1737            push    ar5
067B 900000    1738            mov     dptr,#0x0000
067E 75F080    1739            mov     b,#0x80
0681 7447      1740            mov     a,#0x47
0683 120000    1741            lcall   ___fsmul
0686 858210    1742            mov     _main_sloc0_1_0,dpl
0689 858311    1743            mov     (_main_sloc0_1_0 + 1),dph
068C 85F012    1744            mov     (_main_sloc0_1_0 + 2),b
068F F513      1745            mov     (_main_sloc0_1_0 + 3),a
0691 E581      1746            mov     a,sp
0693 24FC      1747            add     a,#0xfc
0695 F581      1748            mov     sp,a
0697 858C82    1749            mov     dpl,_TH0
069A 120000    1750            lcall   ___uchar2fs
069D AE82      1751            mov     r6,dpl
069F AF83      1752            mov     r7,dph
06A1 AAF0      1753            mov     r2,b
06A3 FB        1754            mov     r3,a
06A4 C006      1755            push    ar6
06A6 C007      1756            push    ar7
06A8 C002      1757            push    ar2
06AA C003      1758            push    ar3
06AC 900000    1759            mov     dptr,#0x0000
06AF 75F080    1760            mov     b,#0x80
06B2 7443      1761            mov     a,#0x43
06B4 120000    1762            lcall   ___fsmul
06B7 AA82      1763            mov     r2,dpl
06B9 AB83      1764            mov     r3,dph
06BB ACF0      1765            mov     r4,b
06BD FD        1766            mov     r5,a
06BE E581      1767            mov     a,sp
06C0 24FC      1768            add     a,#0xfc
06C2 F581      1769            mov     sp,a
06C4 C002      1770            push    ar2
06C6 C003      1771            push    ar3
06C8 C004      1772            push    ar4
06CA C005      1773            push    ar5
06CC 851082    1774            mov     dpl,_main_sloc0_1_0
06CF 851183    1775            mov     dph,(_main_sloc0_1_0 + 1)
06D2 8512F0    1776            mov     b,(_main_sloc0_1_0 + 2)
06D5 E513      1777            mov     a,(_main_sloc0_1_0 + 3)
06D7 120000    1778            lcall   ___fsadd
06DA 858210    1779            mov     _main_sloc0_1_0,dpl
06DD 858311    1780            mov     (_main_sloc0_1_0 + 1),dph
06E0 85F012    1781            mov     (_main_sloc0_1_0 + 2),b
06E3 F513      1782            mov     (_main_sloc0_1_0 + 3),a
06E5 E581      1783            mov     a,sp
06E7 24FC      1784            add     a,#0xfc
06E9 F581      1785            mov     sp,a
06EB AE8A      1786            mov     r6,_TL0
06ED 7F00      1787            mov     r7,#0x00
06EF 8E82      1788            mov     dpl,r6
06F1 8F83      1789            mov     dph,r7
06F3 120000    1790            lcall   ___sint2fs
06F6 AE82      1791            mov     r6,dpl
06F8 AF83      1792            mov     r7,dph
06FA AAF0      1793            mov     r2,b
06FC FB        1794            mov     r3,a
06FD C006      1795            push    ar6
06FF C007      1796            push    ar7
0701 C002      1797            push    ar2
0703 C003      1798            push    ar3
0705 851082    1799            mov     dpl,_main_sloc0_1_0
0708 851183    1800            mov     dph,(_main_sloc0_1_0 + 1)
070B 8512F0    1801            mov     b,(_main_sloc0_1_0 + 2)
070E E513      1802            mov     a,(_main_sloc0_1_0 + 3)
0710 120000    1803            lcall   ___fsadd
0713 AA82      1804            mov     r2,dpl
0715 AB83      1805            mov     r3,dph
0717 ACF0      1806            mov     r4,b
0719 FD        1807            mov     r5,a
071A E581      1808            mov     a,sp
071C 24FC      1809            add     a,#0xfc
071E F581      1810            mov     sp,a
0720 C002      1811            push    ar2
0722 C003      1812            push    ar3
0724 C004      1813            push    ar4
0726 C005      1814            push    ar5
0728 90F4FC    1815            mov     dptr,#0xF4FC
072B 75F032    1816            mov     b,#0x32
072E 7434      1817            mov     a,#0x34
0730 120000    1818            lcall   ___fsmul
0733 AA82      1819            mov     r2,dpl
0735 AB83      1820            mov     r3,dph
0737 ACF0      1821            mov     r4,b
0739 FD        1822            mov     r5,a
073A E581      1823            mov     a,sp
073C 24FC      1824            add     a,#0xfc
073E F581      1825            mov     sp,a
0740           1826   ;        D:\clone\LAB5\lab5v1.c:394: degrees = p_n*phase_diff*360/mst ;
0740 C002      1827            push    ar2
0742 C003      1828            push    ar3
0744 C004      1829            push    ar4
0746 C005      1830            push    ar5
0748 85D082    1831            mov     dpl,_main_p_n_1_75
074B 85D183    1832            mov     dph,(_main_p_n_1_75 + 1)
074E 85D2F0    1833            mov     b,(_main_p_n_1_75 + 2)
0751 E5D3      1834            mov     a,(_main_p_n_1_75 + 3)
0753 120000    1835            lcall   ___fsmul
0756 AA82      1836            mov     r2,dpl
0758 AB83      1837            mov     r3,dph
075A ACF0      1838            mov     r4,b
075C FD        1839            mov     r5,a
075D E581      1840            mov     a,sp
075F 24FC      1841            add     a,#0xfc
0761 F581      1842            mov     sp,a
0763 C002      1843            push    ar2
0765 C003      1844            push    ar3
0767 C004      1845            push    ar4
0769 C005      1846            push    ar5
076B 900000    1847            mov     dptr,#0x0000
076E 75F0B4    1848            mov     b,#0xB4
0771 7443      1849            mov     a,#0x43
0773 120000    1850            lcall   ___fsmul
0776 AA82      1851            mov     r2,dpl
0778 AB83      1852            mov     r3,dph
077A ACF0      1853            mov     r4,b
077C FD        1854            mov     r5,a
077D E581      1855            mov     a,sp
077F 24FC      1856            add     a,#0xfc
0781 F581      1857            mov     sp,a
0783 C0B0      1858            push    _main_mst_1_75
0785 C0B1      1859            push    (_main_mst_1_75 + 1)
0787 C0B2      1860            push    (_main_mst_1_75 + 2)
0789 C0B3      1861            push    (_main_mst_1_75 + 3)
078B 8A82      1862            mov     dpl,r2
078D 8B83      1863            mov     dph,r3
078F 8CF0      1864            mov     b,r4
0791 ED        1865            mov     a,r5
0792 120000    1866            lcall   ___fsdiv
0795 AA82      1867            mov     r2,dpl
0797 AB83      1868            mov     r3,dph
0799 ACF0      1869            mov     r4,b
079B FD        1870            mov     r5,a
079C E581      1871            mov     a,sp
079E 24FC      1872            add     a,#0xfc
07A0 F581      1873            mov     sp,a
07A2           1874   ;        D:\clone\LAB5\lab5v1.c:396: printf("\r\ndegrees: %f", degrees);
07A2 C002      1875            push    ar2
07A4 C003      1876            push    ar3
07A6 C004      1877            push    ar4
07A8 C005      1878            push    ar5
07AA 74D0      1879            mov     a,#__str_9
07AC C0E0      1880            push    acc
07AE 74C6      1881            mov     a,#(__str_9 >> 8)
07B0 C0E0      1882            push    acc
07B2 7480      1883            mov     a,#0x80
07B4 C0E0      1884            push    acc
07B6 120000    1885            lcall   _printf
07B9 E581      1886            mov     a,sp
07BB 24F9      1887            add     a,#0xf9
07BD F581      1888            mov     sp,a
07BF           1889   ;        D:\clone\LAB5\lab5v1.c:398: waitms(500); 
07BF 9001F4    1890            mov     dptr,#0x01F4
07C2 120000    1891            lcall   _waitms
07C5 020000    1892            ljmp    L017070?
07C8           1893            rseg R_CSEG
07C8           1894   
0000           1895            rseg R_XINIT
0000           1896   
0000           1897            rseg R_CONST
0000           1898   __str_0:
0000 1B        1899            db 0x1B
0001 5B324A    1900            db '[2J'
0004 00        1901            db 0x00
0005           1902   __str_1:
0005 41444320  1903            db 'ADC test program'
     74657374
     2070726F
     6772616D
0015 0A        1904            db 0x0A
0016 46696C65  1905            db 'File: %s'
     3A202573
001E 0A        1906            db 0x0A
001F 436F6D70  1907            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002F 0A        1908            db 0x0A
0030 0A        1909            db 0x0A
0031 00        1910            db 0x00
0032           1911   __str_2:
0032 443A      1912            db 'D:'
0034 5C        1913            db 0x5C
0035 636C6F6E  1914            db 'clone'
     65
003A 5C        1915            db 0x5C
003B 4C414235  1916            db 'LAB5'
003F 5C        1917            db 0x5C
0040 6C616235  1918            db 'lab5v1.c'
     76312E63
0048 00        1919            db 0x00
0049           1920   __str_3:
0049 4D617220  1921            db 'Mar  6 2024'
     20362032
     303234
0054 00        1922            db 0x00
0055           1923   __str_4:
0055 31333A31  1924            db '13:10:56'
     303A3536
005D 00        1925            db 0x00
005E           1926   __str_5:
005E 76723A20  1927            db 'vr:     f:    Hz'
     20202020
     663A2020
     2020487A
006E 00        1928            db 0x00
006F           1929   __str_6:
006F 76743A20  1930            db 'vt:     pha:    '
     20202020
     7068613A
     20202020
007F 00        1931            db 0x00
0080           1932   __str_7:
0080 0A        1933            db 0x0A
0081 70657269  1934            db 'period=%3.2f'
     6F643D25
     332E3266
008D 0D        1935            db 0x0D
008E 00        1936            db 0x00
008F           1937   __str_8:
008F 0A        1938            db 0x0A
0090 56405031  1939            db 'V@P1_4=%7.5fV, V@P1_5=%7.5fV'
     5F343D25
     372E3566
     562C2056
     4050315F
     353D2537
     2E356656
00AC 0D        1940            db 0x0D
00AD 00        1941            db 0x00
00AE           1942   __str_9:
00AE 0D        1943            db 0x0D
00AF 0A        1944            db 0x0A
00B0 64656772  1945            db 'degrees: %f'
     6565733A
     202566
00BB 00        1946            db 0x00
00BC           1947   
0003           1948            CSEG
0003           1949   
0003           1950   end
