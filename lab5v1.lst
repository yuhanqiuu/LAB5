0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Mar 06 11:55:14 2024
0000              5   ;--------------------------------------------------------
                  5   $name lab5v1
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Get_ADC
0000             30            public _Volts_at_Pin
0000             31            public _ADC_at_Pin
0000             32            public _InitPinADC
0000             33            public _TIMER0_Init
0000             34            public _LCDprint
0000             35            public _LCD_4BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public _InitADC
0000             43            public __c51_external_startup
0000             44            public _LCDprint_PARM_3
0000             45            public _LCDprint_PARM_2
0000             46            public _overflow_count
0000             47   ;--------------------------------------------------------
0000             48   ; Special Function Registers
0000             49   ;--------------------------------------------------------
0000             50   _ACC            DATA 0xe0
0000             51   _ADC0ASAH       DATA 0xb6
0000             52   _ADC0ASAL       DATA 0xb5
0000             53   _ADC0ASCF       DATA 0xa1
0000             54   _ADC0ASCT       DATA 0xc7
0000             55   _ADC0CF0        DATA 0xbc
0000             56   _ADC0CF1        DATA 0xb9
0000             57   _ADC0CF2        DATA 0xdf
0000             58   _ADC0CN0        DATA 0xe8
0000             59   _ADC0CN1        DATA 0xb2
0000             60   _ADC0CN2        DATA 0xb3
0000             61   _ADC0GTH        DATA 0xc4
0000             62   _ADC0GTL        DATA 0xc3
0000             63   _ADC0H          DATA 0xbe
0000             64   _ADC0L          DATA 0xbd
0000             65   _ADC0LTH        DATA 0xc6
0000             66   _ADC0LTL        DATA 0xc5
0000             67   _ADC0MX         DATA 0xbb
0000             68   _B              DATA 0xf0
0000             69   _CKCON0         DATA 0x8e
0000             70   _CKCON1         DATA 0xa6
0000             71   _CLEN0          DATA 0xc6
0000             72   _CLIE0          DATA 0xc7
0000             73   _CLIF0          DATA 0xe8
0000             74   _CLKSEL         DATA 0xa9
0000             75   _CLOUT0         DATA 0xd1
0000             76   _CLU0CF         DATA 0xb1
0000             77   _CLU0FN         DATA 0xaf
0000             78   _CLU0MX         DATA 0x84
0000             79   _CLU1CF         DATA 0xb3
0000             80   _CLU1FN         DATA 0xb2
0000             81   _CLU1MX         DATA 0x85
0000             82   _CLU2CF         DATA 0xb6
0000             83   _CLU2FN         DATA 0xb5
0000             84   _CLU2MX         DATA 0x91
0000             85   _CLU3CF         DATA 0xbf
0000             86   _CLU3FN         DATA 0xbe
0000             87   _CLU3MX         DATA 0xae
0000             88   _CMP0CN0        DATA 0x9b
0000             89   _CMP0CN1        DATA 0x99
0000             90   _CMP0MD         DATA 0x9d
0000             91   _CMP0MX         DATA 0x9f
0000             92   _CMP1CN0        DATA 0xbf
0000             93   _CMP1CN1        DATA 0xac
0000             94   _CMP1MD         DATA 0xab
0000             95   _CMP1MX         DATA 0xaa
0000             96   _CRC0CN0        DATA 0xce
0000             97   _CRC0CN1        DATA 0x86
0000             98   _CRC0CNT        DATA 0xd3
0000             99   _CRC0DAT        DATA 0xcb
0000            100   _CRC0FLIP       DATA 0xcf
0000            101   _CRC0IN         DATA 0xca
0000            102   _CRC0ST         DATA 0xd2
0000            103   _DAC0CF0        DATA 0x91
0000            104   _DAC0CF1        DATA 0x92
0000            105   _DAC0H          DATA 0x85
0000            106   _DAC0L          DATA 0x84
0000            107   _DAC1CF0        DATA 0x93
0000            108   _DAC1CF1        DATA 0x94
0000            109   _DAC1H          DATA 0x8a
0000            110   _DAC1L          DATA 0x89
0000            111   _DAC2CF0        DATA 0x95
0000            112   _DAC2CF1        DATA 0x96
0000            113   _DAC2H          DATA 0x8c
0000            114   _DAC2L          DATA 0x8b
0000            115   _DAC3CF0        DATA 0x9a
0000            116   _DAC3CF1        DATA 0x9c
0000            117   _DAC3H          DATA 0x8e
0000            118   _DAC3L          DATA 0x8d
0000            119   _DACGCF0        DATA 0x88
0000            120   _DACGCF1        DATA 0x98
0000            121   _DACGCF2        DATA 0xa2
0000            122   _DERIVID        DATA 0xad
0000            123   _DEVICEID       DATA 0xb5
0000            124   _DPH            DATA 0x83
0000            125   _DPL            DATA 0x82
0000            126   _EIE1           DATA 0xe6
0000            127   _EIE2           DATA 0xf3
0000            128   _EIP1           DATA 0xbb
0000            129   _EIP1H          DATA 0xee
0000            130   _EIP2           DATA 0xed
0000            131   _EIP2H          DATA 0xf6
0000            132   _EMI0CN         DATA 0xe7
0000            133   _FLKEY          DATA 0xb7
0000            134   _HFO0CAL        DATA 0xc7
0000            135   _HFO1CAL        DATA 0xd6
0000            136   _HFOCN          DATA 0xef
0000            137   _I2C0ADM        DATA 0xff
0000            138   _I2C0CN0        DATA 0xba
0000            139   _I2C0DIN        DATA 0xbc
0000            140   _I2C0DOUT       DATA 0xbb
0000            141   _I2C0FCN0       DATA 0xad
0000            142   _I2C0FCN1       DATA 0xab
0000            143   _I2C0FCT        DATA 0xf5
0000            144   _I2C0SLAD       DATA 0xbd
0000            145   _I2C0STAT       DATA 0xb9
0000            146   _IE             DATA 0xa8
0000            147   _IP             DATA 0xb8
0000            148   _IPH            DATA 0xf2
0000            149   _IT01CF         DATA 0xe4
0000            150   _LFO0CN         DATA 0xb1
0000            151   _P0             DATA 0x80
0000            152   _P0MASK         DATA 0xfe
0000            153   _P0MAT          DATA 0xfd
0000            154   _P0MDIN         DATA 0xf1
0000            155   _P0MDOUT        DATA 0xa4
0000            156   _P0SKIP         DATA 0xd4
0000            157   _P1             DATA 0x90
0000            158   _P1MASK         DATA 0xee
0000            159   _P1MAT          DATA 0xed
0000            160   _P1MDIN         DATA 0xf2
0000            161   _P1MDOUT        DATA 0xa5
0000            162   _P1SKIP         DATA 0xd5
0000            163   _P2             DATA 0xa0
0000            164   _P2MASK         DATA 0xfc
0000            165   _P2MAT          DATA 0xfb
0000            166   _P2MDIN         DATA 0xf3
0000            167   _P2MDOUT        DATA 0xa6
0000            168   _P2SKIP         DATA 0xcc
0000            169   _P3             DATA 0xb0
0000            170   _P3MDIN         DATA 0xf4
0000            171   _P3MDOUT        DATA 0x9c
0000            172   _PCA0CENT       DATA 0x9e
0000            173   _PCA0CLR        DATA 0x9c
0000            174   _PCA0CN0        DATA 0xd8
0000            175   _PCA0CPH0       DATA 0xfc
0000            176   _PCA0CPH1       DATA 0xea
0000            177   _PCA0CPH2       DATA 0xec
0000            178   _PCA0CPH3       DATA 0xf5
0000            179   _PCA0CPH4       DATA 0x85
0000            180   _PCA0CPH5       DATA 0xde
0000            181   _PCA0CPL0       DATA 0xfb
0000            182   _PCA0CPL1       DATA 0xe9
0000            183   _PCA0CPL2       DATA 0xeb
0000            184   _PCA0CPL3       DATA 0xf4
0000            185   _PCA0CPL4       DATA 0x84
0000            186   _PCA0CPL5       DATA 0xdd
0000            187   _PCA0CPM0       DATA 0xda
0000            188   _PCA0CPM1       DATA 0xdb
0000            189   _PCA0CPM2       DATA 0xdc
0000            190   _PCA0CPM3       DATA 0xae
0000            191   _PCA0CPM4       DATA 0xaf
0000            192   _PCA0CPM5       DATA 0xcc
0000            193   _PCA0H          DATA 0xfa
0000            194   _PCA0L          DATA 0xf9
0000            195   _PCA0MD         DATA 0xd9
0000            196   _PCA0POL        DATA 0x96
0000            197   _PCA0PWM        DATA 0xf7
0000            198   _PCON0          DATA 0x87
0000            199   _PCON1          DATA 0xcd
0000            200   _PFE0CN         DATA 0xc1
0000            201   _PRTDRV         DATA 0xf6
0000            202   _PSCTL          DATA 0x8f
0000            203   _PSTAT0         DATA 0xaa
0000            204   _PSW            DATA 0xd0
0000            205   _REF0CN         DATA 0xd1
0000            206   _REG0CN         DATA 0xc9
0000            207   _REVID          DATA 0xb6
0000            208   _RSTSRC         DATA 0xef
0000            209   _SBCON1         DATA 0x94
0000            210   _SBRLH1         DATA 0x96
0000            211   _SBRLL1         DATA 0x95
0000            212   _SBUF           DATA 0x99
0000            213   _SBUF0          DATA 0x99
0000            214   _SBUF1          DATA 0x92
0000            215   _SCON           DATA 0x98
0000            216   _SCON0          DATA 0x98
0000            217   _SCON1          DATA 0xc8
0000            218   _SFRPAGE        DATA 0xa7
0000            219   _SFRPGCN        DATA 0xbc
0000            220   _SFRSTACK       DATA 0xd7
0000            221   _SMB0ADM        DATA 0xd6
0000            222   _SMB0ADR        DATA 0xd7
0000            223   _SMB0CF         DATA 0xc1
0000            224   _SMB0CN0        DATA 0xc0
0000            225   _SMB0DAT        DATA 0xc2
0000            226   _SMB0FCN0       DATA 0xc3
0000            227   _SMB0FCN1       DATA 0xc4
0000            228   _SMB0FCT        DATA 0xef
0000            229   _SMB0RXLN       DATA 0xc5
0000            230   _SMB0TC         DATA 0xac
0000            231   _SMOD1          DATA 0x93
0000            232   _SP             DATA 0x81
0000            233   _SPI0CFG        DATA 0xa1
0000            234   _SPI0CKR        DATA 0xa2
0000            235   _SPI0CN0        DATA 0xf8
0000            236   _SPI0DAT        DATA 0xa3
0000            237   _SPI0FCN0       DATA 0x9a
0000            238   _SPI0FCN1       DATA 0x9b
0000            239   _SPI0FCT        DATA 0xf7
0000            240   _SPI0PCF        DATA 0xdf
0000            241   _TCON           DATA 0x88
0000            242   _TH0            DATA 0x8c
0000            243   _TH1            DATA 0x8d
0000            244   _TL0            DATA 0x8a
0000            245   _TL1            DATA 0x8b
0000            246   _TMOD           DATA 0x89
0000            247   _TMR2CN0        DATA 0xc8
0000            248   _TMR2CN1        DATA 0xfd
0000            249   _TMR2H          DATA 0xcf
0000            250   _TMR2L          DATA 0xce
0000            251   _TMR2RLH        DATA 0xcb
0000            252   _TMR2RLL        DATA 0xca
0000            253   _TMR3CN0        DATA 0x91
0000            254   _TMR3CN1        DATA 0xfe
0000            255   _TMR3H          DATA 0x95
0000            256   _TMR3L          DATA 0x94
0000            257   _TMR3RLH        DATA 0x93
0000            258   _TMR3RLL        DATA 0x92
0000            259   _TMR4CN0        DATA 0x98
0000            260   _TMR4CN1        DATA 0xff
0000            261   _TMR4H          DATA 0xa5
0000            262   _TMR4L          DATA 0xa4
0000            263   _TMR4RLH        DATA 0xa3
0000            264   _TMR4RLL        DATA 0xa2
0000            265   _TMR5CN0        DATA 0xc0
0000            266   _TMR5CN1        DATA 0xf1
0000            267   _TMR5H          DATA 0xd5
0000            268   _TMR5L          DATA 0xd4
0000            269   _TMR5RLH        DATA 0xd3
0000            270   _TMR5RLL        DATA 0xd2
0000            271   _UART0PCF       DATA 0xd9
0000            272   _UART1FCN0      DATA 0x9d
0000            273   _UART1FCN1      DATA 0xd8
0000            274   _UART1FCT       DATA 0xfa
0000            275   _UART1LIN       DATA 0x9e
0000            276   _UART1PCF       DATA 0xda
0000            277   _VDM0CN         DATA 0xff
0000            278   _WDTCN          DATA 0x97
0000            279   _XBR0           DATA 0xe1
0000            280   _XBR1           DATA 0xe2
0000            281   _XBR2           DATA 0xe3
0000            282   _XOSC0CN        DATA 0x86
0000            283   _DPTR           DATA 0x8382
0000            284   _TMR2RL         DATA 0xcbca
0000            285   _TMR3RL         DATA 0x9392
0000            286   _TMR4RL         DATA 0xa3a2
0000            287   _TMR5RL         DATA 0xd3d2
0000            288   _TMR0           DATA 0x8c8a
0000            289   _TMR1           DATA 0x8d8b
0000            290   _TMR2           DATA 0xcfce
0000            291   _TMR3           DATA 0x9594
0000            292   _TMR4           DATA 0xa5a4
0000            293   _TMR5           DATA 0xd5d4
0000            294   _SBRL1          DATA 0x9695
0000            295   _PCA0           DATA 0xfaf9
0000            296   _PCA0CP0        DATA 0xfcfb
0000            297   _PCA0CP1        DATA 0xeae9
0000            298   _PCA0CP2        DATA 0xeceb
0000            299   _PCA0CP3        DATA 0xf5f4
0000            300   _PCA0CP4        DATA 0x8584
0000            301   _PCA0CP5        DATA 0xdedd
0000            302   _ADC0ASA        DATA 0xb6b5
0000            303   _ADC0GT         DATA 0xc4c3
0000            304   _ADC0           DATA 0xbebd
0000            305   _ADC0LT         DATA 0xc6c5
0000            306   _DAC0           DATA 0x8584
0000            307   _DAC1           DATA 0x8a89
0000            308   _DAC2           DATA 0x8c8b
0000            309   _DAC3           DATA 0x8e8d
0000            310   ;--------------------------------------------------------
0000            311   ; special function bits
0000            312   ;--------------------------------------------------------
0000            313   _ACC_0          BIT 0xe0
0000            314   _ACC_1          BIT 0xe1
0000            315   _ACC_2          BIT 0xe2
0000            316   _ACC_3          BIT 0xe3
0000            317   _ACC_4          BIT 0xe4
0000            318   _ACC_5          BIT 0xe5
0000            319   _ACC_6          BIT 0xe6
0000            320   _ACC_7          BIT 0xe7
0000            321   _TEMPE          BIT 0xe8
0000            322   _ADGN0          BIT 0xe9
0000            323   _ADGN1          BIT 0xea
0000            324   _ADWINT         BIT 0xeb
0000            325   _ADBUSY         BIT 0xec
0000            326   _ADINT          BIT 0xed
0000            327   _IPOEN          BIT 0xee
0000            328   _ADEN           BIT 0xef
0000            329   _B_0            BIT 0xf0
0000            330   _B_1            BIT 0xf1
0000            331   _B_2            BIT 0xf2
0000            332   _B_3            BIT 0xf3
0000            333   _B_4            BIT 0xf4
0000            334   _B_5            BIT 0xf5
0000            335   _B_6            BIT 0xf6
0000            336   _B_7            BIT 0xf7
0000            337   _C0FIF          BIT 0xe8
0000            338   _C0RIF          BIT 0xe9
0000            339   _C1FIF          BIT 0xea
0000            340   _C1RIF          BIT 0xeb
0000            341   _C2FIF          BIT 0xec
0000            342   _C2RIF          BIT 0xed
0000            343   _C3FIF          BIT 0xee
0000            344   _C3RIF          BIT 0xef
0000            345   _D1SRC0         BIT 0x88
0000            346   _D1SRC1         BIT 0x89
0000            347   _D1AMEN         BIT 0x8a
0000            348   _D01REFSL       BIT 0x8b
0000            349   _D3SRC0         BIT 0x8c
0000            350   _D3SRC1         BIT 0x8d
0000            351   _D3AMEN         BIT 0x8e
0000            352   _D23REFSL       BIT 0x8f
0000            353   _D0UDIS         BIT 0x98
0000            354   _D1UDIS         BIT 0x99
0000            355   _D2UDIS         BIT 0x9a
0000            356   _D3UDIS         BIT 0x9b
0000            357   _EX0            BIT 0xa8
0000            358   _ET0            BIT 0xa9
0000            359   _EX1            BIT 0xaa
0000            360   _ET1            BIT 0xab
0000            361   _ES0            BIT 0xac
0000            362   _ET2            BIT 0xad
0000            363   _ESPI0          BIT 0xae
0000            364   _EA             BIT 0xaf
0000            365   _PX0            BIT 0xb8
0000            366   _PT0            BIT 0xb9
0000            367   _PX1            BIT 0xba
0000            368   _PT1            BIT 0xbb
0000            369   _PS0            BIT 0xbc
0000            370   _PT2            BIT 0xbd
0000            371   _PSPI0          BIT 0xbe
0000            372   _P0_0           BIT 0x80
0000            373   _P0_1           BIT 0x81
0000            374   _P0_2           BIT 0x82
0000            375   _P0_3           BIT 0x83
0000            376   _P0_4           BIT 0x84
0000            377   _P0_5           BIT 0x85
0000            378   _P0_6           BIT 0x86
0000            379   _P0_7           BIT 0x87
0000            380   _P1_0           BIT 0x90
0000            381   _P1_1           BIT 0x91
0000            382   _P1_2           BIT 0x92
0000            383   _P1_3           BIT 0x93
0000            384   _P1_4           BIT 0x94
0000            385   _P1_5           BIT 0x95
0000            386   _P1_6           BIT 0x96
0000            387   _P1_7           BIT 0x97
0000            388   _P2_0           BIT 0xa0
0000            389   _P2_1           BIT 0xa1
0000            390   _P2_2           BIT 0xa2
0000            391   _P2_3           BIT 0xa3
0000            392   _P2_4           BIT 0xa4
0000            393   _P2_5           BIT 0xa5
0000            394   _P2_6           BIT 0xa6
0000            395   _P3_0           BIT 0xb0
0000            396   _P3_1           BIT 0xb1
0000            397   _P3_2           BIT 0xb2
0000            398   _P3_3           BIT 0xb3
0000            399   _P3_4           BIT 0xb4
0000            400   _P3_7           BIT 0xb7
0000            401   _CCF0           BIT 0xd8
0000            402   _CCF1           BIT 0xd9
0000            403   _CCF2           BIT 0xda
0000            404   _CCF3           BIT 0xdb
0000            405   _CCF4           BIT 0xdc
0000            406   _CCF5           BIT 0xdd
0000            407   _CR             BIT 0xde
0000            408   _CF             BIT 0xdf
0000            409   _PARITY         BIT 0xd0
0000            410   _F1             BIT 0xd1
0000            411   _OV             BIT 0xd2
0000            412   _RS0            BIT 0xd3
0000            413   _RS1            BIT 0xd4
0000            414   _F0             BIT 0xd5
0000            415   _AC             BIT 0xd6
0000            416   _CY             BIT 0xd7
0000            417   _RI             BIT 0x98
0000            418   _TI             BIT 0x99
0000            419   _RB8            BIT 0x9a
0000            420   _TB8            BIT 0x9b
0000            421   _REN            BIT 0x9c
0000            422   _CE             BIT 0x9d
0000            423   _SMODE          BIT 0x9e
0000            424   _RI1            BIT 0xc8
0000            425   _TI1            BIT 0xc9
0000            426   _RBX1           BIT 0xca
0000            427   _TBX1           BIT 0xcb
0000            428   _REN1           BIT 0xcc
0000            429   _PERR1          BIT 0xcd
0000            430   _OVR1           BIT 0xce
0000            431   _SI             BIT 0xc0
0000            432   _ACK            BIT 0xc1
0000            433   _ARBLOST        BIT 0xc2
0000            434   _ACKRQ          BIT 0xc3
0000            435   _STO            BIT 0xc4
0000            436   _STA            BIT 0xc5
0000            437   _TXMODE         BIT 0xc6
0000            438   _MASTER         BIT 0xc7
0000            439   _SPIEN          BIT 0xf8
0000            440   _TXNF           BIT 0xf9
0000            441   _NSSMD0         BIT 0xfa
0000            442   _NSSMD1         BIT 0xfb
0000            443   _RXOVRN         BIT 0xfc
0000            444   _MODF           BIT 0xfd
0000            445   _WCOL           BIT 0xfe
0000            446   _SPIF           BIT 0xff
0000            447   _IT0            BIT 0x88
0000            448   _IE0            BIT 0x89
0000            449   _IT1            BIT 0x8a
0000            450   _IE1            BIT 0x8b
0000            451   _TR0            BIT 0x8c
0000            452   _TF0            BIT 0x8d
0000            453   _TR1            BIT 0x8e
0000            454   _TF1            BIT 0x8f
0000            455   _T2XCLK0        BIT 0xc8
0000            456   _T2XCLK1        BIT 0xc9
0000            457   _TR2            BIT 0xca
0000            458   _T2SPLIT        BIT 0xcb
0000            459   _TF2CEN         BIT 0xcc
0000            460   _TF2LEN         BIT 0xcd
0000            461   _TF2L           BIT 0xce
0000            462   _TF2H           BIT 0xcf
0000            463   _T4XCLK0        BIT 0x98
0000            464   _T4XCLK1        BIT 0x99
0000            465   _TR4            BIT 0x9a
0000            466   _T4SPLIT        BIT 0x9b
0000            467   _TF4CEN         BIT 0x9c
0000            468   _TF4LEN         BIT 0x9d
0000            469   _TF4L           BIT 0x9e
0000            470   _TF4H           BIT 0x9f
0000            471   _T5XCLK0        BIT 0xc0
0000            472   _T5XCLK1        BIT 0xc1
0000            473   _TR5            BIT 0xc2
0000            474   _T5SPLIT        BIT 0xc3
0000            475   _TF5CEN         BIT 0xc4
0000            476   _TF5LEN         BIT 0xc5
0000            477   _TF5L           BIT 0xc6
0000            478   _TF5H           BIT 0xc7
0000            479   _RIE            BIT 0xd8
0000            480   _RXTO0          BIT 0xd9
0000            481   _RXTO1          BIT 0xda
0000            482   _RFRQ           BIT 0xdb
0000            483   _TIE            BIT 0xdc
0000            484   _TXHOLD         BIT 0xdd
0000            485   _TXNF1          BIT 0xde
0000            486   _TFRQ           BIT 0xdf
0000            487   ;--------------------------------------------------------
0000            488   ; overlayable register banks
0000            489   ;--------------------------------------------------------
0000            490            rbank0 segment data overlay
0000            491   ;--------------------------------------------------------
0000            492   ; internal ram data
0000            493   ;--------------------------------------------------------
0000            494            rseg R_DSEG
0000            495   _overflow_count:
0000            496            ds 1
0001            497   _LCDprint_PARM_2:
0001            498            ds 1
0002            499   _main_mst_1_75:
0002            500            ds 4
0006            501   _main_i_1_75:
0006            502            ds 2
0008            503   _main_vmax1_1_75:
0008            504            ds 4
000C            505   _main_vmax2_1_75:
000C            506            ds 4
0010            507   _main_sloc0_1_0:
0010            508            ds 4
0014            509   ;--------------------------------------------------------
0014            510   ; overlayable items in internal ram 
0014            511   ;--------------------------------------------------------
0000            512            rseg    R_OSEG
0000            513            rseg    R_OSEG
0000            514   _InitPinADC_PARM_2:
0000            515            ds 1
0001            516            rseg    R_OSEG
0001            517   ;--------------------------------------------------------
0001            518   ; indirectly addressable internal ram data
0001            519   ;--------------------------------------------------------
0000            520            rseg R_ISEG
0000            521   _main_v_1_75:
0000            522            ds 8
0008            523   ;--------------------------------------------------------
0008            524   ; absolute internal ram data
0008            525   ;--------------------------------------------------------
0000            526            DSEG
0000            527   ;--------------------------------------------------------
0000            528   ; bit data
0000            529   ;--------------------------------------------------------
0000            530            rseg R_BSEG
0000            531   _LCDprint_PARM_3:
0000            532            DBIT    1
0001            533   ;--------------------------------------------------------
0001            534   ; paged external ram data
0001            535   ;--------------------------------------------------------
0000            536            rseg R_PSEG
0000            537   ;--------------------------------------------------------
0000            538   ; external ram data
0000            539   ;--------------------------------------------------------
0000            540            rseg R_XSEG
0000            541   ;--------------------------------------------------------
0000            542   ; absolute external ram data
0000            543   ;--------------------------------------------------------
0000            544            XSEG
0000            545   ;--------------------------------------------------------
0000            546   ; external initialized ram data
0000            547   ;--------------------------------------------------------
0000            548            rseg R_IXSEG
0000            549            rseg R_HOME
0000            550            rseg R_GSINIT
0000            551            rseg R_CSEG
0000            552   ;--------------------------------------------------------
0000            553   ; Reset entry point and interrupt vectors
0000            554   ;--------------------------------------------------------
0000            555            CSEG at 0x0000
0000 020000     556            ljmp    _crt0
0003            557   ;--------------------------------------------------------
0003            558   ; global & static initialisations
0003            559   ;--------------------------------------------------------
0000            560            rseg R_HOME
0000            561            rseg R_GSINIT
0000            562            rseg R_GSINIT
0000            563   ;--------------------------------------------------------
0000            564   ; data variables initialization
0000            565   ;--------------------------------------------------------
0000            566            rseg R_DINIT
0000            567            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            568   ;--------------------------------------------------------
0000            569   ; code
0000            570   ;--------------------------------------------------------
0000            571            rseg R_CSEG
0000            572   ;------------------------------------------------------------
0000            573   ;Allocation info for local variables in function '_c51_external_startup'
0000            574   ;------------------------------------------------------------
0000            575   ;------------------------------------------------------------
0000            576   ;        D:\clone\LAB5\lab5v1.c:28: char _c51_external_startup (void)
0000            577   ;        -----------------------------------------
0000            578   ;         function _c51_external_startup
0000            579   ;        -----------------------------------------
0000            580   __c51_external_startup:
0000            581            using   0
0000            582   ;        D:\clone\LAB5\lab5v1.c:31: SFRPAGE = 0x00;
0000 75A700     583            mov     _SFRPAGE,#0x00
0003            584   ;        D:\clone\LAB5\lab5v1.c:32: WDTCN = 0xDE; //First key
0003 7597DE     585            mov     _WDTCN,#0xDE
0006            586   ;        D:\clone\LAB5\lab5v1.c:33: WDTCN = 0xAD; //Second key
0006 7597AD     587            mov     _WDTCN,#0xAD
0009            588   ;        D:\clone\LAB5\lab5v1.c:35: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     589            mov     _VDM0CN,#0x80
000C            590   ;        D:\clone\LAB5\lab5v1.c:36: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     591            mov     _RSTSRC,#0x06
000F            592   ;        D:\clone\LAB5\lab5v1.c:43: SFRPAGE = 0x10;
000F 75A710     593            mov     _SFRPAGE,#0x10
0012            594   ;        D:\clone\LAB5\lab5v1.c:44: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     595            mov     _PFE0CN,#0x20
0015            596   ;        D:\clone\LAB5\lab5v1.c:45: SFRPAGE = 0x00;
0015 75A700     597            mov     _SFRPAGE,#0x00
0018            598   ;        D:\clone\LAB5\lab5v1.c:66: CLKSEL = 0x00;
0018 75A900     599            mov     _CLKSEL,#0x00
001B            600   ;        D:\clone\LAB5\lab5v1.c:67: CLKSEL = 0x00;
001B 75A900     601            mov     _CLKSEL,#0x00
001E            602   ;        D:\clone\LAB5\lab5v1.c:68: while ((CLKSEL & 0x80) == 0);
001E            603   L002001?:
001E E5A9       604            mov     a,_CLKSEL
0020 30E790     605            jnb     acc.7,L002001?
0023            606   ;        D:\clone\LAB5\lab5v1.c:69: CLKSEL = 0x03;
0023 75A903     607            mov     _CLKSEL,#0x03
0026            608   ;        D:\clone\LAB5\lab5v1.c:70: CLKSEL = 0x03;
0026 75A903     609            mov     _CLKSEL,#0x03
0029            610   ;        D:\clone\LAB5\lab5v1.c:71: while ((CLKSEL & 0x80) == 0);
0029            611   L002004?:
0029 E5A9       612            mov     a,_CLKSEL
002B 30E710     613            jnb     acc.7,L002004?
002E            614   ;        D:\clone\LAB5\lab5v1.c:76: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     615            orl     _P0MDOUT,#0x10
0031            616   ;        D:\clone\LAB5\lab5v1.c:77: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     617            mov     _XBR0,#0x01
0034            618   ;        D:\clone\LAB5\lab5v1.c:78: XBR1     = 0X00;
0034 75E200     619            mov     _XBR1,#0x00
0037            620   ;        D:\clone\LAB5\lab5v1.c:79: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     621            mov     _XBR2,#0x40
003A            622   ;        D:\clone\LAB5\lab5v1.c:85: SCON0 = 0x10;
003A 759810     623            mov     _SCON0,#0x10
003D            624   ;        D:\clone\LAB5\lab5v1.c:86: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     625            mov     _CKCON0,_CKCON0
0040            626   ;        D:\clone\LAB5\lab5v1.c:88: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     627            mov     _TH1,#0xE6
0043            628   ;        D:\clone\LAB5\lab5v1.c:89: TL1 = TH1;      // Init Timer1
0043 858D8B     629            mov     _TL1,_TH1
0046            630   ;        D:\clone\LAB5\lab5v1.c:90: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     631            anl     _TMOD,#0x0F
0049            632   ;        D:\clone\LAB5\lab5v1.c:91: TMOD |=  0x20;                       
0049 438920     633            orl     _TMOD,#0x20
004C            634   ;        D:\clone\LAB5\lab5v1.c:92: TR1 = 1; // START Timer1
004C D28E       635            setb    _TR1
004E            636   ;        D:\clone\LAB5\lab5v1.c:93: TI = 1;  // Indicate TX0 ready
004E D299       637            setb    _TI
0050            638   ;        D:\clone\LAB5\lab5v1.c:95: return 0;
0050 758200     639            mov     dpl,#0x00
0053 22         640            ret
0054            641   ;------------------------------------------------------------
0054            642   ;Allocation info for local variables in function 'InitADC'
0054            643   ;------------------------------------------------------------
0054            644   ;------------------------------------------------------------
0054            645   ;        D:\clone\LAB5\lab5v1.c:98: void InitADC (void)
0054            646   ;        -----------------------------------------
0054            647   ;         function InitADC
0054            648   ;        -----------------------------------------
0054            649   _InitADC:
0054            650   ;        D:\clone\LAB5\lab5v1.c:100: SFRPAGE = 0x00;
0054 75A700     651            mov     _SFRPAGE,#0x00
0057            652   ;        D:\clone\LAB5\lab5v1.c:101: ADEN=0; // Disable ADC
0057 C2EF       653            clr     _ADEN
0059            654   ;        D:\clone\LAB5\lab5v1.c:106: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0059 75B280     655            mov     _ADC0CN1,#0x80
005C            656   ;        D:\clone\LAB5\lab5v1.c:110: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
005C 75BC20     657            mov     _ADC0CF0,#0x20
005F            658   ;        D:\clone\LAB5\lab5v1.c:114: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005F 75B91E     659            mov     _ADC0CF1,#0x1E
0062            660   ;        D:\clone\LAB5\lab5v1.c:123: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
0062 75E800     661            mov     _ADC0CN0,#0x00
0065            662   ;        D:\clone\LAB5\lab5v1.c:128: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0065 75DF3F     663            mov     _ADC0CF2,#0x3F
0068            664   ;        D:\clone\LAB5\lab5v1.c:132: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0068 75B300     665            mov     _ADC0CN2,#0x00
006B            666   ;        D:\clone\LAB5\lab5v1.c:134: ADEN=1; // Enable ADC
006B D2EF       667            setb    _ADEN
006D 22         668            ret
006E            669   ;------------------------------------------------------------
006E            670   ;Allocation info for local variables in function 'Timer3us'
006E            671   ;------------------------------------------------------------
006E            672   ;us                        Allocated to registers r2 
006E            673   ;i                         Allocated to registers r3 
006E            674   ;------------------------------------------------------------
006E            675   ;        D:\clone\LAB5\lab5v1.c:138: void Timer3us(unsigned char us)
006E            676   ;        -----------------------------------------
006E            677   ;         function Timer3us
006E            678   ;        -----------------------------------------
006E            679   _Timer3us:
006E AA82       680            mov     r2,dpl
0070            681   ;        D:\clone\LAB5\lab5v1.c:143: CKCON0|=0b_0100_0000;
0070 438E40     682            orl     _CKCON0,#0x40
0073            683   ;        D:\clone\LAB5\lab5v1.c:145: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0073 7592B8     684            mov     _TMR3RL,#0xB8
0076 7593FF     685            mov     (_TMR3RL >> 8),#0xFF
0079            686   ;        D:\clone\LAB5\lab5v1.c:146: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0079 859294     687            mov     _TMR3,_TMR3RL
007C 859395     688            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007F            689   ;        D:\clone\LAB5\lab5v1.c:148: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007F 759104     690            mov     _TMR3CN0,#0x04
0082            691   ;        D:\clone\LAB5\lab5v1.c:149: for (i = 0; i < us; i++)       // Count <us> overflows
0082 7B00       692            mov     r3,#0x00
0084            693   L004004?:
0084 C3         694            clr     c
0085 EB         695            mov     a,r3
0086 9A         696            subb    a,r2
0087 5000       697            jnc     L004007?
0089            698   ;        D:\clone\LAB5\lab5v1.c:151: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0089            699   L004001?:
0089 E591       700            mov     a,_TMR3CN0
008B 30E710     701            jnb     acc.7,L004001?
008E            702   ;        D:\clone\LAB5\lab5v1.c:152: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008E 53917F     703            anl     _TMR3CN0,#0x7F
0091            704   ;        D:\clone\LAB5\lab5v1.c:149: for (i = 0; i < us; i++)       // Count <us> overflows
0091 0B         705            inc     r3
0092 8000       706            sjmp    L004004?
0094            707   L004007?:
0094            708   ;        D:\clone\LAB5\lab5v1.c:154: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0094 759100     709            mov     _TMR3CN0,#0x00
0097 22         710            ret
0098            711   ;------------------------------------------------------------
0098            712   ;Allocation info for local variables in function 'waitms'
0098            713   ;------------------------------------------------------------
0098            714   ;ms                        Allocated to registers r2 r3 
0098            715   ;j                         Allocated to registers r4 r5 
0098            716   ;k                         Allocated to registers r6 
0098            717   ;------------------------------------------------------------
0098            718   ;        D:\clone\LAB5\lab5v1.c:157: void waitms (unsigned int ms)
0098            719   ;        -----------------------------------------
0098            720   ;         function waitms
0098            721   ;        -----------------------------------------
0098            722   _waitms:
0098 AA82       723            mov     r2,dpl
009A AB83       724            mov     r3,dph
009C            725   ;        D:\clone\LAB5\lab5v1.c:161: for(j=0; j<ms; j++)
009C 7C00       726            mov     r4,#0x00
009E 7D00       727            mov     r5,#0x00
00A0            728   L005005?:
00A0 C3         729            clr     c
00A1 EC         730            mov     a,r4
00A2 9A         731            subb    a,r2
00A3 ED         732            mov     a,r5
00A4 9B         733            subb    a,r3
00A5 5000       734            jnc     L005009?
00A7            735   ;        D:\clone\LAB5\lab5v1.c:162: for (k=0; k<4; k++) Timer3us(250);
00A7 7E00       736            mov     r6,#0x00
00A9            737   L005001?:
00A9 BE0450     738            cjne    r6,#0x04,L005018?
00AC            739   L005018?:
00AC 5000       740            jnc     L005007?
00AE 7582FA     741            mov     dpl,#0xFA
00B1 C002       742            push    ar2
00B3 C003       743            push    ar3
00B5 C004       744            push    ar4
00B7 C005       745            push    ar5
00B9 C006       746            push    ar6
00BB 120000     747            lcall   _Timer3us
00BE D006       748            pop     ar6
00C0 D005       749            pop     ar5
00C2 D004       750            pop     ar4
00C4 D003       751            pop     ar3
00C6 D002       752            pop     ar2
00C8 0E         753            inc     r6
00C9 8000       754            sjmp    L005001?
00CB            755   L005007?:
00CB            756   ;        D:\clone\LAB5\lab5v1.c:161: for(j=0; j<ms; j++)
00CB 0C         757            inc     r4
00CC BC0090     758            cjne    r4,#0x00,L005005?
00CF 0D         759            inc     r5
00D0 8000       760            sjmp    L005005?
00D2            761   L005009?:
00D2 22         762            ret
00D3            763   ;------------------------------------------------------------
00D3            764   ;Allocation info for local variables in function 'LCD_pulse'
00D3            765   ;------------------------------------------------------------
00D3            766   ;------------------------------------------------------------
00D3            767   ;        D:\clone\LAB5\lab5v1.c:165: void LCD_pulse (void)
00D3            768   ;        -----------------------------------------
00D3            769   ;         function LCD_pulse
00D3            770   ;        -----------------------------------------
00D3            771   _LCD_pulse:
00D3            772   ;        D:\clone\LAB5\lab5v1.c:167: LCD_E=1;
00D3 D2A0       773            setb    _P2_0
00D5            774   ;        D:\clone\LAB5\lab5v1.c:168: Timer3us(40);
00D5 758228     775            mov     dpl,#0x28
00D8 120000     776            lcall   _Timer3us
00DB            777   ;        D:\clone\LAB5\lab5v1.c:169: LCD_E=0;
00DB C2A0       778            clr     _P2_0
00DD 22         779            ret
00DE            780   ;------------------------------------------------------------
00DE            781   ;Allocation info for local variables in function 'LCD_byte'
00DE            782   ;------------------------------------------------------------
00DE            783   ;x                         Allocated to registers r2 
00DE            784   ;------------------------------------------------------------
00DE            785   ;        D:\clone\LAB5\lab5v1.c:172: void LCD_byte (unsigned char x)
00DE            786   ;        -----------------------------------------
00DE            787   ;         function LCD_byte
00DE            788   ;        -----------------------------------------
00DE            789   _LCD_byte:
00DE AA82       790            mov     r2,dpl
00E0            791   ;        D:\clone\LAB5\lab5v1.c:175: ACC=x; //Send high nible
00E0 8AE0       792            mov     _ACC,r2
00E2            793   ;        D:\clone\LAB5\lab5v1.c:176: LCD_D7=ACC_7;
00E2 A2E7       794            mov     c,_ACC_7
00E4 9290       795            mov     _P1_0,c
00E6            796   ;        D:\clone\LAB5\lab5v1.c:177: LCD_D6=ACC_6;
00E6 A2E6       797            mov     c,_ACC_6
00E8 9291       798            mov     _P1_1,c
00EA            799   ;        D:\clone\LAB5\lab5v1.c:178: LCD_D5=ACC_5;
00EA A2E5       800            mov     c,_ACC_5
00EC 9292       801            mov     _P1_2,c
00EE            802   ;        D:\clone\LAB5\lab5v1.c:179: LCD_D4=ACC_4;
00EE A2E4       803            mov     c,_ACC_4
00F0 9293       804            mov     _P1_3,c
00F2            805   ;        D:\clone\LAB5\lab5v1.c:180: LCD_pulse();
00F2 C002       806            push    ar2
00F4 120000     807            lcall   _LCD_pulse
00F7            808   ;        D:\clone\LAB5\lab5v1.c:181: Timer3us(40);
00F7 758228     809            mov     dpl,#0x28
00FA 120000     810            lcall   _Timer3us
00FD D002       811            pop     ar2
00FF            812   ;        D:\clone\LAB5\lab5v1.c:182: ACC=x; //Send low nible
00FF 8AE0       813            mov     _ACC,r2
0101            814   ;        D:\clone\LAB5\lab5v1.c:183: LCD_D7=ACC_3;
0101 A2E3       815            mov     c,_ACC_3
0103 9290       816            mov     _P1_0,c
0105            817   ;        D:\clone\LAB5\lab5v1.c:184: LCD_D6=ACC_2;
0105 A2E2       818            mov     c,_ACC_2
0107 9291       819            mov     _P1_1,c
0109            820   ;        D:\clone\LAB5\lab5v1.c:185: LCD_D5=ACC_1;
0109 A2E1       821            mov     c,_ACC_1
010B 9292       822            mov     _P1_2,c
010D            823   ;        D:\clone\LAB5\lab5v1.c:186: LCD_D4=ACC_0;
010D A2E0       824            mov     c,_ACC_0
010F 9293       825            mov     _P1_3,c
0111            826   ;        D:\clone\LAB5\lab5v1.c:187: LCD_pulse();
0111 020000     827            ljmp    _LCD_pulse
0114            828   ;------------------------------------------------------------
0114            829   ;Allocation info for local variables in function 'WriteData'
0114            830   ;------------------------------------------------------------
0114            831   ;x                         Allocated to registers r2 
0114            832   ;------------------------------------------------------------
0114            833   ;        D:\clone\LAB5\lab5v1.c:190: void WriteData (unsigned char x)
0114            834   ;        -----------------------------------------
0114            835   ;         function WriteData
0114            836   ;        -----------------------------------------
0114            837   _WriteData:
0114 AA82       838            mov     r2,dpl
0116            839   ;        D:\clone\LAB5\lab5v1.c:192: LCD_RS=1;
0116 D297       840            setb    _P1_7
0118            841   ;        D:\clone\LAB5\lab5v1.c:193: LCD_byte(x);
0118 8A82       842            mov     dpl,r2
011A 120000     843            lcall   _LCD_byte
011D            844   ;        D:\clone\LAB5\lab5v1.c:194: waitms(2);
011D 900002     845            mov     dptr,#0x0002
0120 020000     846            ljmp    _waitms
0123            847   ;------------------------------------------------------------
0123            848   ;Allocation info for local variables in function 'WriteCommand'
0123            849   ;------------------------------------------------------------
0123            850   ;x                         Allocated to registers r2 
0123            851   ;------------------------------------------------------------
0123            852   ;        D:\clone\LAB5\lab5v1.c:197: void WriteCommand (unsigned char x)
0123            853   ;        -----------------------------------------
0123            854   ;         function WriteCommand
0123            855   ;        -----------------------------------------
0123            856   _WriteCommand:
0123 AA82       857            mov     r2,dpl
0125            858   ;        D:\clone\LAB5\lab5v1.c:199: LCD_RS=0;
0125 C297       859            clr     _P1_7
0127            860   ;        D:\clone\LAB5\lab5v1.c:200: LCD_byte(x);
0127 8A82       861            mov     dpl,r2
0129 120000     862            lcall   _LCD_byte
012C            863   ;        D:\clone\LAB5\lab5v1.c:201: waitms(5);
012C 900005     864            mov     dptr,#0x0005
012F 020000     865            ljmp    _waitms
0132            866   ;------------------------------------------------------------
0132            867   ;Allocation info for local variables in function 'LCD_4BIT'
0132            868   ;------------------------------------------------------------
0132            869   ;------------------------------------------------------------
0132            870   ;        D:\clone\LAB5\lab5v1.c:204: void LCD_4BIT (void)
0132            871   ;        -----------------------------------------
0132            872   ;         function LCD_4BIT
0132            873   ;        -----------------------------------------
0132            874   _LCD_4BIT:
0132            875   ;        D:\clone\LAB5\lab5v1.c:206: LCD_E=0; // Resting state of LCD's enable is zero
0132 C2A0       876            clr     _P2_0
0134            877   ;        D:\clone\LAB5\lab5v1.c:208: waitms(20);
0134 900014     878            mov     dptr,#0x0014
0137 120000     879            lcall   _waitms
013A            880   ;        D:\clone\LAB5\lab5v1.c:210: WriteCommand(0x33);
013A 758233     881            mov     dpl,#0x33
013D 120000     882            lcall   _WriteCommand
0140            883   ;        D:\clone\LAB5\lab5v1.c:211: WriteCommand(0x33);
0140 758233     884            mov     dpl,#0x33
0143 120000     885            lcall   _WriteCommand
0146            886   ;        D:\clone\LAB5\lab5v1.c:212: WriteCommand(0x32); // Change to 4-bit mode
0146 758232     887            mov     dpl,#0x32
0149 120000     888            lcall   _WriteCommand
014C            889   ;        D:\clone\LAB5\lab5v1.c:215: WriteCommand(0x28);
014C 758228     890            mov     dpl,#0x28
014F 120000     891            lcall   _WriteCommand
0152            892   ;        D:\clone\LAB5\lab5v1.c:216: WriteCommand(0x0c);
0152 75820C     893            mov     dpl,#0x0C
0155 120000     894            lcall   _WriteCommand
0158            895   ;        D:\clone\LAB5\lab5v1.c:217: WriteCommand(0x01); // Clear screen command (takes some time)
0158 758201     896            mov     dpl,#0x01
015B 120000     897            lcall   _WriteCommand
015E            898   ;        D:\clone\LAB5\lab5v1.c:218: waitms(20); // Wait for clear screen command to finsih.
015E 900014     899            mov     dptr,#0x0014
0161 020000     900            ljmp    _waitms
0164            901   ;------------------------------------------------------------
0164            902   ;Allocation info for local variables in function 'LCDprint'
0164            903   ;------------------------------------------------------------
0164            904   ;line                      Allocated with name '_LCDprint_PARM_2'
0164            905   ;string                    Allocated to registers r2 r3 r4 
0164            906   ;j                         Allocated to registers r5 r6 
0164            907   ;------------------------------------------------------------
0164            908   ;        D:\clone\LAB5\lab5v1.c:221: void LCDprint(char * string, unsigned char line, bit clear)
0164            909   ;        -----------------------------------------
0164            910   ;         function LCDprint
0164            911   ;        -----------------------------------------
0164            912   _LCDprint:
0164 AA82       913            mov     r2,dpl
0166 AB83       914            mov     r3,dph
0168 ACF0       915            mov     r4,b
016A            916   ;        D:\clone\LAB5\lab5v1.c:225: WriteCommand(line==2?0xc0:0x80);
016A 7402       917            mov     a,#0x02
016C B57010     918            cjne    a,_LCDprint_PARM_2,L011013?
016F 7DC0       919            mov     r5,#0xC0
0171 8000       920            sjmp    L011014?
0173            921   L011013?:
0173 7D80       922            mov     r5,#0x80
0175            923   L011014?:
0175 8D82       924            mov     dpl,r5
0177 C002       925            push    ar2
0179 C003       926            push    ar3
017B C004       927            push    ar4
017D 120000     928            lcall   _WriteCommand
0180            929   ;        D:\clone\LAB5\lab5v1.c:226: waitms(5);
0180 900005     930            mov     dptr,#0x0005
0183 120000     931            lcall   _waitms
0186 D004       932            pop     ar4
0188 D003       933            pop     ar3
018A D002       934            pop     ar2
018C            935   ;        D:\clone\LAB5\lab5v1.c:227: for(j=0; string[j]!=0; j++) WriteData(string[j]);// Write the message
018C 7D00       936            mov     r5,#0x00
018E 7E00       937            mov     r6,#0x00
0190            938   L011003?:
0190 ED         939            mov     a,r5
0191 2A         940            add     a,r2
0192 FF         941            mov     r7,a
0193 EE         942            mov     a,r6
0194 3B         943            addc    a,r3
0195 F8         944            mov     r0,a
0196 8C01       945            mov     ar1,r4
0198 8F82       946            mov     dpl,r7
019A 8883       947            mov     dph,r0
019C 89F0       948            mov     b,r1
019E 120000     949            lcall   __gptrget
01A1 FF         950            mov     r7,a
01A2 6000       951            jz      L011006?
01A4 8F82       952            mov     dpl,r7
01A6 C002       953            push    ar2
01A8 C003       954            push    ar3
01AA C004       955            push    ar4
01AC C005       956            push    ar5
01AE C006       957            push    ar6
01B0 120000     958            lcall   _WriteData
01B3 D006       959            pop     ar6
01B5 D005       960            pop     ar5
01B7 D004       961            pop     ar4
01B9 D003       962            pop     ar3
01BB D002       963            pop     ar2
01BD 0D         964            inc     r5
01BE BD0090     965            cjne    r5,#0x00,L011003?
01C1 0E         966            inc     r6
01C2 8000       967            sjmp    L011003?
01C4            968   L011006?:
01C4            969   ;        D:\clone\LAB5\lab5v1.c:228: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01C4 302050     970            jnb     _LCDprint_PARM_3,L011011?
01C7 8D02       971            mov     ar2,r5
01C9 8E03       972            mov     ar3,r6
01CB            973   L011007?:
01CB C3         974            clr     c
01CC EA         975            mov     a,r2
01CD 9410       976            subb    a,#0x10
01CF EB         977            mov     a,r3
01D0 6480       978            xrl     a,#0x80
01D2 9480       979            subb    a,#0x80
01D4 5000       980            jnc     L011011?
01D6 758220     981            mov     dpl,#0x20
01D9 C002       982            push    ar2
01DB C003       983            push    ar3
01DD 120000     984            lcall   _WriteData
01E0 D003       985            pop     ar3
01E2 D002       986            pop     ar2
01E4 0A         987            inc     r2
01E5 BA0090     988            cjne    r2,#0x00,L011007?
01E8 0B         989            inc     r3
01E9 8000       990            sjmp    L011007?
01EB            991   L011011?:
01EB 22         992            ret
01EC            993   ;------------------------------------------------------------
01EC            994   ;Allocation info for local variables in function 'TIMER0_Init'
01EC            995   ;------------------------------------------------------------
01EC            996   ;------------------------------------------------------------
01EC            997   ;        D:\clone\LAB5\lab5v1.c:231: void TIMER0_Init(void)
01EC            998   ;        -----------------------------------------
01EC            999   ;         function TIMER0_Init
01EC           1000   ;        -----------------------------------------
01EC           1001   _TIMER0_Init:
01EC           1002   ;        D:\clone\LAB5\lab5v1.c:233: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
01EC 5389F0    1003            anl     _TMOD,#0xF0
01EF           1004   ;        D:\clone\LAB5\lab5v1.c:234: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
01EF 438901    1005            orl     _TMOD,#0x01
01F2           1006   ;        D:\clone\LAB5\lab5v1.c:235: TR0=0; // Stop Timer/Counter 0
01F2 C28C      1007            clr     _TR0
01F4 22        1008            ret
01F5           1009   ;------------------------------------------------------------
01F5           1010   ;Allocation info for local variables in function 'InitPinADC'
01F5           1011   ;------------------------------------------------------------
01F5           1012   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
01F5           1013   ;portno                    Allocated to registers r2 
01F5           1014   ;mask                      Allocated to registers r3 
01F5           1015   ;------------------------------------------------------------
01F5           1016   ;        D:\clone\LAB5\lab5v1.c:240: void InitPinADC (unsigned char portno, unsigned char pinno)
01F5           1017   ;        -----------------------------------------
01F5           1018   ;         function InitPinADC
01F5           1019   ;        -----------------------------------------
01F5           1020   _InitPinADC:
01F5 AA82      1021            mov     r2,dpl
01F7           1022   ;        D:\clone\LAB5\lab5v1.c:244: mask=1<<pinno;
01F7 85C0F0    1023            mov     b,_InitPinADC_PARM_2
01FA 05F0      1024            inc     b
01FC 7401      1025            mov     a,#0x01
01FE 8000      1026            sjmp    L013013?
0200           1027   L013011?:
0200 25E0      1028            add     a,acc
0202           1029   L013013?:
0202 D5F010    1030            djnz    b,L013011?
0205 FB        1031            mov     r3,a
0206           1032   ;        D:\clone\LAB5\lab5v1.c:246: SFRPAGE = 0x20;
0206 75A720    1033            mov     _SFRPAGE,#0x20
0209           1034   ;        D:\clone\LAB5\lab5v1.c:247: switch (portno)
0209 BA0050    1035            cjne    r2,#0x00,L013014?
020C 8000      1036            sjmp    L013001?
020E           1037   L013014?:
020E BA01D0    1038            cjne    r2,#0x01,L013015?
0211 8000      1039            sjmp    L013002?
0213           1040   L013015?:
0213           1041   ;        D:\clone\LAB5\lab5v1.c:249: case 0:
0213 BA0250    1042            cjne    r2,#0x02,L013005?
0216 8000      1043            sjmp    L013003?
0218           1044   L013001?:
0218           1045   ;        D:\clone\LAB5\lab5v1.c:250: P0MDIN &= (~mask); // Set pin as analog input
0218 EB        1046            mov     a,r3
0219 F4        1047            cpl     a
021A FA        1048            mov     r2,a
021B 52F1      1049            anl     _P0MDIN,a
021D           1050   ;        D:\clone\LAB5\lab5v1.c:251: P0SKIP |= mask; // Skip Crossbar decoding for this pin
021D EB        1051            mov     a,r3
021E 42D4      1052            orl     _P0SKIP,a
0220           1053   ;        D:\clone\LAB5\lab5v1.c:252: break;
0220           1054   ;        D:\clone\LAB5\lab5v1.c:253: case 1:
0220 8000      1055            sjmp    L013005?
0222           1056   L013002?:
0222           1057   ;        D:\clone\LAB5\lab5v1.c:254: P1MDIN &= (~mask); // Set pin as analog input
0222 EB        1058            mov     a,r3
0223 F4        1059            cpl     a
0224 FA        1060            mov     r2,a
0225 52F2      1061            anl     _P1MDIN,a
0227           1062   ;        D:\clone\LAB5\lab5v1.c:255: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0227 EB        1063            mov     a,r3
0228 42D5      1064            orl     _P1SKIP,a
022A           1065   ;        D:\clone\LAB5\lab5v1.c:256: break;
022A           1066   ;        D:\clone\LAB5\lab5v1.c:257: case 2:
022A 8000      1067            sjmp    L013005?
022C           1068   L013003?:
022C           1069   ;        D:\clone\LAB5\lab5v1.c:258: P2MDIN &= (~mask); // Set pin as analog input
022C EB        1070            mov     a,r3
022D F4        1071            cpl     a
022E FA        1072            mov     r2,a
022F 52F3      1073            anl     _P2MDIN,a
0231           1074   ;        D:\clone\LAB5\lab5v1.c:259: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0231 EB        1075            mov     a,r3
0232 42CC      1076            orl     _P2SKIP,a
0234           1077   ;        D:\clone\LAB5\lab5v1.c:263: }
0234           1078   L013005?:
0234           1079   ;        D:\clone\LAB5\lab5v1.c:264: SFRPAGE = 0x00;
0234 75A700    1080            mov     _SFRPAGE,#0x00
0237 22        1081            ret
0238           1082   ;------------------------------------------------------------
0238           1083   ;Allocation info for local variables in function 'ADC_at_Pin'
0238           1084   ;------------------------------------------------------------
0238           1085   ;pin                       Allocated to registers 
0238           1086   ;------------------------------------------------------------
0238           1087   ;        D:\clone\LAB5\lab5v1.c:268: unsigned int ADC_at_Pin(unsigned char pin)
0238           1088   ;        -----------------------------------------
0238           1089   ;         function ADC_at_Pin
0238           1090   ;        -----------------------------------------
0238           1091   _ADC_at_Pin:
0238 8582BB    1092            mov     _ADC0MX,dpl
023B           1093   ;        D:\clone\LAB5\lab5v1.c:271: ADINT = 0;
023B C2ED      1094            clr     _ADINT
023D           1095   ;        D:\clone\LAB5\lab5v1.c:272: ADBUSY = 1;     // Convert voltage at the pin
023D D2EC      1096            setb    _ADBUSY
023F           1097   ;        D:\clone\LAB5\lab5v1.c:273: while (!ADINT); // Wait for conversion to complete
023F           1098   L014001?:
023F 30EDD0    1099            jnb     _ADINT,L014001?
0242           1100   ;        D:\clone\LAB5\lab5v1.c:274: return (ADC0);
0242 85BD82    1101            mov     dpl,_ADC0
0245 85BE83    1102            mov     dph,(_ADC0 >> 8)
0248 22        1103            ret
0249           1104   ;------------------------------------------------------------
0249           1105   ;Allocation info for local variables in function 'Volts_at_Pin'
0249           1106   ;------------------------------------------------------------
0249           1107   ;pin                       Allocated to registers r2 
0249           1108   ;------------------------------------------------------------
0249           1109   ;        D:\clone\LAB5\lab5v1.c:277: float Volts_at_Pin(unsigned char pin)
0249           1110   ;        -----------------------------------------
0249           1111   ;         function Volts_at_Pin
0249           1112   ;        -----------------------------------------
0249           1113   _Volts_at_Pin:
0249           1114   ;        D:\clone\LAB5\lab5v1.c:279: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0249 120000    1115            lcall   _ADC_at_Pin
024C 120000    1116            lcall   ___uint2fs
024F AA82      1117            mov     r2,dpl
0251 AB83      1118            mov     r3,dph
0253 ACF0      1119            mov     r4,b
0255 FD        1120            mov     r5,a
0256 C002      1121            push    ar2
0258 C003      1122            push    ar3
025A C004      1123            push    ar4
025C C005      1124            push    ar5
025E 90923A    1125            mov     dptr,#0x923A
0261 75F053    1126            mov     b,#0x53
0264 7440      1127            mov     a,#0x40
0266 120000    1128            lcall   ___fsmul
0269 AA82      1129            mov     r2,dpl
026B AB83      1130            mov     r3,dph
026D ACF0      1131            mov     r4,b
026F FD        1132            mov     r5,a
0270 E581      1133            mov     a,sp
0272 24FC      1134            add     a,#0xfc
0274 F581      1135            mov     sp,a
0276 E4        1136            clr     a
0277 C0E0      1137            push    acc
0279 74FC      1138            mov     a,#0xFC
027B C0E0      1139            push    acc
027D 747F      1140            mov     a,#0x7F
027F C0E0      1141            push    acc
0281 7446      1142            mov     a,#0x46
0283 C0E0      1143            push    acc
0285 8A82      1144            mov     dpl,r2
0287 8B83      1145            mov     dph,r3
0289 8CF0      1146            mov     b,r4
028B ED        1147            mov     a,r5
028C 120000    1148            lcall   ___fsdiv
028F AA82      1149            mov     r2,dpl
0291 AB83      1150            mov     r3,dph
0293 ACF0      1151            mov     r4,b
0295 FD        1152            mov     r5,a
0296 E581      1153            mov     a,sp
0298 24FC      1154            add     a,#0xfc
029A F581      1155            mov     sp,a
029C 8A82      1156            mov     dpl,r2
029E 8B83      1157            mov     dph,r3
02A0 8CF0      1158            mov     b,r4
02A2 ED        1159            mov     a,r5
02A3 22        1160            ret
02A4           1161   ;------------------------------------------------------------
02A4           1162   ;Allocation info for local variables in function 'Get_ADC'
02A4           1163   ;------------------------------------------------------------
02A4           1164   ;------------------------------------------------------------
02A4           1165   ;        D:\clone\LAB5\lab5v1.c:282: unsigned int Get_ADC (void)
02A4           1166   ;        -----------------------------------------
02A4           1167   ;         function Get_ADC
02A4           1168   ;        -----------------------------------------
02A4           1169   _Get_ADC:
02A4           1170   ;        D:\clone\LAB5\lab5v1.c:284: ADINT = 0;
02A4 C2ED      1171            clr     _ADINT
02A6           1172   ;        D:\clone\LAB5\lab5v1.c:285: ADBUSY = 1;
02A6 D2EC      1173            setb    _ADBUSY
02A8           1174   ;        D:\clone\LAB5\lab5v1.c:286: while (!ADINT); // Wait for conversion to complete
02A8           1175   L016001?:
02A8 30ED10    1176            jnb     _ADINT,L016001?
02AB           1177   ;        D:\clone\LAB5\lab5v1.c:287: return (ADC0);
02AB 85BD82    1178            mov     dpl,_ADC0
02AE 85BE83    1179            mov     dph,(_ADC0 >> 8)
02B1 22        1180            ret
02B2           1181   ;------------------------------------------------------------
02B2           1182   ;Allocation info for local variables in function 'main'
02B2           1183   ;------------------------------------------------------------
02B2           1184   ;period                    Allocated to registers r2 r3 r4 r5 
02B2           1185   ;mst                       Allocated with name '_main_mst_1_75'
02B2           1186   ;i                         Allocated with name '_main_i_1_75'
02B2           1187   ;vmax1                     Allocated with name '_main_vmax1_1_75'
02B2           1188   ;vmax2                     Allocated with name '_main_vmax2_1_75'
02B2           1189   ;phase_diff                Allocated to registers r2 r3 r4 r5 
02B2           1190   ;degrees                   Allocated to registers r2 r3 r4 r5 
02B2           1191   ;sloc0                     Allocated with name '_main_sloc0_1_0'
02B2           1192   ;v                         Allocated with name '_main_v_1_75'
02B2           1193   ;------------------------------------------------------------
02B2           1194   ;        D:\clone\LAB5\lab5v1.c:292: void main (void)
02B2           1195   ;        -----------------------------------------
02B2           1196   ;         function main
02B2           1197   ;        -----------------------------------------
02B2           1198   _main:
02B2           1199   ;        D:\clone\LAB5\lab5v1.c:296: float mst = 0.0;
02B2 75B000    1200            mov     _main_mst_1_75,#0x00
02B5 75B100    1201            mov     (_main_mst_1_75 + 1),#0x00
02B8 75B200    1202            mov     (_main_mst_1_75 + 2),#0x00
02BB 75B300    1203            mov     (_main_mst_1_75 + 3),#0x00
02BE           1204   ;        D:\clone\LAB5\lab5v1.c:298: float vmax1=0.0;
02BE 754000    1205            mov     _main_vmax1_1_75,#0x00
02C1 754100    1206            mov     (_main_vmax1_1_75 + 1),#0x00
02C4 754200    1207            mov     (_main_vmax1_1_75 + 2),#0x00
02C7 754300    1208            mov     (_main_vmax1_1_75 + 3),#0x00
02CA           1209   ;        D:\clone\LAB5\lab5v1.c:299: float vmax2=0.0;
02CA 759000    1210            mov     _main_vmax2_1_75,#0x00
02CD 759100    1211            mov     (_main_vmax2_1_75 + 1),#0x00
02D0 759200    1212            mov     (_main_vmax2_1_75 + 2),#0x00
02D3 759300    1213            mov     (_main_vmax2_1_75 + 3),#0x00
02D6           1214   ;        D:\clone\LAB5\lab5v1.c:302: TIMER0_Init();
02D6 120000    1215            lcall   _TIMER0_Init
02D9           1216   ;        D:\clone\LAB5\lab5v1.c:303: LCD_4BIT();
02D9 120000    1217            lcall   _LCD_4BIT
02DC           1218   ;        D:\clone\LAB5\lab5v1.c:305: waitms(500); // Give PuTTy a chance to start before sending
02DC 9001F4    1219            mov     dptr,#0x01F4
02DF 120000    1220            lcall   _waitms
02E2           1221   ;        D:\clone\LAB5\lab5v1.c:306: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
02E2 7450      1222            mov     a,#__str_0
02E4 C0E0      1223            push    acc
02E6 74BB      1224            mov     a,#(__str_0 >> 8)
02E8 C0E0      1225            push    acc
02EA 7480      1226            mov     a,#0x80
02EC C0E0      1227            push    acc
02EE 120000    1228            lcall   _printf
02F1 1581      1229            dec     sp
02F3 1581      1230            dec     sp
02F5 1581      1231            dec     sp
02F7           1232   ;        D:\clone\LAB5\lab5v1.c:311: __FILE__, __DATE__, __TIME__);
02F7           1233   ;        D:\clone\LAB5\lab5v1.c:310: "Compiled: %s, %s\n\n",
02F7 74D0      1234            mov     a,#__str_4
02F9 C0E0      1235            push    acc
02FB 74BB      1236            mov     a,#(__str_4 >> 8)
02FD C0E0      1237            push    acc
02FF 7480      1238            mov     a,#0x80
0301 C0E0      1239            push    acc
0303 7410      1240            mov     a,#__str_3
0305 C0E0      1241            push    acc
0307 74BC      1242            mov     a,#(__str_3 >> 8)
0309 C0E0      1243            push    acc
030B 7480      1244            mov     a,#0x80
030D C0E0      1245            push    acc
030F 7450      1246            mov     a,#__str_2
0311 C0E0      1247            push    acc
0313 74BC      1248            mov     a,#(__str_2 >> 8)
0315 C0E0      1249            push    acc
0317 7480      1250            mov     a,#0x80
0319 C0E0      1251            push    acc
031B 7490      1252            mov     a,#__str_1
031D C0E0      1253            push    acc
031F 74BC      1254            mov     a,#(__str_1 >> 8)
0321 C0E0      1255            push    acc
0323 7480      1256            mov     a,#0x80
0325 C0E0      1257            push    acc
0327 120000    1258            lcall   _printf
032A E581      1259            mov     a,sp
032C 24F4      1260            add     a,#0xf4
032E F581      1261            mov     sp,a
0330           1262   ;        D:\clone\LAB5\lab5v1.c:313: InitPinADC(1, 4); // Configure P1.6 as analog input
0330 75C004    1263            mov     _InitPinADC_PARM_2,#0x04
0333 758201    1264            mov     dpl,#0x01
0336 120000    1265            lcall   _InitPinADC
0339           1266   ;        D:\clone\LAB5\lab5v1.c:314: InitPinADC(1, 5); // Configure P1.7 as analog input
0339 75C005    1267            mov     _InitPinADC_PARM_2,#0x05
033C 758201    1268            mov     dpl,#0x01
033F 120000    1269            lcall   _InitPinADC
0342           1270   ;        D:\clone\LAB5\lab5v1.c:316: InitADC();
0342 120000    1271            lcall   _InitADC
0345           1272   ;        D:\clone\LAB5\lab5v1.c:318: LCDprint("vr:     f:    Hz",1,1);
0345 757001    1273            mov     _LCDprint_PARM_2,#0x01
0348 D220      1274            setb    _LCDprint_PARM_3
034A 90BCD0    1275            mov     dptr,#__str_5
034D 75F080    1276            mov     b,#0x80
0350 120000    1277            lcall   _LCDprint
0353           1278   ;        D:\clone\LAB5\lab5v1.c:319: LCDprint("vt:     pha:    ",2,1);
0353 757002    1279            mov     _LCDprint_PARM_2,#0x02
0356 D220      1280            setb    _LCDprint_PARM_3
0358 90BD10    1281            mov     dptr,#__str_6
035B 75F080    1282            mov     b,#0x80
035E 120000    1283            lcall   _LCDprint
0361           1284   ;        D:\clone\LAB5\lab5v1.c:322: for (i = 0; i < 10; i++){
0361           1285   L017062?:
0361 E4        1286            clr     a
0362 F5F0      1287            mov     _main_i_1_75,a
0364 F5F1      1288            mov     (_main_i_1_75 + 1),a
0366           1289   L017041?:
0366 C3        1290            clr     c
0367 E5F0      1291            mov     a,_main_i_1_75
0369 940A      1292            subb    a,#0x0A
036B E5F1      1293            mov     a,(_main_i_1_75 + 1)
036D 6480      1294            xrl     a,#0x80
036F 9480      1295            subb    a,#0x80
0371 4000      1296            jc      L017077?
0373 020000    1297            ljmp    L017044?
0376           1298   L017077?:
0376           1299   ;        D:\clone\LAB5\lab5v1.c:324: TL0=0; 
0376 758A00    1300            mov     _TL0,#0x00
0379           1301   ;        D:\clone\LAB5\lab5v1.c:325: TH0=0;
0379 758C00    1302            mov     _TH0,#0x00
037C           1303   ;        D:\clone\LAB5\lab5v1.c:326: TF0=0;
037C C28D      1304            clr     _TF0
037E           1305   ;        D:\clone\LAB5\lab5v1.c:327: overflow_count=0;
037E 75B000    1306            mov     _overflow_count,#0x00
0381           1307   ;        D:\clone\LAB5\lab5v1.c:328: while(P0_1!=0); // Wait for the signal to be zero
0381           1308   L017001?:
0381 208150    1309            jb      _P0_1,L017001?
0384           1310   ;        D:\clone\LAB5\lab5v1.c:329: while(P0_1!=1); // Wait for the signal to be one
0384           1311   L017004?:
0384 308190    1312            jnb     _P0_1,L017004?
0387           1313   ;        D:\clone\LAB5\lab5v1.c:330: TR0=1; // Start the timer
0387 D28C      1314            setb    _TR0
0389           1315   ;        D:\clone\LAB5\lab5v1.c:331: while(P0_1!=0) // Wait for the signal to be zero
0389           1316   L017009?:
0389 308110    1317            jnb     _P0_1,L017014?
038C           1318   ;        D:\clone\LAB5\lab5v1.c:333: if(TF0==1) // Did the 16-bit timer overflow?
038C           1319   ;        D:\clone\LAB5\lab5v1.c:335: TF0=0;
038C 108D50    1320            jbc     _TF0,L017081?
038F 8000      1321            sjmp    L017009?
0391           1322   L017081?:
0391           1323   ;        D:\clone\LAB5\lab5v1.c:336: overflow_count++;
0391 05B0      1324            inc     _overflow_count
0393           1325   ;        D:\clone\LAB5\lab5v1.c:339: while(P0_1!=1) // Wait for the signal to be one
0393 8000      1326            sjmp    L017009?
0395           1327   L017014?:
0395 208190    1328            jb      _P0_1,L017016?
0398           1329   ;        D:\clone\LAB5\lab5v1.c:341: if(TF0==1) // Did the 16-bit timer overflow?
0398           1330   ;        D:\clone\LAB5\lab5v1.c:343: TF0=0;
0398 108DD0    1331            jbc     _TF0,L017083?
039B 8000      1332            sjmp    L017014?
039D           1333   L017083?:
039D           1334   ;        D:\clone\LAB5\lab5v1.c:344: overflow_count++;
039D 05B0      1335            inc     _overflow_count
039F 8000      1336            sjmp    L017014?
03A1           1337   L017016?:
03A1           1338   ;        D:\clone\LAB5\lab5v1.c:347: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
03A1 C28C      1339            clr     _TR0
03A3           1340   ;        D:\clone\LAB5\lab5v1.c:348: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
03A3 85B082    1341            mov     dpl,_overflow_count
03A6 120000    1342            lcall   ___uchar2fs
03A9 AE82      1343            mov     r6,dpl
03AB AF83      1344            mov     r7,dph
03AD AAF0      1345            mov     r2,b
03AF FB        1346            mov     r3,a
03B0 C006      1347            push    ar6
03B2 C007      1348            push    ar7
03B4 C002      1349            push    ar2
03B6 C003      1350            push    ar3
03B8 900000    1351            mov     dptr,#0x0000
03BB 75F080    1352            mov     b,#0x80
03BE 7447      1353            mov     a,#0x47
03C0 120000    1354            lcall   ___fsmul
03C3 8582D0    1355            mov     _main_sloc0_1_0,dpl
03C6 8583D1    1356            mov     (_main_sloc0_1_0 + 1),dph
03C9 85F0D2    1357            mov     (_main_sloc0_1_0 + 2),b
03CC F5D3      1358            mov     (_main_sloc0_1_0 + 3),a
03CE E581      1359            mov     a,sp
03D0 24FC      1360            add     a,#0xfc
03D2 F581      1361            mov     sp,a
03D4 858C82    1362            mov     dpl,_TH0
03D7 120000    1363            lcall   ___uchar2fs
03DA AE82      1364            mov     r6,dpl
03DC AF83      1365            mov     r7,dph
03DE AAF0      1366            mov     r2,b
03E0 FB        1367            mov     r3,a
03E1 C006      1368            push    ar6
03E3 C007      1369            push    ar7
03E5 C002      1370            push    ar2
03E7 C003      1371            push    ar3
03E9 900000    1372            mov     dptr,#0x0000
03EC 75F080    1373            mov     b,#0x80
03EF 7443      1374            mov     a,#0x43
03F1 120000    1375            lcall   ___fsmul
03F4 AA82      1376            mov     r2,dpl
03F6 AB83      1377            mov     r3,dph
03F8 ACF0      1378            mov     r4,b
03FA FD        1379            mov     r5,a
03FB E581      1380            mov     a,sp
03FD 24FC      1381            add     a,#0xfc
03FF F581      1382            mov     sp,a
0401 C002      1383            push    ar2
0403 C003      1384            push    ar3
0405 C004      1385            push    ar4
0407 C005      1386            push    ar5
0409 85D082    1387            mov     dpl,_main_sloc0_1_0
040C 85D183    1388            mov     dph,(_main_sloc0_1_0 + 1)
040F 85D2F0    1389            mov     b,(_main_sloc0_1_0 + 2)
0412 E5D3      1390            mov     a,(_main_sloc0_1_0 + 3)
0414 120000    1391            lcall   ___fsadd
0417 8582D0    1392            mov     _main_sloc0_1_0,dpl
041A 8583D1    1393            mov     (_main_sloc0_1_0 + 1),dph
041D 85F0D2    1394            mov     (_main_sloc0_1_0 + 2),b
0420 F5D3      1395            mov     (_main_sloc0_1_0 + 3),a
0422 E581      1396            mov     a,sp
0424 24FC      1397            add     a,#0xfc
0426 F581      1398            mov     sp,a
0428 AE8A      1399            mov     r6,_TL0
042A 7F00      1400            mov     r7,#0x00
042C 8E82      1401            mov     dpl,r6
042E 8F83      1402            mov     dph,r7
0430 120000    1403            lcall   ___sint2fs
0433 AE82      1404            mov     r6,dpl
0435 AF83      1405            mov     r7,dph
0437 AAF0      1406            mov     r2,b
0439 FB        1407            mov     r3,a
043A C006      1408            push    ar6
043C C007      1409            push    ar7
043E C002      1410            push    ar2
0440 C003      1411            push    ar3
0442 85D082    1412            mov     dpl,_main_sloc0_1_0
0445 85D183    1413            mov     dph,(_main_sloc0_1_0 + 1)
0448 85D2F0    1414            mov     b,(_main_sloc0_1_0 + 2)
044B E5D3      1415            mov     a,(_main_sloc0_1_0 + 3)
044D 120000    1416            lcall   ___fsadd
0450 AA82      1417            mov     r2,dpl
0452 AB83      1418            mov     r3,dph
0454 ACF0      1419            mov     r4,b
0456 FD        1420            mov     r5,a
0457 E581      1421            mov     a,sp
0459 24FC      1422            add     a,#0xfc
045B F581      1423            mov     sp,a
045D C002      1424            push    ar2
045F C003      1425            push    ar3
0461 C004      1426            push    ar4
0463 C005      1427            push    ar5
0465 90F4FC    1428            mov     dptr,#0xF4FC
0468 75F032    1429            mov     b,#0x32
046B 7434      1430            mov     a,#0x34
046D 120000    1431            lcall   ___fsmul
0470 AA82      1432            mov     r2,dpl
0472 AB83      1433            mov     r3,dph
0474 ACF0      1434            mov     r4,b
0476 FD        1435            mov     r5,a
0477 E581      1436            mov     a,sp
0479 24FC      1437            add     a,#0xfc
047B F581      1438            mov     sp,a
047D           1439   ;        D:\clone\LAB5\lab5v1.c:349: if (period > mst){
047D C002      1440            push    ar2
047F C003      1441            push    ar3
0481 C004      1442            push    ar4
0483 C005      1443            push    ar5
0485 C0B0      1444            push    _main_mst_1_75
0487 C0B1      1445            push    (_main_mst_1_75 + 1)
0489 C0B2      1446            push    (_main_mst_1_75 + 2)
048B C0B3      1447            push    (_main_mst_1_75 + 3)
048D 8A82      1448            mov     dpl,r2
048F 8B83      1449            mov     dph,r3
0491 8CF0      1450            mov     b,r4
0493 ED        1451            mov     a,r5
0494 120000    1452            lcall   ___fsgt
0497 AE82      1453            mov     r6,dpl
0499 E581      1454            mov     a,sp
049B 24FC      1455            add     a,#0xfc
049D F581      1456            mov     sp,a
049F D005      1457            pop     ar5
04A1 D004      1458            pop     ar4
04A3 D003      1459            pop     ar3
04A5 D002      1460            pop     ar2
04A7 EE        1461            mov     a,r6
04A8 6000      1462            jz      L017018?
04AA           1463   ;        D:\clone\LAB5\lab5v1.c:350: mst = period;
04AA 8AB0      1464            mov     _main_mst_1_75,r2
04AC 8BB1      1465            mov     (_main_mst_1_75 + 1),r3
04AE 8CB2      1466            mov     (_main_mst_1_75 + 2),r4
04B0 8DB3      1467            mov     (_main_mst_1_75 + 3),r5
04B2           1468   L017018?:
04B2           1469   ;        D:\clone\LAB5\lab5v1.c:352: waitms(1);
04B2 900001    1470            mov     dptr,#0x0001
04B5 120000    1471            lcall   _waitms
04B8           1472   ;        D:\clone\LAB5\lab5v1.c:322: for (i = 0; i < 10; i++){
04B8 05F0      1473            inc     _main_i_1_75
04BA E4        1474            clr     a
04BB B5F050    1475            cjne    a,_main_i_1_75,L017085?
04BE 05F1      1476            inc     (_main_i_1_75 + 1)
04C0           1477   L017085?:
04C0 020000    1478            ljmp    L017041?
04C3           1479   L017044?:
04C3           1480   ;        D:\clone\LAB5\lab5v1.c:354: for(i=0;i<20;i++){
04C3 7A00      1481            mov     r2,#0x00
04C5 7B00      1482            mov     r3,#0x00
04C7           1483   L017045?:
04C7 C3        1484            clr     c
04C8 EA        1485            mov     a,r2
04C9 9414      1486            subb    a,#0x14
04CB EB        1487            mov     a,r3
04CC 6480      1488            xrl     a,#0x80
04CE 9480      1489            subb    a,#0x80
04D0 4000      1490            jc      L017086?
04D2 020000    1491            ljmp    L017048?
04D5           1492   L017086?:
04D5           1493   ;        D:\clone\LAB5\lab5v1.c:355: v[0] = Volts_at_Pin(QFP32_MUX_P1_4);
04D5 75820A    1494            mov     dpl,#0x0A
04D8 C002      1495            push    ar2
04DA C003      1496            push    ar3
04DC 120000    1497            lcall   _Volts_at_Pin
04DF AC82      1498            mov     r4,dpl
04E1 AD83      1499            mov     r5,dph
04E3 AEF0      1500            mov     r6,b
04E5 FF        1501            mov     r7,a
04E6 7810      1502            mov     r0,#_main_v_1_75
04E8 A604      1503            mov     @r0,ar4
04EA 08        1504            inc     r0
04EB A605      1505            mov     @r0,ar5
04ED 08        1506            inc     r0
04EE A606      1507            mov     @r0,ar6
04F0 08        1508            inc     r0
04F1 A607      1509            mov     @r0,ar7
04F3           1510   ;        D:\clone\LAB5\lab5v1.c:356: v[1] = Volts_at_Pin(QFP32_MUX_P1_5);
04F3 75820B    1511            mov     dpl,#0x0B
04F6 120000    1512            lcall   _Volts_at_Pin
04F9 AC82      1513            mov     r4,dpl
04FB AD83      1514            mov     r5,dph
04FD AEF0      1515            mov     r6,b
04FF FF        1516            mov     r7,a
0500 7814      1517            mov     r0,#(_main_v_1_75 + 0x0004)
0502 A604      1518            mov     @r0,ar4
0504 08        1519            inc     r0
0505 A605      1520            mov     @r0,ar5
0507 08        1521            inc     r0
0508 A606      1522            mov     @r0,ar6
050A 08        1523            inc     r0
050B A607      1524            mov     @r0,ar7
050D           1525   ;        D:\clone\LAB5\lab5v1.c:357: if(vmax1<v[0]){
050D 7810      1526            mov     r0,#_main_v_1_75
050F 8604      1527            mov     ar4,@r0
0511 08        1528            inc     r0
0512 8605      1529            mov     ar5,@r0
0514 08        1530            inc     r0
0515 8606      1531            mov     ar6,@r0
0517 08        1532            inc     r0
0518 8607      1533            mov     ar7,@r0
051A C004      1534            push    ar4
051C C005      1535            push    ar5
051E C006      1536            push    ar6
0520 C007      1537            push    ar7
0522 854082    1538            mov     dpl,_main_vmax1_1_75
0525 854183    1539            mov     dph,(_main_vmax1_1_75 + 1)
0528 8542F0    1540            mov     b,(_main_vmax1_1_75 + 2)
052B E543      1541            mov     a,(_main_vmax1_1_75 + 3)
052D 120000    1542            lcall   ___fslt
0530 AC82      1543            mov     r4,dpl
0532 E581      1544            mov     a,sp
0534 24FC      1545            add     a,#0xfc
0536 F581      1546            mov     sp,a
0538 D003      1547            pop     ar3
053A D002      1548            pop     ar2
053C EC        1549            mov     a,r4
053D 6000      1550            jz      L017020?
053F           1551   ;        D:\clone\LAB5\lab5v1.c:358: vmax1=v[0];
053F 7810      1552            mov     r0,#_main_v_1_75
0541 8640      1553            mov     _main_vmax1_1_75,@r0
0543 08        1554            inc     r0
0544 8641      1555            mov     (_main_vmax1_1_75 + 1),@r0
0546 08        1556            inc     r0
0547 8642      1557            mov     (_main_vmax1_1_75 + 2),@r0
0549 08        1558            inc     r0
054A 8643      1559            mov     (_main_vmax1_1_75 + 3),@r0
054C           1560   L017020?:
054C           1561   ;        D:\clone\LAB5\lab5v1.c:360: if(vmax2<v[1]){
054C 7814      1562            mov     r0,#(_main_v_1_75 + 0x0004)
054E 8604      1563            mov     ar4,@r0
0550 08        1564            inc     r0
0551 8605      1565            mov     ar5,@r0
0553 08        1566            inc     r0
0554 8606      1567            mov     ar6,@r0
0556 08        1568            inc     r0
0557 8607      1569            mov     ar7,@r0
0559 C002      1570            push    ar2
055B C003      1571            push    ar3
055D C004      1572            push    ar4
055F C005      1573            push    ar5
0561 C006      1574            push    ar6
0563 C007      1575            push    ar7
0565 859082    1576            mov     dpl,_main_vmax2_1_75
0568 859183    1577            mov     dph,(_main_vmax2_1_75 + 1)
056B 8592F0    1578            mov     b,(_main_vmax2_1_75 + 2)
056E E593      1579            mov     a,(_main_vmax2_1_75 + 3)
0570 120000    1580            lcall   ___fslt
0573 AC82      1581            mov     r4,dpl
0575 E581      1582            mov     a,sp
0577 24FC      1583            add     a,#0xfc
0579 F581      1584            mov     sp,a
057B D003      1585            pop     ar3
057D D002      1586            pop     ar2
057F EC        1587            mov     a,r4
0580 6000      1588            jz      L017022?
0582           1589   ;        D:\clone\LAB5\lab5v1.c:361: vmax2=v[1];
0582 7814      1590            mov     r0,#(_main_v_1_75 + 0x0004)
0584 8690      1591            mov     _main_vmax2_1_75,@r0
0586 08        1592            inc     r0
0587 8691      1593            mov     (_main_vmax2_1_75 + 1),@r0
0589 08        1594            inc     r0
058A 8692      1595            mov     (_main_vmax2_1_75 + 2),@r0
058C 08        1596            inc     r0
058D 8693      1597            mov     (_main_vmax2_1_75 + 3),@r0
058F           1598   L017022?:
058F           1599   ;        D:\clone\LAB5\lab5v1.c:363: waitms(1); 
058F 900001    1600            mov     dptr,#0x0001
0592 C002      1601            push    ar2
0594 C003      1602            push    ar3
0596 120000    1603            lcall   _waitms
0599 D003      1604            pop     ar3
059B D002      1605            pop     ar2
059D           1606   ;        D:\clone\LAB5\lab5v1.c:354: for(i=0;i<20;i++){
059D 0A        1607            inc     r2
059E BA0010    1608            cjne    r2,#0x00,L017089?
05A1 0B        1609            inc     r3
05A2           1610   L017089?:
05A2 020000    1611            ljmp    L017045?
05A5           1612   L017048?:
05A5           1613   ;        D:\clone\LAB5\lab5v1.c:365: printf("\nperiod=%3.2f\r",mst*1000);
05A5 C0B0      1614            push    _main_mst_1_75
05A7 C0B1      1615            push    (_main_mst_1_75 + 1)
05A9 C0B2      1616            push    (_main_mst_1_75 + 2)
05AB C0B3      1617            push    (_main_mst_1_75 + 3)
05AD 900000    1618            mov     dptr,#0x0000
05B0 75F07A    1619            mov     b,#0x7A
05B3 7444      1620            mov     a,#0x44
05B5 120000    1621            lcall   ___fsmul
05B8 AA82      1622            mov     r2,dpl
05BA AB83      1623            mov     r3,dph
05BC ACF0      1624            mov     r4,b
05BE FD        1625            mov     r5,a
05BF E581      1626            mov     a,sp
05C1 24FC      1627            add     a,#0xfc
05C3 F581      1628            mov     sp,a
05C5 C002      1629            push    ar2
05C7 C003      1630            push    ar3
05C9 C004      1631            push    ar4
05CB C005      1632            push    ar5
05CD 7450      1633            mov     a,#__str_7
05CF C0E0      1634            push    acc
05D1 74C3      1635            mov     a,#(__str_7 >> 8)
05D3 C0E0      1636            push    acc
05D5 7480      1637            mov     a,#0x80
05D7 C0E0      1638            push    acc
05D9 120000    1639            lcall   _printf
05DC E581      1640            mov     a,sp
05DE 24F9      1641            add     a,#0xf9
05E0 F581      1642            mov     sp,a
05E2           1643   ;        D:\clone\LAB5\lab5v1.c:366: printf ("\nV@P1_4=%7.5fV, V@P1_5=%7.5fV\r",vmax1, vmax2);
05E2 C090      1644            push    _main_vmax2_1_75
05E4 C091      1645            push    (_main_vmax2_1_75 + 1)
05E6 C092      1646            push    (_main_vmax2_1_75 + 2)
05E8 C093      1647            push    (_main_vmax2_1_75 + 3)
05EA C040      1648            push    _main_vmax1_1_75
05EC C041      1649            push    (_main_vmax1_1_75 + 1)
05EE C042      1650            push    (_main_vmax1_1_75 + 2)
05F0 C043      1651            push    (_main_vmax1_1_75 + 3)
05F2 7490      1652            mov     a,#__str_8
05F4 C0E0      1653            push    acc
05F6 74C3      1654            mov     a,#(__str_8 >> 8)
05F8 C0E0      1655            push    acc
05FA 7480      1656            mov     a,#0x80
05FC C0E0      1657            push    acc
05FE 120000    1658            lcall   _printf
0601 E581      1659            mov     a,sp
0603 24F5      1660            add     a,#0xf5
0605 F581      1661            mov     sp,a
0607           1662   ;        D:\clone\LAB5\lab5v1.c:369: TL0=0; TH0=0; TF0=0;overflow_count=0;
0607 758A00    1663            mov     _TL0,#0x00
060A 758C00    1664            mov     _TH0,#0x00
060D C28D      1665            clr     _TF0
060F 75B000    1666            mov     _overflow_count,#0x00
0612           1667   ;        D:\clone\LAB5\lab5v1.c:370: while(P0_1==1);
0612           1668   L017023?:
0612 2081D0    1669            jb      _P0_1,L017023?
0615           1670   ;        D:\clone\LAB5\lab5v1.c:371: while(P0_1==0);
0615           1671   L017026?:
0615 308110    1672            jnb     _P0_1,L017026?
0618           1673   ;        D:\clone\LAB5\lab5v1.c:372: while(P0_1==1){
0618           1674   L017035?:
0618 308190    1675            jnb     _P0_1,L017037?
061B           1676   ;        D:\clone\LAB5\lab5v1.c:373: while(P0_2==0&&P0_1==1){
061B           1677   L017032?:
061B 208210    1678            jb      _P0_2,L017034?
061E 308110    1679            jnb     _P0_1,L017034?
0621           1680   ;        D:\clone\LAB5\lab5v1.c:374: TR0=1;
0621 D28C      1681            setb    _TR0
0623           1682   ;        D:\clone\LAB5\lab5v1.c:375: if(TF0==1) // Did the 16-bit timer overflow?
0623           1683   ;        D:\clone\LAB5\lab5v1.c:377: TF0=0;
0623 108D50    1684            jbc     _TF0,L017095?
0626 8000      1685            sjmp    L017032?
0628           1686   L017095?:
0628           1687   ;        D:\clone\LAB5\lab5v1.c:378: overflow_count++;
0628 05B0      1688            inc     _overflow_count
062A 8000      1689            sjmp    L017032?
062C           1690   L017034?:
062C           1691   ;        D:\clone\LAB5\lab5v1.c:382: TR0=0; 
062C C28C      1692            clr     _TR0
062E 8000      1693            sjmp    L017035?
0630           1694   L017037?:
0630           1695   ;        D:\clone\LAB5\lab5v1.c:384: phase_diff=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
0630 85B082    1696            mov     dpl,_overflow_count
0633 120000    1697            lcall   ___uchar2fs
0636 AA82      1698            mov     r2,dpl
0638 AB83      1699            mov     r3,dph
063A ACF0      1700            mov     r4,b
063C FD        1701            mov     r5,a
063D C002      1702            push    ar2
063F C003      1703            push    ar3
0641 C004      1704            push    ar4
0643 C005      1705            push    ar5
0645 900000    1706            mov     dptr,#0x0000
0648 75F080    1707            mov     b,#0x80
064B 7447      1708            mov     a,#0x47
064D 120000    1709            lcall   ___fsmul
0650 8582D0    1710            mov     _main_sloc0_1_0,dpl
0653 8583D1    1711            mov     (_main_sloc0_1_0 + 1),dph
0656 85F0D2    1712            mov     (_main_sloc0_1_0 + 2),b
0659 F5D3      1713            mov     (_main_sloc0_1_0 + 3),a
065B E581      1714            mov     a,sp
065D 24FC      1715            add     a,#0xfc
065F F581      1716            mov     sp,a
0661 858C82    1717            mov     dpl,_TH0
0664 120000    1718            lcall   ___uchar2fs
0667 AE82      1719            mov     r6,dpl
0669 AF83      1720            mov     r7,dph
066B AAF0      1721            mov     r2,b
066D FB        1722            mov     r3,a
066E C006      1723            push    ar6
0670 C007      1724            push    ar7
0672 C002      1725            push    ar2
0674 C003      1726            push    ar3
0676 900000    1727            mov     dptr,#0x0000
0679 75F080    1728            mov     b,#0x80
067C 7443      1729            mov     a,#0x43
067E 120000    1730            lcall   ___fsmul
0681 AA82      1731            mov     r2,dpl
0683 AB83      1732            mov     r3,dph
0685 ACF0      1733            mov     r4,b
0687 FD        1734            mov     r5,a
0688 E581      1735            mov     a,sp
068A 24FC      1736            add     a,#0xfc
068C F581      1737            mov     sp,a
068E C002      1738            push    ar2
0690 C003      1739            push    ar3
0692 C004      1740            push    ar4
0694 C005      1741            push    ar5
0696 85D082    1742            mov     dpl,_main_sloc0_1_0
0699 85D183    1743            mov     dph,(_main_sloc0_1_0 + 1)
069C 85D2F0    1744            mov     b,(_main_sloc0_1_0 + 2)
069F E5D3      1745            mov     a,(_main_sloc0_1_0 + 3)
06A1 120000    1746            lcall   ___fsadd
06A4 8582D0    1747            mov     _main_sloc0_1_0,dpl
06A7 8583D1    1748            mov     (_main_sloc0_1_0 + 1),dph
06AA 85F0D2    1749            mov     (_main_sloc0_1_0 + 2),b
06AD F5D3      1750            mov     (_main_sloc0_1_0 + 3),a
06AF E581      1751            mov     a,sp
06B1 24FC      1752            add     a,#0xfc
06B3 F581      1753            mov     sp,a
06B5 AE8A      1754            mov     r6,_TL0
06B7 7F00      1755            mov     r7,#0x00
06B9 8E82      1756            mov     dpl,r6
06BB 8F83      1757            mov     dph,r7
06BD 120000    1758            lcall   ___sint2fs
06C0 AE82      1759            mov     r6,dpl
06C2 AF83      1760            mov     r7,dph
06C4 AAF0      1761            mov     r2,b
06C6 FB        1762            mov     r3,a
06C7 C006      1763            push    ar6
06C9 C007      1764            push    ar7
06CB C002      1765            push    ar2
06CD C003      1766            push    ar3
06CF 85D082    1767            mov     dpl,_main_sloc0_1_0
06D2 85D183    1768            mov     dph,(_main_sloc0_1_0 + 1)
06D5 85D2F0    1769            mov     b,(_main_sloc0_1_0 + 2)
06D8 E5D3      1770            mov     a,(_main_sloc0_1_0 + 3)
06DA 120000    1771            lcall   ___fsadd
06DD AA82      1772            mov     r2,dpl
06DF AB83      1773            mov     r3,dph
06E1 ACF0      1774            mov     r4,b
06E3 FD        1775            mov     r5,a
06E4 E581      1776            mov     a,sp
06E6 24FC      1777            add     a,#0xfc
06E8 F581      1778            mov     sp,a
06EA C002      1779            push    ar2
06EC C003      1780            push    ar3
06EE C004      1781            push    ar4
06F0 C005      1782            push    ar5
06F2 90F4FC    1783            mov     dptr,#0xF4FC
06F5 75F032    1784            mov     b,#0x32
06F8 7434      1785            mov     a,#0x34
06FA 120000    1786            lcall   ___fsmul
06FD AA82      1787            mov     r2,dpl
06FF AB83      1788            mov     r3,dph
0701 ACF0      1789            mov     r4,b
0703 FD        1790            mov     r5,a
0704 E581      1791            mov     a,sp
0706 24FC      1792            add     a,#0xfc
0708 F581      1793            mov     sp,a
070A           1794   ;        D:\clone\LAB5\lab5v1.c:385: degrees = phase_diff*360/mst ;
070A C002      1795            push    ar2
070C C003      1796            push    ar3
070E C004      1797            push    ar4
0710 C005      1798            push    ar5
0712 900000    1799            mov     dptr,#0x0000
0715 75F0B4    1800            mov     b,#0xB4
0718 7443      1801            mov     a,#0x43
071A 120000    1802            lcall   ___fsmul
071D AA82      1803            mov     r2,dpl
071F AB83      1804            mov     r3,dph
0721 ACF0      1805            mov     r4,b
0723 FD        1806            mov     r5,a
0724 E581      1807            mov     a,sp
0726 24FC      1808            add     a,#0xfc
0728 F581      1809            mov     sp,a
072A C0B0      1810            push    _main_mst_1_75
072C C0B1      1811            push    (_main_mst_1_75 + 1)
072E C0B2      1812            push    (_main_mst_1_75 + 2)
0730 C0B3      1813            push    (_main_mst_1_75 + 3)
0732 8A82      1814            mov     dpl,r2
0734 8B83      1815            mov     dph,r3
0736 8CF0      1816            mov     b,r4
0738 ED        1817            mov     a,r5
0739 120000    1818            lcall   ___fsdiv
073C AA82      1819            mov     r2,dpl
073E AB83      1820            mov     r3,dph
0740 ACF0      1821            mov     r4,b
0742 FD        1822            mov     r5,a
0743 E581      1823            mov     a,sp
0745 24FC      1824            add     a,#0xfc
0747 F581      1825            mov     sp,a
0749           1826   ;        D:\clone\LAB5\lab5v1.c:387: printf("\r\ndegrees: %f", degrees);
0749 C002      1827            push    ar2
074B C003      1828            push    ar3
074D C004      1829            push    ar4
074F C005      1830            push    ar5
0751 7490      1831            mov     a,#__str_9
0753 C0E0      1832            push    acc
0755 74C5      1833            mov     a,#(__str_9 >> 8)
0757 C0E0      1834            push    acc
0759 7480      1835            mov     a,#0x80
075B C0E0      1836            push    acc
075D 120000    1837            lcall   _printf
0760 E581      1838            mov     a,sp
0762 24F9      1839            add     a,#0xf9
0764 F581      1840            mov     sp,a
0766           1841   ;        D:\clone\LAB5\lab5v1.c:389: waitms(500); 
0766 9001F4    1842            mov     dptr,#0x01F4
0769 120000    1843            lcall   _waitms
076C 020000    1844            ljmp    L017062?
076F           1845            rseg R_CSEG
076F           1846   
0000           1847            rseg R_XINIT
0000           1848   
0000           1849            rseg R_CONST
0000           1850   __str_0:
0000 1B        1851            db 0x1B
0001 5B324A    1852            db '[2J'
0004 00        1853            db 0x00
0005           1854   __str_1:
0005 41444320  1855            db 'ADC test program'
     74657374
     2070726F
     6772616D
0015 0A        1856            db 0x0A
0016 46696C65  1857            db 'File: %s'
     3A202573
001E 0A        1858            db 0x0A
001F 436F6D70  1859            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002F 0A        1860            db 0x0A
0030 0A        1861            db 0x0A
0031 00        1862            db 0x00
0032           1863   __str_2:
0032 443A      1864            db 'D:'
0034 5C        1865            db 0x5C
0035 636C6F6E  1866            db 'clone'
     65
003A 5C        1867            db 0x5C
003B 4C414235  1868            db 'LAB5'
003F 5C        1869            db 0x5C
0040 6C616235  1870            db 'lab5v1.c'
     76312E63
0048 00        1871            db 0x00
0049           1872   __str_3:
0049 4D617220  1873            db 'Mar  6 2024'
     20362032
     303234
0054 00        1874            db 0x00
0055           1875   __str_4:
0055 31313A35  1876            db '11:55:13'
     353A3133
005D 00        1877            db 0x00
005E           1878   __str_5:
005E 76723A20  1879            db 'vr:     f:    Hz'
     20202020
     663A2020
     2020487A
006E 00        1880            db 0x00
006F           1881   __str_6:
006F 76743A20  1882            db 'vt:     pha:    '
     20202020
     7068613A
     20202020
007F 00        1883            db 0x00
0080           1884   __str_7:
0080 0A        1885            db 0x0A
0081 70657269  1886            db 'period=%3.2f'
     6F643D25
     332E3266
008D 0D        1887            db 0x0D
008E 00        1888            db 0x00
008F           1889   __str_8:
008F 0A        1890            db 0x0A
0090 56405031  1891            db 'V@P1_4=%7.5fV, V@P1_5=%7.5fV'
     5F343D25
     372E3566
     562C2056
     4050315F
     353D2537
     2E356656
00AC 0D        1892            db 0x0D
00AD 00        1893            db 0x00
00AE           1894   __str_9:
00AE 0D        1895            db 0x0D
00AF 0A        1896            db 0x0A
00B0 64656772  1897            db 'degrees: %f'
     6565733A
     202566
00BB 00        1898            db 0x00
00BC           1899   
0003           1900            CSEG
0003           1901   
0003           1902   end
