0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Tue Mar 05 19:50:55 2024
0000              5   ;--------------------------------------------------------
                  5   $name lab5v1
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Get_ADC
0000             30            public _Volts_at_Pin
0000             31            public _ADC_at_Pin
0000             32            public _InitPinADC
0000             33            public _TIMER0_Init
0000             34            public _LCDprint
0000             35            public _LCD_4BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public _InitADC
0000             43            public __c51_external_startup
0000             44            public _LCDprint_PARM_3
0000             45            public _LCDprint_PARM_2
0000             46            public _overflow_count
0000             47   ;--------------------------------------------------------
0000             48   ; Special Function Registers
0000             49   ;--------------------------------------------------------
0000             50   _ACC            DATA 0xe0
0000             51   _ADC0ASAH       DATA 0xb6
0000             52   _ADC0ASAL       DATA 0xb5
0000             53   _ADC0ASCF       DATA 0xa1
0000             54   _ADC0ASCT       DATA 0xc7
0000             55   _ADC0CF0        DATA 0xbc
0000             56   _ADC0CF1        DATA 0xb9
0000             57   _ADC0CF2        DATA 0xdf
0000             58   _ADC0CN0        DATA 0xe8
0000             59   _ADC0CN1        DATA 0xb2
0000             60   _ADC0CN2        DATA 0xb3
0000             61   _ADC0GTH        DATA 0xc4
0000             62   _ADC0GTL        DATA 0xc3
0000             63   _ADC0H          DATA 0xbe
0000             64   _ADC0L          DATA 0xbd
0000             65   _ADC0LTH        DATA 0xc6
0000             66   _ADC0LTL        DATA 0xc5
0000             67   _ADC0MX         DATA 0xbb
0000             68   _B              DATA 0xf0
0000             69   _CKCON0         DATA 0x8e
0000             70   _CKCON1         DATA 0xa6
0000             71   _CLEN0          DATA 0xc6
0000             72   _CLIE0          DATA 0xc7
0000             73   _CLIF0          DATA 0xe8
0000             74   _CLKSEL         DATA 0xa9
0000             75   _CLOUT0         DATA 0xd1
0000             76   _CLU0CF         DATA 0xb1
0000             77   _CLU0FN         DATA 0xaf
0000             78   _CLU0MX         DATA 0x84
0000             79   _CLU1CF         DATA 0xb3
0000             80   _CLU1FN         DATA 0xb2
0000             81   _CLU1MX         DATA 0x85
0000             82   _CLU2CF         DATA 0xb6
0000             83   _CLU2FN         DATA 0xb5
0000             84   _CLU2MX         DATA 0x91
0000             85   _CLU3CF         DATA 0xbf
0000             86   _CLU3FN         DATA 0xbe
0000             87   _CLU3MX         DATA 0xae
0000             88   _CMP0CN0        DATA 0x9b
0000             89   _CMP0CN1        DATA 0x99
0000             90   _CMP0MD         DATA 0x9d
0000             91   _CMP0MX         DATA 0x9f
0000             92   _CMP1CN0        DATA 0xbf
0000             93   _CMP1CN1        DATA 0xac
0000             94   _CMP1MD         DATA 0xab
0000             95   _CMP1MX         DATA 0xaa
0000             96   _CRC0CN0        DATA 0xce
0000             97   _CRC0CN1        DATA 0x86
0000             98   _CRC0CNT        DATA 0xd3
0000             99   _CRC0DAT        DATA 0xcb
0000            100   _CRC0FLIP       DATA 0xcf
0000            101   _CRC0IN         DATA 0xca
0000            102   _CRC0ST         DATA 0xd2
0000            103   _DAC0CF0        DATA 0x91
0000            104   _DAC0CF1        DATA 0x92
0000            105   _DAC0H          DATA 0x85
0000            106   _DAC0L          DATA 0x84
0000            107   _DAC1CF0        DATA 0x93
0000            108   _DAC1CF1        DATA 0x94
0000            109   _DAC1H          DATA 0x8a
0000            110   _DAC1L          DATA 0x89
0000            111   _DAC2CF0        DATA 0x95
0000            112   _DAC2CF1        DATA 0x96
0000            113   _DAC2H          DATA 0x8c
0000            114   _DAC2L          DATA 0x8b
0000            115   _DAC3CF0        DATA 0x9a
0000            116   _DAC3CF1        DATA 0x9c
0000            117   _DAC3H          DATA 0x8e
0000            118   _DAC3L          DATA 0x8d
0000            119   _DACGCF0        DATA 0x88
0000            120   _DACGCF1        DATA 0x98
0000            121   _DACGCF2        DATA 0xa2
0000            122   _DERIVID        DATA 0xad
0000            123   _DEVICEID       DATA 0xb5
0000            124   _DPH            DATA 0x83
0000            125   _DPL            DATA 0x82
0000            126   _EIE1           DATA 0xe6
0000            127   _EIE2           DATA 0xf3
0000            128   _EIP1           DATA 0xbb
0000            129   _EIP1H          DATA 0xee
0000            130   _EIP2           DATA 0xed
0000            131   _EIP2H          DATA 0xf6
0000            132   _EMI0CN         DATA 0xe7
0000            133   _FLKEY          DATA 0xb7
0000            134   _HFO0CAL        DATA 0xc7
0000            135   _HFO1CAL        DATA 0xd6
0000            136   _HFOCN          DATA 0xef
0000            137   _I2C0ADM        DATA 0xff
0000            138   _I2C0CN0        DATA 0xba
0000            139   _I2C0DIN        DATA 0xbc
0000            140   _I2C0DOUT       DATA 0xbb
0000            141   _I2C0FCN0       DATA 0xad
0000            142   _I2C0FCN1       DATA 0xab
0000            143   _I2C0FCT        DATA 0xf5
0000            144   _I2C0SLAD       DATA 0xbd
0000            145   _I2C0STAT       DATA 0xb9
0000            146   _IE             DATA 0xa8
0000            147   _IP             DATA 0xb8
0000            148   _IPH            DATA 0xf2
0000            149   _IT01CF         DATA 0xe4
0000            150   _LFO0CN         DATA 0xb1
0000            151   _P0             DATA 0x80
0000            152   _P0MASK         DATA 0xfe
0000            153   _P0MAT          DATA 0xfd
0000            154   _P0MDIN         DATA 0xf1
0000            155   _P0MDOUT        DATA 0xa4
0000            156   _P0SKIP         DATA 0xd4
0000            157   _P1             DATA 0x90
0000            158   _P1MASK         DATA 0xee
0000            159   _P1MAT          DATA 0xed
0000            160   _P1MDIN         DATA 0xf2
0000            161   _P1MDOUT        DATA 0xa5
0000            162   _P1SKIP         DATA 0xd5
0000            163   _P2             DATA 0xa0
0000            164   _P2MASK         DATA 0xfc
0000            165   _P2MAT          DATA 0xfb
0000            166   _P2MDIN         DATA 0xf3
0000            167   _P2MDOUT        DATA 0xa6
0000            168   _P2SKIP         DATA 0xcc
0000            169   _P3             DATA 0xb0
0000            170   _P3MDIN         DATA 0xf4
0000            171   _P3MDOUT        DATA 0x9c
0000            172   _PCA0CENT       DATA 0x9e
0000            173   _PCA0CLR        DATA 0x9c
0000            174   _PCA0CN0        DATA 0xd8
0000            175   _PCA0CPH0       DATA 0xfc
0000            176   _PCA0CPH1       DATA 0xea
0000            177   _PCA0CPH2       DATA 0xec
0000            178   _PCA0CPH3       DATA 0xf5
0000            179   _PCA0CPH4       DATA 0x85
0000            180   _PCA0CPH5       DATA 0xde
0000            181   _PCA0CPL0       DATA 0xfb
0000            182   _PCA0CPL1       DATA 0xe9
0000            183   _PCA0CPL2       DATA 0xeb
0000            184   _PCA0CPL3       DATA 0xf4
0000            185   _PCA0CPL4       DATA 0x84
0000            186   _PCA0CPL5       DATA 0xdd
0000            187   _PCA0CPM0       DATA 0xda
0000            188   _PCA0CPM1       DATA 0xdb
0000            189   _PCA0CPM2       DATA 0xdc
0000            190   _PCA0CPM3       DATA 0xae
0000            191   _PCA0CPM4       DATA 0xaf
0000            192   _PCA0CPM5       DATA 0xcc
0000            193   _PCA0H          DATA 0xfa
0000            194   _PCA0L          DATA 0xf9
0000            195   _PCA0MD         DATA 0xd9
0000            196   _PCA0POL        DATA 0x96
0000            197   _PCA0PWM        DATA 0xf7
0000            198   _PCON0          DATA 0x87
0000            199   _PCON1          DATA 0xcd
0000            200   _PFE0CN         DATA 0xc1
0000            201   _PRTDRV         DATA 0xf6
0000            202   _PSCTL          DATA 0x8f
0000            203   _PSTAT0         DATA 0xaa
0000            204   _PSW            DATA 0xd0
0000            205   _REF0CN         DATA 0xd1
0000            206   _REG0CN         DATA 0xc9
0000            207   _REVID          DATA 0xb6
0000            208   _RSTSRC         DATA 0xef
0000            209   _SBCON1         DATA 0x94
0000            210   _SBRLH1         DATA 0x96
0000            211   _SBRLL1         DATA 0x95
0000            212   _SBUF           DATA 0x99
0000            213   _SBUF0          DATA 0x99
0000            214   _SBUF1          DATA 0x92
0000            215   _SCON           DATA 0x98
0000            216   _SCON0          DATA 0x98
0000            217   _SCON1          DATA 0xc8
0000            218   _SFRPAGE        DATA 0xa7
0000            219   _SFRPGCN        DATA 0xbc
0000            220   _SFRSTACK       DATA 0xd7
0000            221   _SMB0ADM        DATA 0xd6
0000            222   _SMB0ADR        DATA 0xd7
0000            223   _SMB0CF         DATA 0xc1
0000            224   _SMB0CN0        DATA 0xc0
0000            225   _SMB0DAT        DATA 0xc2
0000            226   _SMB0FCN0       DATA 0xc3
0000            227   _SMB0FCN1       DATA 0xc4
0000            228   _SMB0FCT        DATA 0xef
0000            229   _SMB0RXLN       DATA 0xc5
0000            230   _SMB0TC         DATA 0xac
0000            231   _SMOD1          DATA 0x93
0000            232   _SP             DATA 0x81
0000            233   _SPI0CFG        DATA 0xa1
0000            234   _SPI0CKR        DATA 0xa2
0000            235   _SPI0CN0        DATA 0xf8
0000            236   _SPI0DAT        DATA 0xa3
0000            237   _SPI0FCN0       DATA 0x9a
0000            238   _SPI0FCN1       DATA 0x9b
0000            239   _SPI0FCT        DATA 0xf7
0000            240   _SPI0PCF        DATA 0xdf
0000            241   _TCON           DATA 0x88
0000            242   _TH0            DATA 0x8c
0000            243   _TH1            DATA 0x8d
0000            244   _TL0            DATA 0x8a
0000            245   _TL1            DATA 0x8b
0000            246   _TMOD           DATA 0x89
0000            247   _TMR2CN0        DATA 0xc8
0000            248   _TMR2CN1        DATA 0xfd
0000            249   _TMR2H          DATA 0xcf
0000            250   _TMR2L          DATA 0xce
0000            251   _TMR2RLH        DATA 0xcb
0000            252   _TMR2RLL        DATA 0xca
0000            253   _TMR3CN0        DATA 0x91
0000            254   _TMR3CN1        DATA 0xfe
0000            255   _TMR3H          DATA 0x95
0000            256   _TMR3L          DATA 0x94
0000            257   _TMR3RLH        DATA 0x93
0000            258   _TMR3RLL        DATA 0x92
0000            259   _TMR4CN0        DATA 0x98
0000            260   _TMR4CN1        DATA 0xff
0000            261   _TMR4H          DATA 0xa5
0000            262   _TMR4L          DATA 0xa4
0000            263   _TMR4RLH        DATA 0xa3
0000            264   _TMR4RLL        DATA 0xa2
0000            265   _TMR5CN0        DATA 0xc0
0000            266   _TMR5CN1        DATA 0xf1
0000            267   _TMR5H          DATA 0xd5
0000            268   _TMR5L          DATA 0xd4
0000            269   _TMR5RLH        DATA 0xd3
0000            270   _TMR5RLL        DATA 0xd2
0000            271   _UART0PCF       DATA 0xd9
0000            272   _UART1FCN0      DATA 0x9d
0000            273   _UART1FCN1      DATA 0xd8
0000            274   _UART1FCT       DATA 0xfa
0000            275   _UART1LIN       DATA 0x9e
0000            276   _UART1PCF       DATA 0xda
0000            277   _VDM0CN         DATA 0xff
0000            278   _WDTCN          DATA 0x97
0000            279   _XBR0           DATA 0xe1
0000            280   _XBR1           DATA 0xe2
0000            281   _XBR2           DATA 0xe3
0000            282   _XOSC0CN        DATA 0x86
0000            283   _DPTR           DATA 0x8382
0000            284   _TMR2RL         DATA 0xcbca
0000            285   _TMR3RL         DATA 0x9392
0000            286   _TMR4RL         DATA 0xa3a2
0000            287   _TMR5RL         DATA 0xd3d2
0000            288   _TMR0           DATA 0x8c8a
0000            289   _TMR1           DATA 0x8d8b
0000            290   _TMR2           DATA 0xcfce
0000            291   _TMR3           DATA 0x9594
0000            292   _TMR4           DATA 0xa5a4
0000            293   _TMR5           DATA 0xd5d4
0000            294   _SBRL1          DATA 0x9695
0000            295   _PCA0           DATA 0xfaf9
0000            296   _PCA0CP0        DATA 0xfcfb
0000            297   _PCA0CP1        DATA 0xeae9
0000            298   _PCA0CP2        DATA 0xeceb
0000            299   _PCA0CP3        DATA 0xf5f4
0000            300   _PCA0CP4        DATA 0x8584
0000            301   _PCA0CP5        DATA 0xdedd
0000            302   _ADC0ASA        DATA 0xb6b5
0000            303   _ADC0GT         DATA 0xc4c3
0000            304   _ADC0           DATA 0xbebd
0000            305   _ADC0LT         DATA 0xc6c5
0000            306   _DAC0           DATA 0x8584
0000            307   _DAC1           DATA 0x8a89
0000            308   _DAC2           DATA 0x8c8b
0000            309   _DAC3           DATA 0x8e8d
0000            310   ;--------------------------------------------------------
0000            311   ; special function bits
0000            312   ;--------------------------------------------------------
0000            313   _ACC_0          BIT 0xe0
0000            314   _ACC_1          BIT 0xe1
0000            315   _ACC_2          BIT 0xe2
0000            316   _ACC_3          BIT 0xe3
0000            317   _ACC_4          BIT 0xe4
0000            318   _ACC_5          BIT 0xe5
0000            319   _ACC_6          BIT 0xe6
0000            320   _ACC_7          BIT 0xe7
0000            321   _TEMPE          BIT 0xe8
0000            322   _ADGN0          BIT 0xe9
0000            323   _ADGN1          BIT 0xea
0000            324   _ADWINT         BIT 0xeb
0000            325   _ADBUSY         BIT 0xec
0000            326   _ADINT          BIT 0xed
0000            327   _IPOEN          BIT 0xee
0000            328   _ADEN           BIT 0xef
0000            329   _B_0            BIT 0xf0
0000            330   _B_1            BIT 0xf1
0000            331   _B_2            BIT 0xf2
0000            332   _B_3            BIT 0xf3
0000            333   _B_4            BIT 0xf4
0000            334   _B_5            BIT 0xf5
0000            335   _B_6            BIT 0xf6
0000            336   _B_7            BIT 0xf7
0000            337   _C0FIF          BIT 0xe8
0000            338   _C0RIF          BIT 0xe9
0000            339   _C1FIF          BIT 0xea
0000            340   _C1RIF          BIT 0xeb
0000            341   _C2FIF          BIT 0xec
0000            342   _C2RIF          BIT 0xed
0000            343   _C3FIF          BIT 0xee
0000            344   _C3RIF          BIT 0xef
0000            345   _D1SRC0         BIT 0x88
0000            346   _D1SRC1         BIT 0x89
0000            347   _D1AMEN         BIT 0x8a
0000            348   _D01REFSL       BIT 0x8b
0000            349   _D3SRC0         BIT 0x8c
0000            350   _D3SRC1         BIT 0x8d
0000            351   _D3AMEN         BIT 0x8e
0000            352   _D23REFSL       BIT 0x8f
0000            353   _D0UDIS         BIT 0x98
0000            354   _D1UDIS         BIT 0x99
0000            355   _D2UDIS         BIT 0x9a
0000            356   _D3UDIS         BIT 0x9b
0000            357   _EX0            BIT 0xa8
0000            358   _ET0            BIT 0xa9
0000            359   _EX1            BIT 0xaa
0000            360   _ET1            BIT 0xab
0000            361   _ES0            BIT 0xac
0000            362   _ET2            BIT 0xad
0000            363   _ESPI0          BIT 0xae
0000            364   _EA             BIT 0xaf
0000            365   _PX0            BIT 0xb8
0000            366   _PT0            BIT 0xb9
0000            367   _PX1            BIT 0xba
0000            368   _PT1            BIT 0xbb
0000            369   _PS0            BIT 0xbc
0000            370   _PT2            BIT 0xbd
0000            371   _PSPI0          BIT 0xbe
0000            372   _P0_0           BIT 0x80
0000            373   _P0_1           BIT 0x81
0000            374   _P0_2           BIT 0x82
0000            375   _P0_3           BIT 0x83
0000            376   _P0_4           BIT 0x84
0000            377   _P0_5           BIT 0x85
0000            378   _P0_6           BIT 0x86
0000            379   _P0_7           BIT 0x87
0000            380   _P1_0           BIT 0x90
0000            381   _P1_1           BIT 0x91
0000            382   _P1_2           BIT 0x92
0000            383   _P1_3           BIT 0x93
0000            384   _P1_4           BIT 0x94
0000            385   _P1_5           BIT 0x95
0000            386   _P1_6           BIT 0x96
0000            387   _P1_7           BIT 0x97
0000            388   _P2_0           BIT 0xa0
0000            389   _P2_1           BIT 0xa1
0000            390   _P2_2           BIT 0xa2
0000            391   _P2_3           BIT 0xa3
0000            392   _P2_4           BIT 0xa4
0000            393   _P2_5           BIT 0xa5
0000            394   _P2_6           BIT 0xa6
0000            395   _P3_0           BIT 0xb0
0000            396   _P3_1           BIT 0xb1
0000            397   _P3_2           BIT 0xb2
0000            398   _P3_3           BIT 0xb3
0000            399   _P3_4           BIT 0xb4
0000            400   _P3_7           BIT 0xb7
0000            401   _CCF0           BIT 0xd8
0000            402   _CCF1           BIT 0xd9
0000            403   _CCF2           BIT 0xda
0000            404   _CCF3           BIT 0xdb
0000            405   _CCF4           BIT 0xdc
0000            406   _CCF5           BIT 0xdd
0000            407   _CR             BIT 0xde
0000            408   _CF             BIT 0xdf
0000            409   _PARITY         BIT 0xd0
0000            410   _F1             BIT 0xd1
0000            411   _OV             BIT 0xd2
0000            412   _RS0            BIT 0xd3
0000            413   _RS1            BIT 0xd4
0000            414   _F0             BIT 0xd5
0000            415   _AC             BIT 0xd6
0000            416   _CY             BIT 0xd7
0000            417   _RI             BIT 0x98
0000            418   _TI             BIT 0x99
0000            419   _RB8            BIT 0x9a
0000            420   _TB8            BIT 0x9b
0000            421   _REN            BIT 0x9c
0000            422   _CE             BIT 0x9d
0000            423   _SMODE          BIT 0x9e
0000            424   _RI1            BIT 0xc8
0000            425   _TI1            BIT 0xc9
0000            426   _RBX1           BIT 0xca
0000            427   _TBX1           BIT 0xcb
0000            428   _REN1           BIT 0xcc
0000            429   _PERR1          BIT 0xcd
0000            430   _OVR1           BIT 0xce
0000            431   _SI             BIT 0xc0
0000            432   _ACK            BIT 0xc1
0000            433   _ARBLOST        BIT 0xc2
0000            434   _ACKRQ          BIT 0xc3
0000            435   _STO            BIT 0xc4
0000            436   _STA            BIT 0xc5
0000            437   _TXMODE         BIT 0xc6
0000            438   _MASTER         BIT 0xc7
0000            439   _SPIEN          BIT 0xf8
0000            440   _TXNF           BIT 0xf9
0000            441   _NSSMD0         BIT 0xfa
0000            442   _NSSMD1         BIT 0xfb
0000            443   _RXOVRN         BIT 0xfc
0000            444   _MODF           BIT 0xfd
0000            445   _WCOL           BIT 0xfe
0000            446   _SPIF           BIT 0xff
0000            447   _IT0            BIT 0x88
0000            448   _IE0            BIT 0x89
0000            449   _IT1            BIT 0x8a
0000            450   _IE1            BIT 0x8b
0000            451   _TR0            BIT 0x8c
0000            452   _TF0            BIT 0x8d
0000            453   _TR1            BIT 0x8e
0000            454   _TF1            BIT 0x8f
0000            455   _T2XCLK0        BIT 0xc8
0000            456   _T2XCLK1        BIT 0xc9
0000            457   _TR2            BIT 0xca
0000            458   _T2SPLIT        BIT 0xcb
0000            459   _TF2CEN         BIT 0xcc
0000            460   _TF2LEN         BIT 0xcd
0000            461   _TF2L           BIT 0xce
0000            462   _TF2H           BIT 0xcf
0000            463   _T4XCLK0        BIT 0x98
0000            464   _T4XCLK1        BIT 0x99
0000            465   _TR4            BIT 0x9a
0000            466   _T4SPLIT        BIT 0x9b
0000            467   _TF4CEN         BIT 0x9c
0000            468   _TF4LEN         BIT 0x9d
0000            469   _TF4L           BIT 0x9e
0000            470   _TF4H           BIT 0x9f
0000            471   _T5XCLK0        BIT 0xc0
0000            472   _T5XCLK1        BIT 0xc1
0000            473   _TR5            BIT 0xc2
0000            474   _T5SPLIT        BIT 0xc3
0000            475   _TF5CEN         BIT 0xc4
0000            476   _TF5LEN         BIT 0xc5
0000            477   _TF5L           BIT 0xc6
0000            478   _TF5H           BIT 0xc7
0000            479   _RIE            BIT 0xd8
0000            480   _RXTO0          BIT 0xd9
0000            481   _RXTO1          BIT 0xda
0000            482   _RFRQ           BIT 0xdb
0000            483   _TIE            BIT 0xdc
0000            484   _TXHOLD         BIT 0xdd
0000            485   _TXNF1          BIT 0xde
0000            486   _TFRQ           BIT 0xdf
0000            487   ;--------------------------------------------------------
0000            488   ; overlayable register banks
0000            489   ;--------------------------------------------------------
0000            490            rbank0 segment data overlay
0000            491   ;--------------------------------------------------------
0000            492   ; internal ram data
0000            493   ;--------------------------------------------------------
0000            494            rseg R_DSEG
0000            495   _overflow_count:
0000            496            ds 1
0001            497   _LCDprint_PARM_2:
0001            498            ds 1
0002            499   _main_mst_1_75:
0002            500            ds 4
0006            501   _main_i_1_75:
0006            502            ds 2
0008            503   _main_sloc0_1_0:
0008            504            ds 4
000C            505   ;--------------------------------------------------------
000C            506   ; overlayable items in internal ram 
000C            507   ;--------------------------------------------------------
0000            508            rseg    R_OSEG
0000            509            rseg    R_OSEG
0000            510   _InitPinADC_PARM_2:
0000            511            ds 1
0001            512            rseg    R_OSEG
0001            513   ;--------------------------------------------------------
0001            514   ; indirectly addressable internal ram data
0001            515   ;--------------------------------------------------------
0000            516            rseg R_ISEG
0000            517   _main_v_1_75:
0000            518            ds 8
0008            519   ;--------------------------------------------------------
0008            520   ; absolute internal ram data
0008            521   ;--------------------------------------------------------
0000            522            DSEG
0000            523   ;--------------------------------------------------------
0000            524   ; bit data
0000            525   ;--------------------------------------------------------
0000            526            rseg R_BSEG
0000            527   _LCDprint_PARM_3:
0000            528            DBIT    1
0001            529   ;--------------------------------------------------------
0001            530   ; paged external ram data
0001            531   ;--------------------------------------------------------
0000            532            rseg R_PSEG
0000            533   ;--------------------------------------------------------
0000            534   ; external ram data
0000            535   ;--------------------------------------------------------
0000            536            rseg R_XSEG
0000            537   ;--------------------------------------------------------
0000            538   ; absolute external ram data
0000            539   ;--------------------------------------------------------
0000            540            XSEG
0000            541   ;--------------------------------------------------------
0000            542   ; external initialized ram data
0000            543   ;--------------------------------------------------------
0000            544            rseg R_IXSEG
0000            545            rseg R_HOME
0000            546            rseg R_GSINIT
0000            547            rseg R_CSEG
0000            548   ;--------------------------------------------------------
0000            549   ; Reset entry point and interrupt vectors
0000            550   ;--------------------------------------------------------
0000            551            CSEG at 0x0000
0000 020000     552            ljmp    _crt0
0003            553   ;--------------------------------------------------------
0003            554   ; global & static initialisations
0003            555   ;--------------------------------------------------------
0000            556            rseg R_HOME
0000            557            rseg R_GSINIT
0000            558            rseg R_GSINIT
0000            559   ;--------------------------------------------------------
0000            560   ; data variables initialization
0000            561   ;--------------------------------------------------------
0000            562            rseg R_DINIT
0000            563            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            564   ;--------------------------------------------------------
0000            565   ; code
0000            566   ;--------------------------------------------------------
0000            567            rseg R_CSEG
0000            568   ;------------------------------------------------------------
0000            569   ;Allocation info for local variables in function '_c51_external_startup'
0000            570   ;------------------------------------------------------------
0000            571   ;------------------------------------------------------------
0000            572   ;        D:\clone\LAB5\lab5v1.c:28: char _c51_external_startup (void)
0000            573   ;        -----------------------------------------
0000            574   ;         function _c51_external_startup
0000            575   ;        -----------------------------------------
0000            576   __c51_external_startup:
0000            577            using   0
0000            578   ;        D:\clone\LAB5\lab5v1.c:31: SFRPAGE = 0x00;
0000 75A700     579            mov     _SFRPAGE,#0x00
0003            580   ;        D:\clone\LAB5\lab5v1.c:32: WDTCN = 0xDE; //First key
0003 7597DE     581            mov     _WDTCN,#0xDE
0006            582   ;        D:\clone\LAB5\lab5v1.c:33: WDTCN = 0xAD; //Second key
0006 7597AD     583            mov     _WDTCN,#0xAD
0009            584   ;        D:\clone\LAB5\lab5v1.c:35: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     585            mov     _VDM0CN,#0x80
000C            586   ;        D:\clone\LAB5\lab5v1.c:36: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     587            mov     _RSTSRC,#0x06
000F            588   ;        D:\clone\LAB5\lab5v1.c:43: SFRPAGE = 0x10;
000F 75A710     589            mov     _SFRPAGE,#0x10
0012            590   ;        D:\clone\LAB5\lab5v1.c:44: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     591            mov     _PFE0CN,#0x20
0015            592   ;        D:\clone\LAB5\lab5v1.c:45: SFRPAGE = 0x00;
0015 75A700     593            mov     _SFRPAGE,#0x00
0018            594   ;        D:\clone\LAB5\lab5v1.c:66: CLKSEL = 0x00;
0018 75A900     595            mov     _CLKSEL,#0x00
001B            596   ;        D:\clone\LAB5\lab5v1.c:67: CLKSEL = 0x00;
001B 75A900     597            mov     _CLKSEL,#0x00
001E            598   ;        D:\clone\LAB5\lab5v1.c:68: while ((CLKSEL & 0x80) == 0);
001E            599   L002001?:
001E E5A9       600            mov     a,_CLKSEL
0020 30E7F0     601            jnb     acc.7,L002001?
0023            602   ;        D:\clone\LAB5\lab5v1.c:69: CLKSEL = 0x03;
0023 75A903     603            mov     _CLKSEL,#0x03
0026            604   ;        D:\clone\LAB5\lab5v1.c:70: CLKSEL = 0x03;
0026 75A903     605            mov     _CLKSEL,#0x03
0029            606   ;        D:\clone\LAB5\lab5v1.c:71: while ((CLKSEL & 0x80) == 0);
0029            607   L002004?:
0029 E5A9       608            mov     a,_CLKSEL
002B 30E770     609            jnb     acc.7,L002004?
002E            610   ;        D:\clone\LAB5\lab5v1.c:76: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     611            orl     _P0MDOUT,#0x10
0031            612   ;        D:\clone\LAB5\lab5v1.c:77: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     613            mov     _XBR0,#0x01
0034            614   ;        D:\clone\LAB5\lab5v1.c:78: XBR1     = 0X00;
0034 75E200     615            mov     _XBR1,#0x00
0037            616   ;        D:\clone\LAB5\lab5v1.c:79: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     617            mov     _XBR2,#0x40
003A            618   ;        D:\clone\LAB5\lab5v1.c:85: SCON0 = 0x10;
003A 759810     619            mov     _SCON0,#0x10
003D            620   ;        D:\clone\LAB5\lab5v1.c:86: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     621            mov     _CKCON0,_CKCON0
0040            622   ;        D:\clone\LAB5\lab5v1.c:88: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     623            mov     _TH1,#0xE6
0043            624   ;        D:\clone\LAB5\lab5v1.c:89: TL1 = TH1;      // Init Timer1
0043 858D8B     625            mov     _TL1,_TH1
0046            626   ;        D:\clone\LAB5\lab5v1.c:90: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     627            anl     _TMOD,#0x0F
0049            628   ;        D:\clone\LAB5\lab5v1.c:91: TMOD |=  0x20;                       
0049 438920     629            orl     _TMOD,#0x20
004C            630   ;        D:\clone\LAB5\lab5v1.c:92: TR1 = 1; // START Timer1
004C D28E       631            setb    _TR1
004E            632   ;        D:\clone\LAB5\lab5v1.c:93: TI = 1;  // Indicate TX0 ready
004E D299       633            setb    _TI
0050            634   ;        D:\clone\LAB5\lab5v1.c:95: return 0;
0050 758200     635            mov     dpl,#0x00
0053 22         636            ret
0054            637   ;------------------------------------------------------------
0054            638   ;Allocation info for local variables in function 'InitADC'
0054            639   ;------------------------------------------------------------
0054            640   ;------------------------------------------------------------
0054            641   ;        D:\clone\LAB5\lab5v1.c:98: void InitADC (void)
0054            642   ;        -----------------------------------------
0054            643   ;         function InitADC
0054            644   ;        -----------------------------------------
0054            645   _InitADC:
0054            646   ;        D:\clone\LAB5\lab5v1.c:100: SFRPAGE = 0x00;
0054 75A700     647            mov     _SFRPAGE,#0x00
0057            648   ;        D:\clone\LAB5\lab5v1.c:101: ADEN=0; // Disable ADC
0057 C2EF       649            clr     _ADEN
0059            650   ;        D:\clone\LAB5\lab5v1.c:106: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0059 75B280     651            mov     _ADC0CN1,#0x80
005C            652   ;        D:\clone\LAB5\lab5v1.c:110: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
005C 75BC20     653            mov     _ADC0CF0,#0x20
005F            654   ;        D:\clone\LAB5\lab5v1.c:114: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005F 75B91E     655            mov     _ADC0CF1,#0x1E
0062            656   ;        D:\clone\LAB5\lab5v1.c:123: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
0062 75E800     657            mov     _ADC0CN0,#0x00
0065            658   ;        D:\clone\LAB5\lab5v1.c:128: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0065 75DF3F     659            mov     _ADC0CF2,#0x3F
0068            660   ;        D:\clone\LAB5\lab5v1.c:132: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0068 75B300     661            mov     _ADC0CN2,#0x00
006B            662   ;        D:\clone\LAB5\lab5v1.c:134: ADEN=1; // Enable ADC
006B D2EF       663            setb    _ADEN
006D 22         664            ret
006E            665   ;------------------------------------------------------------
006E            666   ;Allocation info for local variables in function 'Timer3us'
006E            667   ;------------------------------------------------------------
006E            668   ;us                        Allocated to registers r2 
006E            669   ;i                         Allocated to registers r3 
006E            670   ;------------------------------------------------------------
006E            671   ;        D:\clone\LAB5\lab5v1.c:138: void Timer3us(unsigned char us)
006E            672   ;        -----------------------------------------
006E            673   ;         function Timer3us
006E            674   ;        -----------------------------------------
006E            675   _Timer3us:
006E AA82       676            mov     r2,dpl
0070            677   ;        D:\clone\LAB5\lab5v1.c:143: CKCON0|=0b_0100_0000;
0070 438E40     678            orl     _CKCON0,#0x40
0073            679   ;        D:\clone\LAB5\lab5v1.c:145: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0073 7592B8     680            mov     _TMR3RL,#0xB8
0076 7593FF     681            mov     (_TMR3RL >> 8),#0xFF
0079            682   ;        D:\clone\LAB5\lab5v1.c:146: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0079 859294     683            mov     _TMR3,_TMR3RL
007C 859395     684            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007F            685   ;        D:\clone\LAB5\lab5v1.c:148: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007F 759104     686            mov     _TMR3CN0,#0x04
0082            687   ;        D:\clone\LAB5\lab5v1.c:149: for (i = 0; i < us; i++)       // Count <us> overflows
0082 7B00       688            mov     r3,#0x00
0084            689   L004004?:
0084 C3         690            clr     c
0085 EB         691            mov     a,r3
0086 9A         692            subb    a,r2
0087 5000       693            jnc     L004007?
0089            694   ;        D:\clone\LAB5\lab5v1.c:151: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0089            695   L004001?:
0089 E591       696            mov     a,_TMR3CN0
008B 30E770     697            jnb     acc.7,L004001?
008E            698   ;        D:\clone\LAB5\lab5v1.c:152: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008E 53917F     699            anl     _TMR3CN0,#0x7F
0091            700   ;        D:\clone\LAB5\lab5v1.c:149: for (i = 0; i < us; i++)       // Count <us> overflows
0091 0B         701            inc     r3
0092 8000       702            sjmp    L004004?
0094            703   L004007?:
0094            704   ;        D:\clone\LAB5\lab5v1.c:154: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0094 759100     705            mov     _TMR3CN0,#0x00
0097 22         706            ret
0098            707   ;------------------------------------------------------------
0098            708   ;Allocation info for local variables in function 'waitms'
0098            709   ;------------------------------------------------------------
0098            710   ;ms                        Allocated to registers r2 r3 
0098            711   ;j                         Allocated to registers r4 r5 
0098            712   ;k                         Allocated to registers r6 
0098            713   ;------------------------------------------------------------
0098            714   ;        D:\clone\LAB5\lab5v1.c:157: void waitms (unsigned int ms)
0098            715   ;        -----------------------------------------
0098            716   ;         function waitms
0098            717   ;        -----------------------------------------
0098            718   _waitms:
0098 AA82       719            mov     r2,dpl
009A AB83       720            mov     r3,dph
009C            721   ;        D:\clone\LAB5\lab5v1.c:161: for(j=0; j<ms; j++)
009C 7C00       722            mov     r4,#0x00
009E 7D00       723            mov     r5,#0x00
00A0            724   L005005?:
00A0 C3         725            clr     c
00A1 EC         726            mov     a,r4
00A2 9A         727            subb    a,r2
00A3 ED         728            mov     a,r5
00A4 9B         729            subb    a,r3
00A5 5000       730            jnc     L005009?
00A7            731   ;        D:\clone\LAB5\lab5v1.c:162: for (k=0; k<4; k++) Timer3us(250);
00A7 7E00       732            mov     r6,#0x00
00A9            733   L005001?:
00A9 BE04B0     734            cjne    r6,#0x04,L005018?
00AC            735   L005018?:
00AC 5000       736            jnc     L005007?
00AE 7582FA     737            mov     dpl,#0xFA
00B1 C002       738            push    ar2
00B3 C003       739            push    ar3
00B5 C004       740            push    ar4
00B7 C005       741            push    ar5
00B9 C006       742            push    ar6
00BB 120000     743            lcall   _Timer3us
00BE D006       744            pop     ar6
00C0 D005       745            pop     ar5
00C2 D004       746            pop     ar4
00C4 D003       747            pop     ar3
00C6 D002       748            pop     ar2
00C8 0E         749            inc     r6
00C9 8000       750            sjmp    L005001?
00CB            751   L005007?:
00CB            752   ;        D:\clone\LAB5\lab5v1.c:161: for(j=0; j<ms; j++)
00CB 0C         753            inc     r4
00CC BC00F0     754            cjne    r4,#0x00,L005005?
00CF 0D         755            inc     r5
00D0 8000       756            sjmp    L005005?
00D2            757   L005009?:
00D2 22         758            ret
00D3            759   ;------------------------------------------------------------
00D3            760   ;Allocation info for local variables in function 'LCD_pulse'
00D3            761   ;------------------------------------------------------------
00D3            762   ;------------------------------------------------------------
00D3            763   ;        D:\clone\LAB5\lab5v1.c:165: void LCD_pulse (void)
00D3            764   ;        -----------------------------------------
00D3            765   ;         function LCD_pulse
00D3            766   ;        -----------------------------------------
00D3            767   _LCD_pulse:
00D3            768   ;        D:\clone\LAB5\lab5v1.c:167: LCD_E=1;
00D3 D2A0       769            setb    _P2_0
00D5            770   ;        D:\clone\LAB5\lab5v1.c:168: Timer3us(40);
00D5 758228     771            mov     dpl,#0x28
00D8 120000     772            lcall   _Timer3us
00DB            773   ;        D:\clone\LAB5\lab5v1.c:169: LCD_E=0;
00DB C2A0       774            clr     _P2_0
00DD 22         775            ret
00DE            776   ;------------------------------------------------------------
00DE            777   ;Allocation info for local variables in function 'LCD_byte'
00DE            778   ;------------------------------------------------------------
00DE            779   ;x                         Allocated to registers r2 
00DE            780   ;------------------------------------------------------------
00DE            781   ;        D:\clone\LAB5\lab5v1.c:172: void LCD_byte (unsigned char x)
00DE            782   ;        -----------------------------------------
00DE            783   ;         function LCD_byte
00DE            784   ;        -----------------------------------------
00DE            785   _LCD_byte:
00DE AA82       786            mov     r2,dpl
00E0            787   ;        D:\clone\LAB5\lab5v1.c:175: ACC=x; //Send high nible
00E0 8AE0       788            mov     _ACC,r2
00E2            789   ;        D:\clone\LAB5\lab5v1.c:176: LCD_D7=ACC_7;
00E2 A2E7       790            mov     c,_ACC_7
00E4 9290       791            mov     _P1_0,c
00E6            792   ;        D:\clone\LAB5\lab5v1.c:177: LCD_D6=ACC_6;
00E6 A2E6       793            mov     c,_ACC_6
00E8 9291       794            mov     _P1_1,c
00EA            795   ;        D:\clone\LAB5\lab5v1.c:178: LCD_D5=ACC_5;
00EA A2E5       796            mov     c,_ACC_5
00EC 9292       797            mov     _P1_2,c
00EE            798   ;        D:\clone\LAB5\lab5v1.c:179: LCD_D4=ACC_4;
00EE A2E4       799            mov     c,_ACC_4
00F0 9293       800            mov     _P1_3,c
00F2            801   ;        D:\clone\LAB5\lab5v1.c:180: LCD_pulse();
00F2 C002       802            push    ar2
00F4 120000     803            lcall   _LCD_pulse
00F7            804   ;        D:\clone\LAB5\lab5v1.c:181: Timer3us(40);
00F7 758228     805            mov     dpl,#0x28
00FA 120000     806            lcall   _Timer3us
00FD D002       807            pop     ar2
00FF            808   ;        D:\clone\LAB5\lab5v1.c:182: ACC=x; //Send low nible
00FF 8AE0       809            mov     _ACC,r2
0101            810   ;        D:\clone\LAB5\lab5v1.c:183: LCD_D7=ACC_3;
0101 A2E3       811            mov     c,_ACC_3
0103 9290       812            mov     _P1_0,c
0105            813   ;        D:\clone\LAB5\lab5v1.c:184: LCD_D6=ACC_2;
0105 A2E2       814            mov     c,_ACC_2
0107 9291       815            mov     _P1_1,c
0109            816   ;        D:\clone\LAB5\lab5v1.c:185: LCD_D5=ACC_1;
0109 A2E1       817            mov     c,_ACC_1
010B 9292       818            mov     _P1_2,c
010D            819   ;        D:\clone\LAB5\lab5v1.c:186: LCD_D4=ACC_0;
010D A2E0       820            mov     c,_ACC_0
010F 9293       821            mov     _P1_3,c
0111            822   ;        D:\clone\LAB5\lab5v1.c:187: LCD_pulse();
0111 020000     823            ljmp    _LCD_pulse
0114            824   ;------------------------------------------------------------
0114            825   ;Allocation info for local variables in function 'WriteData'
0114            826   ;------------------------------------------------------------
0114            827   ;x                         Allocated to registers r2 
0114            828   ;------------------------------------------------------------
0114            829   ;        D:\clone\LAB5\lab5v1.c:190: void WriteData (unsigned char x)
0114            830   ;        -----------------------------------------
0114            831   ;         function WriteData
0114            832   ;        -----------------------------------------
0114            833   _WriteData:
0114 AA82       834            mov     r2,dpl
0116            835   ;        D:\clone\LAB5\lab5v1.c:192: LCD_RS=1;
0116 D297       836            setb    _P1_7
0118            837   ;        D:\clone\LAB5\lab5v1.c:193: LCD_byte(x);
0118 8A82       838            mov     dpl,r2
011A 120000     839            lcall   _LCD_byte
011D            840   ;        D:\clone\LAB5\lab5v1.c:194: waitms(2);
011D 900002     841            mov     dptr,#0x0002
0120 020000     842            ljmp    _waitms
0123            843   ;------------------------------------------------------------
0123            844   ;Allocation info for local variables in function 'WriteCommand'
0123            845   ;------------------------------------------------------------
0123            846   ;x                         Allocated to registers r2 
0123            847   ;------------------------------------------------------------
0123            848   ;        D:\clone\LAB5\lab5v1.c:197: void WriteCommand (unsigned char x)
0123            849   ;        -----------------------------------------
0123            850   ;         function WriteCommand
0123            851   ;        -----------------------------------------
0123            852   _WriteCommand:
0123 AA82       853            mov     r2,dpl
0125            854   ;        D:\clone\LAB5\lab5v1.c:199: LCD_RS=0;
0125 C297       855            clr     _P1_7
0127            856   ;        D:\clone\LAB5\lab5v1.c:200: LCD_byte(x);
0127 8A82       857            mov     dpl,r2
0129 120000     858            lcall   _LCD_byte
012C            859   ;        D:\clone\LAB5\lab5v1.c:201: waitms(5);
012C 900005     860            mov     dptr,#0x0005
012F 020000     861            ljmp    _waitms
0132            862   ;------------------------------------------------------------
0132            863   ;Allocation info for local variables in function 'LCD_4BIT'
0132            864   ;------------------------------------------------------------
0132            865   ;------------------------------------------------------------
0132            866   ;        D:\clone\LAB5\lab5v1.c:204: void LCD_4BIT (void)
0132            867   ;        -----------------------------------------
0132            868   ;         function LCD_4BIT
0132            869   ;        -----------------------------------------
0132            870   _LCD_4BIT:
0132            871   ;        D:\clone\LAB5\lab5v1.c:206: LCD_E=0; // Resting state of LCD's enable is zero
0132 C2A0       872            clr     _P2_0
0134            873   ;        D:\clone\LAB5\lab5v1.c:208: waitms(20);
0134 900014     874            mov     dptr,#0x0014
0137 120000     875            lcall   _waitms
013A            876   ;        D:\clone\LAB5\lab5v1.c:210: WriteCommand(0x33);
013A 758233     877            mov     dpl,#0x33
013D 120000     878            lcall   _WriteCommand
0140            879   ;        D:\clone\LAB5\lab5v1.c:211: WriteCommand(0x33);
0140 758233     880            mov     dpl,#0x33
0143 120000     881            lcall   _WriteCommand
0146            882   ;        D:\clone\LAB5\lab5v1.c:212: WriteCommand(0x32); // Change to 4-bit mode
0146 758232     883            mov     dpl,#0x32
0149 120000     884            lcall   _WriteCommand
014C            885   ;        D:\clone\LAB5\lab5v1.c:215: WriteCommand(0x28);
014C 758228     886            mov     dpl,#0x28
014F 120000     887            lcall   _WriteCommand
0152            888   ;        D:\clone\LAB5\lab5v1.c:216: WriteCommand(0x0c);
0152 75820C     889            mov     dpl,#0x0C
0155 120000     890            lcall   _WriteCommand
0158            891   ;        D:\clone\LAB5\lab5v1.c:217: WriteCommand(0x01); // Clear screen command (takes some time)
0158 758201     892            mov     dpl,#0x01
015B 120000     893            lcall   _WriteCommand
015E            894   ;        D:\clone\LAB5\lab5v1.c:218: waitms(20); // Wait for clear screen command to finsih.
015E 900014     895            mov     dptr,#0x0014
0161 020000     896            ljmp    _waitms
0164            897   ;------------------------------------------------------------
0164            898   ;Allocation info for local variables in function 'LCDprint'
0164            899   ;------------------------------------------------------------
0164            900   ;line                      Allocated with name '_LCDprint_PARM_2'
0164            901   ;string                    Allocated to registers r2 r3 r4 
0164            902   ;j                         Allocated to registers r5 r6 
0164            903   ;------------------------------------------------------------
0164            904   ;        D:\clone\LAB5\lab5v1.c:221: void LCDprint(char * string, unsigned char line, bit clear)
0164            905   ;        -----------------------------------------
0164            906   ;         function LCDprint
0164            907   ;        -----------------------------------------
0164            908   _LCDprint:
0164 AA82       909            mov     r2,dpl
0166 AB83       910            mov     r3,dph
0168 ACF0       911            mov     r4,b
016A            912   ;        D:\clone\LAB5\lab5v1.c:225: WriteCommand(line==2?0xc0:0x80);
016A 7402       913            mov     a,#0x02
016C B57070     914            cjne    a,_LCDprint_PARM_2,L011013?
016F 7DC0       915            mov     r5,#0xC0
0171 8000       916            sjmp    L011014?
0173            917   L011013?:
0173 7D80       918            mov     r5,#0x80
0175            919   L011014?:
0175 8D82       920            mov     dpl,r5
0177 C002       921            push    ar2
0179 C003       922            push    ar3
017B C004       923            push    ar4
017D 120000     924            lcall   _WriteCommand
0180            925   ;        D:\clone\LAB5\lab5v1.c:226: waitms(5);
0180 900005     926            mov     dptr,#0x0005
0183 120000     927            lcall   _waitms
0186 D004       928            pop     ar4
0188 D003       929            pop     ar3
018A D002       930            pop     ar2
018C            931   ;        D:\clone\LAB5\lab5v1.c:227: for(j=0; string[j]!=0; j++) WriteData(string[j]);// Write the message
018C 7D00       932            mov     r5,#0x00
018E 7E00       933            mov     r6,#0x00
0190            934   L011003?:
0190 ED         935            mov     a,r5
0191 2A         936            add     a,r2
0192 FF         937            mov     r7,a
0193 EE         938            mov     a,r6
0194 3B         939            addc    a,r3
0195 F8         940            mov     r0,a
0196 8C01       941            mov     ar1,r4
0198 8F82       942            mov     dpl,r7
019A 8883       943            mov     dph,r0
019C 89F0       944            mov     b,r1
019E 120000     945            lcall   __gptrget
01A1 FF         946            mov     r7,a
01A2 6000       947            jz      L011006?
01A4 8F82       948            mov     dpl,r7
01A6 C002       949            push    ar2
01A8 C003       950            push    ar3
01AA C004       951            push    ar4
01AC C005       952            push    ar5
01AE C006       953            push    ar6
01B0 120000     954            lcall   _WriteData
01B3 D006       955            pop     ar6
01B5 D005       956            pop     ar5
01B7 D004       957            pop     ar4
01B9 D003       958            pop     ar3
01BB D002       959            pop     ar2
01BD 0D         960            inc     r5
01BE BD00F0     961            cjne    r5,#0x00,L011003?
01C1 0E         962            inc     r6
01C2 8000       963            sjmp    L011003?
01C4            964   L011006?:
01C4            965   ;        D:\clone\LAB5\lab5v1.c:228: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01C4 3020B0     966            jnb     _LCDprint_PARM_3,L011011?
01C7 8D02       967            mov     ar2,r5
01C9 8E03       968            mov     ar3,r6
01CB            969   L011007?:
01CB C3         970            clr     c
01CC EA         971            mov     a,r2
01CD 9410       972            subb    a,#0x10
01CF EB         973            mov     a,r3
01D0 6480       974            xrl     a,#0x80
01D2 9480       975            subb    a,#0x80
01D4 5000       976            jnc     L011011?
01D6 758220     977            mov     dpl,#0x20
01D9 C002       978            push    ar2
01DB C003       979            push    ar3
01DD 120000     980            lcall   _WriteData
01E0 D003       981            pop     ar3
01E2 D002       982            pop     ar2
01E4 0A         983            inc     r2
01E5 BA00F0     984            cjne    r2,#0x00,L011007?
01E8 0B         985            inc     r3
01E9 8000       986            sjmp    L011007?
01EB            987   L011011?:
01EB 22         988            ret
01EC            989   ;------------------------------------------------------------
01EC            990   ;Allocation info for local variables in function 'TIMER0_Init'
01EC            991   ;------------------------------------------------------------
01EC            992   ;------------------------------------------------------------
01EC            993   ;        D:\clone\LAB5\lab5v1.c:231: void TIMER0_Init(void)
01EC            994   ;        -----------------------------------------
01EC            995   ;         function TIMER0_Init
01EC            996   ;        -----------------------------------------
01EC            997   _TIMER0_Init:
01EC            998   ;        D:\clone\LAB5\lab5v1.c:233: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
01EC 5389F0     999            anl     _TMOD,#0xF0
01EF           1000   ;        D:\clone\LAB5\lab5v1.c:234: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
01EF 438901    1001            orl     _TMOD,#0x01
01F2           1002   ;        D:\clone\LAB5\lab5v1.c:235: TR0=0; // Stop Timer/Counter 0
01F2 C28C      1003            clr     _TR0
01F4 22        1004            ret
01F5           1005   ;------------------------------------------------------------
01F5           1006   ;Allocation info for local variables in function 'InitPinADC'
01F5           1007   ;------------------------------------------------------------
01F5           1008   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
01F5           1009   ;portno                    Allocated to registers r2 
01F5           1010   ;mask                      Allocated to registers r3 
01F5           1011   ;------------------------------------------------------------
01F5           1012   ;        D:\clone\LAB5\lab5v1.c:240: void InitPinADC (unsigned char portno, unsigned char pinno)
01F5           1013   ;        -----------------------------------------
01F5           1014   ;         function InitPinADC
01F5           1015   ;        -----------------------------------------
01F5           1016   _InitPinADC:
01F5 AA82      1017            mov     r2,dpl
01F7           1018   ;        D:\clone\LAB5\lab5v1.c:244: mask=1<<pinno;
01F7 85C0F0    1019            mov     b,_InitPinADC_PARM_2
01FA 05F0      1020            inc     b
01FC 7401      1021            mov     a,#0x01
01FE 8000      1022            sjmp    L013013?
0200           1023   L013011?:
0200 25E0      1024            add     a,acc
0202           1025   L013013?:
0202 D5F070    1026            djnz    b,L013011?
0205 FB        1027            mov     r3,a
0206           1028   ;        D:\clone\LAB5\lab5v1.c:246: SFRPAGE = 0x20;
0206 75A720    1029            mov     _SFRPAGE,#0x20
0209           1030   ;        D:\clone\LAB5\lab5v1.c:247: switch (portno)
0209 BA00B0    1031            cjne    r2,#0x00,L013014?
020C 8000      1032            sjmp    L013001?
020E           1033   L013014?:
020E BA0130    1034            cjne    r2,#0x01,L013015?
0211 8000      1035            sjmp    L013002?
0213           1036   L013015?:
0213           1037   ;        D:\clone\LAB5\lab5v1.c:249: case 0:
0213 BA02B0    1038            cjne    r2,#0x02,L013005?
0216 8000      1039            sjmp    L013003?
0218           1040   L013001?:
0218           1041   ;        D:\clone\LAB5\lab5v1.c:250: P0MDIN &= (~mask); // Set pin as analog input
0218 EB        1042            mov     a,r3
0219 F4        1043            cpl     a
021A FA        1044            mov     r2,a
021B 52F1      1045            anl     _P0MDIN,a
021D           1046   ;        D:\clone\LAB5\lab5v1.c:251: P0SKIP |= mask; // Skip Crossbar decoding for this pin
021D EB        1047            mov     a,r3
021E 42D4      1048            orl     _P0SKIP,a
0220           1049   ;        D:\clone\LAB5\lab5v1.c:252: break;
0220           1050   ;        D:\clone\LAB5\lab5v1.c:253: case 1:
0220 8000      1051            sjmp    L013005?
0222           1052   L013002?:
0222           1053   ;        D:\clone\LAB5\lab5v1.c:254: P1MDIN &= (~mask); // Set pin as analog input
0222 EB        1054            mov     a,r3
0223 F4        1055            cpl     a
0224 FA        1056            mov     r2,a
0225 52F2      1057            anl     _P1MDIN,a
0227           1058   ;        D:\clone\LAB5\lab5v1.c:255: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0227 EB        1059            mov     a,r3
0228 42D5      1060            orl     _P1SKIP,a
022A           1061   ;        D:\clone\LAB5\lab5v1.c:256: break;
022A           1062   ;        D:\clone\LAB5\lab5v1.c:257: case 2:
022A 8000      1063            sjmp    L013005?
022C           1064   L013003?:
022C           1065   ;        D:\clone\LAB5\lab5v1.c:258: P2MDIN &= (~mask); // Set pin as analog input
022C EB        1066            mov     a,r3
022D F4        1067            cpl     a
022E FA        1068            mov     r2,a
022F 52F3      1069            anl     _P2MDIN,a
0231           1070   ;        D:\clone\LAB5\lab5v1.c:259: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0231 EB        1071            mov     a,r3
0232 42CC      1072            orl     _P2SKIP,a
0234           1073   ;        D:\clone\LAB5\lab5v1.c:263: }
0234           1074   L013005?:
0234           1075   ;        D:\clone\LAB5\lab5v1.c:264: SFRPAGE = 0x00;
0234 75A700    1076            mov     _SFRPAGE,#0x00
0237 22        1077            ret
0238           1078   ;------------------------------------------------------------
0238           1079   ;Allocation info for local variables in function 'ADC_at_Pin'
0238           1080   ;------------------------------------------------------------
0238           1081   ;pin                       Allocated to registers 
0238           1082   ;------------------------------------------------------------
0238           1083   ;        D:\clone\LAB5\lab5v1.c:268: unsigned int ADC_at_Pin(unsigned char pin)
0238           1084   ;        -----------------------------------------
0238           1085   ;         function ADC_at_Pin
0238           1086   ;        -----------------------------------------
0238           1087   _ADC_at_Pin:
0238 8582BB    1088            mov     _ADC0MX,dpl
023B           1089   ;        D:\clone\LAB5\lab5v1.c:271: ADINT = 0;
023B C2ED      1090            clr     _ADINT
023D           1091   ;        D:\clone\LAB5\lab5v1.c:272: ADBUSY = 1;     // Convert voltage at the pin
023D D2EC      1092            setb    _ADBUSY
023F           1093   ;        D:\clone\LAB5\lab5v1.c:273: while (!ADINT); // Wait for conversion to complete
023F           1094   L014001?:
023F 30ED30    1095            jnb     _ADINT,L014001?
0242           1096   ;        D:\clone\LAB5\lab5v1.c:274: return (ADC0);
0242 85BD82    1097            mov     dpl,_ADC0
0245 85BE83    1098            mov     dph,(_ADC0 >> 8)
0248 22        1099            ret
0249           1100   ;------------------------------------------------------------
0249           1101   ;Allocation info for local variables in function 'Volts_at_Pin'
0249           1102   ;------------------------------------------------------------
0249           1103   ;pin                       Allocated to registers r2 
0249           1104   ;------------------------------------------------------------
0249           1105   ;        D:\clone\LAB5\lab5v1.c:277: float Volts_at_Pin(unsigned char pin)
0249           1106   ;        -----------------------------------------
0249           1107   ;         function Volts_at_Pin
0249           1108   ;        -----------------------------------------
0249           1109   _Volts_at_Pin:
0249           1110   ;        D:\clone\LAB5\lab5v1.c:279: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0249 120000    1111            lcall   _ADC_at_Pin
024C 120000    1112            lcall   ___uint2fs
024F AA82      1113            mov     r2,dpl
0251 AB83      1114            mov     r3,dph
0253 ACF0      1115            mov     r4,b
0255 FD        1116            mov     r5,a
0256 C002      1117            push    ar2
0258 C003      1118            push    ar3
025A C004      1119            push    ar4
025C C005      1120            push    ar5
025E 903333    1121            mov     dptr,#0x3333
0261 75F053    1122            mov     b,#0x53
0264 7440      1123            mov     a,#0x40
0266 120000    1124            lcall   ___fsmul
0269 AA82      1125            mov     r2,dpl
026B AB83      1126            mov     r3,dph
026D ACF0      1127            mov     r4,b
026F FD        1128            mov     r5,a
0270 E581      1129            mov     a,sp
0272 24FC      1130            add     a,#0xfc
0274 F581      1131            mov     sp,a
0276 E4        1132            clr     a
0277 C0E0      1133            push    acc
0279 74FC      1134            mov     a,#0xFC
027B C0E0      1135            push    acc
027D 747F      1136            mov     a,#0x7F
027F C0E0      1137            push    acc
0281 7446      1138            mov     a,#0x46
0283 C0E0      1139            push    acc
0285 8A82      1140            mov     dpl,r2
0287 8B83      1141            mov     dph,r3
0289 8CF0      1142            mov     b,r4
028B ED        1143            mov     a,r5
028C 120000    1144            lcall   ___fsdiv
028F AA82      1145            mov     r2,dpl
0291 AB83      1146            mov     r3,dph
0293 ACF0      1147            mov     r4,b
0295 FD        1148            mov     r5,a
0296 E581      1149            mov     a,sp
0298 24FC      1150            add     a,#0xfc
029A F581      1151            mov     sp,a
029C 8A82      1152            mov     dpl,r2
029E 8B83      1153            mov     dph,r3
02A0 8CF0      1154            mov     b,r4
02A2 ED        1155            mov     a,r5
02A3 22        1156            ret
02A4           1157   ;------------------------------------------------------------
02A4           1158   ;Allocation info for local variables in function 'Get_ADC'
02A4           1159   ;------------------------------------------------------------
02A4           1160   ;------------------------------------------------------------
02A4           1161   ;        D:\clone\LAB5\lab5v1.c:282: unsigned int Get_ADC (void)
02A4           1162   ;        -----------------------------------------
02A4           1163   ;         function Get_ADC
02A4           1164   ;        -----------------------------------------
02A4           1165   _Get_ADC:
02A4           1166   ;        D:\clone\LAB5\lab5v1.c:284: ADINT = 0;
02A4 C2ED      1167            clr     _ADINT
02A6           1168   ;        D:\clone\LAB5\lab5v1.c:285: ADBUSY = 1;
02A6 D2EC      1169            setb    _ADBUSY
02A8           1170   ;        D:\clone\LAB5\lab5v1.c:286: while (!ADINT); // Wait for conversion to complete
02A8           1171   L016001?:
02A8 30ED70    1172            jnb     _ADINT,L016001?
02AB           1173   ;        D:\clone\LAB5\lab5v1.c:287: return (ADC0);
02AB 85BD82    1174            mov     dpl,_ADC0
02AE 85BE83    1175            mov     dph,(_ADC0 >> 8)
02B1 22        1176            ret
02B2           1177   ;------------------------------------------------------------
02B2           1178   ;Allocation info for local variables in function 'main'
02B2           1179   ;------------------------------------------------------------
02B2           1180   ;period                    Allocated to registers r2 r3 r4 r5 
02B2           1181   ;mst                       Allocated with name '_main_mst_1_75'
02B2           1182   ;i                         Allocated with name '_main_i_1_75'
02B2           1183   ;sloc0                     Allocated with name '_main_sloc0_1_0'
02B2           1184   ;v                         Allocated with name '_main_v_1_75'
02B2           1185   ;------------------------------------------------------------
02B2           1186   ;        D:\clone\LAB5\lab5v1.c:292: void main (void)
02B2           1187   ;        -----------------------------------------
02B2           1188   ;         function main
02B2           1189   ;        -----------------------------------------
02B2           1190   _main:
02B2           1191   ;        D:\clone\LAB5\lab5v1.c:298: TIMER0_Init();
02B2 120000    1192            lcall   _TIMER0_Init
02B5           1193   ;        D:\clone\LAB5\lab5v1.c:299: LCD_4BIT();
02B5 120000    1194            lcall   _LCD_4BIT
02B8           1195   ;        D:\clone\LAB5\lab5v1.c:301: waitms(500); // Give PuTTy a chance to start before sending
02B8 9001F4    1196            mov     dptr,#0x01F4
02BB 120000    1197            lcall   _waitms
02BE           1198   ;        D:\clone\LAB5\lab5v1.c:302: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
02BE 74B0      1199            mov     a,#__str_0
02C0 C0E0      1200            push    acc
02C2 74BA      1201            mov     a,#(__str_0 >> 8)
02C4 C0E0      1202            push    acc
02C6 7480      1203            mov     a,#0x80
02C8 C0E0      1204            push    acc
02CA 120000    1205            lcall   _printf
02CD 1581      1206            dec     sp
02CF 1581      1207            dec     sp
02D1 1581      1208            dec     sp
02D3           1209   ;        D:\clone\LAB5\lab5v1.c:307: __FILE__, __DATE__, __TIME__);
02D3           1210   ;        D:\clone\LAB5\lab5v1.c:306: "Compiled: %s, %s\n\n",
02D3 7430      1211            mov     a,#__str_4
02D5 C0E0      1212            push    acc
02D7 74BB      1213            mov     a,#(__str_4 >> 8)
02D9 C0E0      1214            push    acc
02DB 7480      1215            mov     a,#0x80
02DD C0E0      1216            push    acc
02DF 7470      1217            mov     a,#__str_3
02E1 C0E0      1218            push    acc
02E3 74BB      1219            mov     a,#(__str_3 >> 8)
02E5 C0E0      1220            push    acc
02E7 7480      1221            mov     a,#0x80
02E9 C0E0      1222            push    acc
02EB 74B0      1223            mov     a,#__str_2
02ED C0E0      1224            push    acc
02EF 74BB      1225            mov     a,#(__str_2 >> 8)
02F1 C0E0      1226            push    acc
02F3 7480      1227            mov     a,#0x80
02F5 C0E0      1228            push    acc
02F7 74F0      1229            mov     a,#__str_1
02F9 C0E0      1230            push    acc
02FB 74BB      1231            mov     a,#(__str_1 >> 8)
02FD C0E0      1232            push    acc
02FF 7480      1233            mov     a,#0x80
0301 C0E0      1234            push    acc
0303 120000    1235            lcall   _printf
0306 E581      1236            mov     a,sp
0308 24F4      1237            add     a,#0xf4
030A F581      1238            mov     sp,a
030C           1239   ;        D:\clone\LAB5\lab5v1.c:309: InitPinADC(1, 4); // Configure P1.6 as analog input
030C 75C004    1240            mov     _InitPinADC_PARM_2,#0x04
030F 758201    1241            mov     dpl,#0x01
0312 120000    1242            lcall   _InitPinADC
0315           1243   ;        D:\clone\LAB5\lab5v1.c:310: InitPinADC(1, 5); // Configure P1.7 as analog input
0315 75C005    1244            mov     _InitPinADC_PARM_2,#0x05
0318 758201    1245            mov     dpl,#0x01
031B 120000    1246            lcall   _InitPinADC
031E           1247   ;        D:\clone\LAB5\lab5v1.c:312: InitADC();
031E 120000    1248            lcall   _InitADC
0321           1249   ;        D:\clone\LAB5\lab5v1.c:314: LCDprint("vr:     f:    Hz",1,1);
0321 757001    1250            mov     _LCDprint_PARM_2,#0x01
0324 D220      1251            setb    _LCDprint_PARM_3
0326 90BC30    1252            mov     dptr,#__str_5
0329 75F080    1253            mov     b,#0x80
032C 120000    1254            lcall   _LCDprint
032F           1255   ;        D:\clone\LAB5\lab5v1.c:315: LCDprint("vt:     pha:    ",2,1);
032F 757002    1256            mov     _LCDprint_PARM_2,#0x02
0332 D220      1257            setb    _LCDprint_PARM_3
0334 90BC70    1258            mov     dptr,#__str_6
0337 75F080    1259            mov     b,#0x80
033A 120000    1260            lcall   _LCDprint
033D           1261   ;        D:\clone\LAB5\lab5v1.c:318: for (i = 0; i < 10; i++){
033D           1262   L017040?:
033D E4        1263            clr     a
033E F5F0      1264            mov     _main_i_1_75,a
0340 F5F1      1265            mov     (_main_i_1_75 + 1),a
0342           1266   L017022?:
0342 C3        1267            clr     c
0343 E5F0      1268            mov     a,_main_i_1_75
0345 940A      1269            subb    a,#0x0A
0347 E5F1      1270            mov     a,(_main_i_1_75 + 1)
0349 6480      1271            xrl     a,#0x80
034B 9480      1272            subb    a,#0x80
034D 5000      1273            jnc     L017040?
034F           1274   ;        D:\clone\LAB5\lab5v1.c:320: TL0=0; 
034F 758A00    1275            mov     _TL0,#0x00
0352           1276   ;        D:\clone\LAB5\lab5v1.c:321: TH0=0;
0352 758C00    1277            mov     _TH0,#0x00
0355           1278   ;        D:\clone\LAB5\lab5v1.c:322: TF0=0;
0355 C28D      1279            clr     _TF0
0357           1280   ;        D:\clone\LAB5\lab5v1.c:323: overflow_count=0;
0357 75B000    1281            mov     _overflow_count,#0x00
035A           1282   ;        D:\clone\LAB5\lab5v1.c:324: while(P0_1!=0); // Wait for the signal to be zero
035A           1283   L017001?:
035A 208130    1284            jb      _P0_1,L017001?
035D           1285   ;        D:\clone\LAB5\lab5v1.c:325: while(P0_1!=1); // Wait for the signal to be one
035D           1286   L017004?:
035D 308170    1287            jnb     _P0_1,L017004?
0360           1288   ;        D:\clone\LAB5\lab5v1.c:326: TR0=1; // Start the timer
0360 D28C      1289            setb    _TR0
0362           1290   ;        D:\clone\LAB5\lab5v1.c:327: while(P0_1!=0) // Wait for the signal to be zero
0362           1291   L017009?:
0362 3081F0    1292            jnb     _P0_1,L017014?
0365           1293   ;        D:\clone\LAB5\lab5v1.c:329: if(TF0==1) // Did the 16-bit timer overflow?
0365           1294   ;        D:\clone\LAB5\lab5v1.c:331: TF0=0;
0365 108D30    1295            jbc     _TF0,L017045?
0368 8000      1296            sjmp    L017009?
036A           1297   L017045?:
036A           1298   ;        D:\clone\LAB5\lab5v1.c:332: overflow_count++;
036A 05B0      1299            inc     _overflow_count
036C           1300   ;        D:\clone\LAB5\lab5v1.c:335: while(P0_1!=1) // Wait for the signal to be one
036C 8000      1301            sjmp    L017009?
036E           1302   L017014?:
036E 208170    1303            jb      _P0_1,L017016?
0371           1304   ;        D:\clone\LAB5\lab5v1.c:337: if(TF0==1) // Did the 16-bit timer overflow?
0371           1305   ;        D:\clone\LAB5\lab5v1.c:339: TF0=0;
0371 108DB0    1306            jbc     _TF0,L017047?
0374 8000      1307            sjmp    L017014?
0376           1308   L017047?:
0376           1309   ;        D:\clone\LAB5\lab5v1.c:340: overflow_count++;
0376 05B0      1310            inc     _overflow_count
0378 8000      1311            sjmp    L017014?
037A           1312   L017016?:
037A           1313   ;        D:\clone\LAB5\lab5v1.c:343: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
037A C28C      1314            clr     _TR0
037C           1315   ;        D:\clone\LAB5\lab5v1.c:344: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
037C 85B082    1316            mov     dpl,_overflow_count
037F 120000    1317            lcall   ___uchar2fs
0382 AC82      1318            mov     r4,dpl
0384 AD83      1319            mov     r5,dph
0386 AEF0      1320            mov     r6,b
0388 FF        1321            mov     r7,a
0389 C004      1322            push    ar4
038B C005      1323            push    ar5
038D C006      1324            push    ar6
038F C007      1325            push    ar7
0391 900000    1326            mov     dptr,#0x0000
0394 75F080    1327            mov     b,#0x80
0397 7447      1328            mov     a,#0x47
0399 120000    1329            lcall   ___fsmul
039C 858230    1330            mov     _main_sloc0_1_0,dpl
039F 858331    1331            mov     (_main_sloc0_1_0 + 1),dph
03A2 85F032    1332            mov     (_main_sloc0_1_0 + 2),b
03A5 F533      1333            mov     (_main_sloc0_1_0 + 3),a
03A7 E581      1334            mov     a,sp
03A9 24FC      1335            add     a,#0xfc
03AB F581      1336            mov     sp,a
03AD 858C82    1337            mov     dpl,_TH0
03B0 120000    1338            lcall   ___uchar2fs
03B3 AA82      1339            mov     r2,dpl
03B5 AB83      1340            mov     r3,dph
03B7 ACF0      1341            mov     r4,b
03B9 FD        1342            mov     r5,a
03BA C002      1343            push    ar2
03BC C003      1344            push    ar3
03BE C004      1345            push    ar4
03C0 C005      1346            push    ar5
03C2 900000    1347            mov     dptr,#0x0000
03C5 75F080    1348            mov     b,#0x80
03C8 7443      1349            mov     a,#0x43
03CA 120000    1350            lcall   ___fsmul
03CD AA82      1351            mov     r2,dpl
03CF AB83      1352            mov     r3,dph
03D1 ACF0      1353            mov     r4,b
03D3 FD        1354            mov     r5,a
03D4 E581      1355            mov     a,sp
03D6 24FC      1356            add     a,#0xfc
03D8 F581      1357            mov     sp,a
03DA C002      1358            push    ar2
03DC C003      1359            push    ar3
03DE C004      1360            push    ar4
03E0 C005      1361            push    ar5
03E2 853082    1362            mov     dpl,_main_sloc0_1_0
03E5 853183    1363            mov     dph,(_main_sloc0_1_0 + 1)
03E8 8532F0    1364            mov     b,(_main_sloc0_1_0 + 2)
03EB E533      1365            mov     a,(_main_sloc0_1_0 + 3)
03ED 120000    1366            lcall   ___fsadd
03F0 858230    1367            mov     _main_sloc0_1_0,dpl
03F3 858331    1368            mov     (_main_sloc0_1_0 + 1),dph
03F6 85F032    1369            mov     (_main_sloc0_1_0 + 2),b
03F9 F533      1370            mov     (_main_sloc0_1_0 + 3),a
03FB E581      1371            mov     a,sp
03FD 24FC      1372            add     a,#0xfc
03FF F581      1373            mov     sp,a
0401 AE8A      1374            mov     r6,_TL0
0403 7F00      1375            mov     r7,#0x00
0405 8E82      1376            mov     dpl,r6
0407 8F83      1377            mov     dph,r7
0409 120000    1378            lcall   ___sint2fs
040C AE82      1379            mov     r6,dpl
040E AF83      1380            mov     r7,dph
0410 AAF0      1381            mov     r2,b
0412 FB        1382            mov     r3,a
0413 C006      1383            push    ar6
0415 C007      1384            push    ar7
0417 C002      1385            push    ar2
0419 C003      1386            push    ar3
041B 853082    1387            mov     dpl,_main_sloc0_1_0
041E 853183    1388            mov     dph,(_main_sloc0_1_0 + 1)
0421 8532F0    1389            mov     b,(_main_sloc0_1_0 + 2)
0424 E533      1390            mov     a,(_main_sloc0_1_0 + 3)
0426 120000    1391            lcall   ___fsadd
0429 AA82      1392            mov     r2,dpl
042B AB83      1393            mov     r3,dph
042D ACF0      1394            mov     r4,b
042F FD        1395            mov     r5,a
0430 E581      1396            mov     a,sp
0432 24FC      1397            add     a,#0xfc
0434 F581      1398            mov     sp,a
0436 C002      1399            push    ar2
0438 C003      1400            push    ar3
043A C004      1401            push    ar4
043C C005      1402            push    ar5
043E 90F4FC    1403            mov     dptr,#0xF4FC
0441 75F032    1404            mov     b,#0x32
0444 7434      1405            mov     a,#0x34
0446 120000    1406            lcall   ___fsmul
0449 AA82      1407            mov     r2,dpl
044B AB83      1408            mov     r3,dph
044D ACF0      1409            mov     r4,b
044F FD        1410            mov     r5,a
0450 E581      1411            mov     a,sp
0452 24FC      1412            add     a,#0xfc
0454 F581      1413            mov     sp,a
0456           1414   ;        D:\clone\LAB5\lab5v1.c:345: if (period > mst) 
0456 C002      1415            push    ar2
0458 C003      1416            push    ar3
045A C004      1417            push    ar4
045C C005      1418            push    ar5
045E C0B0      1419            push    _main_mst_1_75
0460 C0B1      1420            push    (_main_mst_1_75 + 1)
0462 C0B2      1421            push    (_main_mst_1_75 + 2)
0464 C0B3      1422            push    (_main_mst_1_75 + 3)
0466 8A82      1423            mov     dpl,r2
0468 8B83      1424            mov     dph,r3
046A 8CF0      1425            mov     b,r4
046C ED        1426            mov     a,r5
046D 120000    1427            lcall   ___fsgt
0470 AE82      1428            mov     r6,dpl
0472 E581      1429            mov     a,sp
0474 24FC      1430            add     a,#0xfc
0476 F581      1431            mov     sp,a
0478 D005      1432            pop     ar5
047A D004      1433            pop     ar4
047C D003      1434            pop     ar3
047E D002      1435            pop     ar2
0480 EE        1436            mov     a,r6
0481 6000      1437            jz      L017018?
0483           1438   ;        D:\clone\LAB5\lab5v1.c:346: mst = period;
0483 8AB0      1439            mov     _main_mst_1_75,r2
0485 8BB1      1440            mov     (_main_mst_1_75 + 1),r3
0487 8CB2      1441            mov     (_main_mst_1_75 + 2),r4
0489 8DB3      1442            mov     (_main_mst_1_75 + 3),r5
048B           1443   L017018?:
048B           1444   ;        D:\clone\LAB5\lab5v1.c:347: printf("\r\n%3.2f",mst*1000);
048B C0B0      1445            push    _main_mst_1_75
048D C0B1      1446            push    (_main_mst_1_75 + 1)
048F C0B2      1447            push    (_main_mst_1_75 + 2)
0491 C0B3      1448            push    (_main_mst_1_75 + 3)
0493 900000    1449            mov     dptr,#0x0000
0496 75F07A    1450            mov     b,#0x7A
0499 7444      1451            mov     a,#0x44
049B 120000    1452            lcall   ___fsmul
049E AA82      1453            mov     r2,dpl
04A0 AB83      1454            mov     r3,dph
04A2 ACF0      1455            mov     r4,b
04A4 FD        1456            mov     r5,a
04A5 E581      1457            mov     a,sp
04A7 24FC      1458            add     a,#0xfc
04A9 F581      1459            mov     sp,a
04AB C002      1460            push    ar2
04AD C003      1461            push    ar3
04AF C004      1462            push    ar4
04B1 C005      1463            push    ar5
04B3 7430      1464            mov     a,#__str_7
04B5 C0E0      1465            push    acc
04B7 74C0      1466            mov     a,#(__str_7 >> 8)
04B9 C0E0      1467            push    acc
04BB 7480      1468            mov     a,#0x80
04BD C0E0      1469            push    acc
04BF 120000    1470            lcall   _printf
04C2 E581      1471            mov     a,sp
04C4 24F9      1472            add     a,#0xf9
04C6 F581      1473            mov     sp,a
04C8           1474   ;        D:\clone\LAB5\lab5v1.c:348: waitms(1);
04C8 900001    1475            mov     dptr,#0x0001
04CB 120000    1476            lcall   _waitms
04CE           1477   ;        D:\clone\LAB5\lab5v1.c:351: v[0] = Volts_at_Pin(QFP32_MUX_P1_4);
04CE 75820A    1478            mov     dpl,#0x0A
04D1 120000    1479            lcall   _Volts_at_Pin
04D4 AA82      1480            mov     r2,dpl
04D6 AB83      1481            mov     r3,dph
04D8 ACF0      1482            mov     r4,b
04DA FD        1483            mov     r5,a
04DB 7870      1484            mov     r0,#_main_v_1_75
04DD A602      1485            mov     @r0,ar2
04DF 08        1486            inc     r0
04E0 A603      1487            mov     @r0,ar3
04E2 08        1488            inc     r0
04E3 A604      1489            mov     @r0,ar4
04E5 08        1490            inc     r0
04E6 A605      1491            mov     @r0,ar5
04E8           1492   ;        D:\clone\LAB5\lab5v1.c:352: v[1] = Volts_at_Pin(QFP32_MUX_P1_5);
04E8 75820B    1493            mov     dpl,#0x0B
04EB 120000    1494            lcall   _Volts_at_Pin
04EE 858230    1495            mov     _main_sloc0_1_0,dpl
04F1 858331    1496            mov     (_main_sloc0_1_0 + 1),dph
04F4 85F032    1497            mov     (_main_sloc0_1_0 + 2),b
04F7 F533      1498            mov     (_main_sloc0_1_0 + 3),a
04F9 7874      1499            mov     r0,#(_main_v_1_75 + 0x0004)
04FB A630      1500            mov     @r0,_main_sloc0_1_0
04FD 08        1501            inc     r0
04FE A631      1502            mov     @r0,(_main_sloc0_1_0 + 1)
0500 08        1503            inc     r0
0501 A632      1504            mov     @r0,(_main_sloc0_1_0 + 2)
0503 08        1505            inc     r0
0504 A633      1506            mov     @r0,(_main_sloc0_1_0 + 3)
0506           1507   ;        D:\clone\LAB5\lab5v1.c:354: printf ("\nV@P1_4=%7.5fV, V@P1_5=%7.5fV\r",v[0], v[1]);
0506 7870      1508            mov     r0,#_main_v_1_75
0508 8606      1509            mov     ar6,@r0
050A 08        1510            inc     r0
050B 8607      1511            mov     ar7,@r0
050D 08        1512            inc     r0
050E 8602      1513            mov     ar2,@r0
0510 08        1514            inc     r0
0511 8603      1515            mov     ar3,@r0
0513 C030      1516            push    _main_sloc0_1_0
0515 C031      1517            push    (_main_sloc0_1_0 + 1)
0517 C032      1518            push    (_main_sloc0_1_0 + 2)
0519 C033      1519            push    (_main_sloc0_1_0 + 3)
051B C006      1520            push    ar6
051D C007      1521            push    ar7
051F C002      1522            push    ar2
0521 C003      1523            push    ar3
0523 7470      1524            mov     a,#__str_8
0525 C0E0      1525            push    acc
0527 74C0      1526            mov     a,#(__str_8 >> 8)
0529 C0E0      1527            push    acc
052B 7480      1528            mov     a,#0x80
052D C0E0      1529            push    acc
052F 120000    1530            lcall   _printf
0532 E581      1531            mov     a,sp
0534 24F5      1532            add     a,#0xf5
0536 F581      1533            mov     sp,a
0538           1534   ;        D:\clone\LAB5\lab5v1.c:355: waitms(500);
0538 9001F4    1535            mov     dptr,#0x01F4
053B 120000    1536            lcall   _waitms
053E           1537   ;        D:\clone\LAB5\lab5v1.c:318: for (i = 0; i < 10; i++){
053E 05F0      1538            inc     _main_i_1_75
0540 E4        1539            clr     a
0541 B5F0B0    1540            cjne    a,_main_i_1_75,L017049?
0544 05F1      1541            inc     (_main_i_1_75 + 1)
0546           1542   L017049?:
0546 020000    1543            ljmp    L017022?
0549           1544            rseg R_CSEG
0549           1545   
0000           1546            rseg R_XINIT
0000           1547   
0000           1548            rseg R_CONST
0000           1549   __str_0:
0000 1B        1550            db 0x1B
0001 5B324A    1551            db '[2J'
0004 00        1552            db 0x00
0005           1553   __str_1:
0005 41444320  1554            db 'ADC test program'
     74657374
     2070726F
     6772616D
0015 0A        1555            db 0x0A
0016 46696C65  1556            db 'File: %s'
     3A202573
001E 0A        1557            db 0x0A
001F 436F6D70  1558            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002F 0A        1559            db 0x0A
0030 0A        1560            db 0x0A
0031 00        1561            db 0x00
0032           1562   __str_2:
0032 443A      1563            db 'D:'
0034 5C        1564            db 0x5C
0035 636C6F6E  1565            db 'clone'
     65
003A 5C        1566            db 0x5C
003B 4C414235  1567            db 'LAB5'
003F 5C        1568            db 0x5C
0040 6C616235  1569            db 'lab5v1.c'
     76312E63
0048 00        1570            db 0x00
0049           1571   __str_3:
0049 4D617220  1572            db 'Mar  5 2024'
     20352032
     303234
0054 00        1573            db 0x00
0055           1574   __str_4:
0055 31393A35  1575            db '19:50:55'
     303A3535
005D 00        1576            db 0x00
005E           1577   __str_5:
005E 76723A20  1578            db 'vr:     f:    Hz'
     20202020
     663A2020
     2020487A
006E 00        1579            db 0x00
006F           1580   __str_6:
006F 76743A20  1581            db 'vt:     pha:    '
     20202020
     7068613A
     20202020
007F 00        1582            db 0x00
0080           1583   __str_7:
0080 0D        1584            db 0x0D
0081 0A        1585            db 0x0A
0082 25332E32  1586            db '%3.2f'
     66
0087 00        1587            db 0x00
0088           1588   __str_8:
0088 0A        1589            db 0x0A
0089 56405031  1590            db 'V@P1_4=%7.5fV, V@P1_5=%7.5fV'
     5F343D25
     372E3566
     562C2056
     4050315F
     353D2537
     2E356656
00A5 0D        1591            db 0x0D
00A6 00        1592            db 0x00
00A7           1593   
0003           1594            CSEG
0003           1595   
0003           1596   end
