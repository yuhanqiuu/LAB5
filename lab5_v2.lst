0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Thu Mar 07 14:38:52 2024
0000              5   ;--------------------------------------------------------
                  5   $name lab5_v2
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _InitPinADC_PARM_2
0000             27            public _main
0000             28            public _Get_ADC
0000             29            public _Volts_at_Pin
0000             30            public _ADC_at_Pin
0000             31            public _InitPinADC
0000             32            public _waitms
0000             33            public _Timer3us
0000             34            public _InitADC
0000             35            public __c51_external_startup
0000             36            public _overflow_count
0000             37   ;--------------------------------------------------------
0000             38   ; Special Function Registers
0000             39   ;--------------------------------------------------------
0000             40   _ACC            DATA 0xe0
0000             41   _ADC0ASAH       DATA 0xb6
0000             42   _ADC0ASAL       DATA 0xb5
0000             43   _ADC0ASCF       DATA 0xa1
0000             44   _ADC0ASCT       DATA 0xc7
0000             45   _ADC0CF0        DATA 0xbc
0000             46   _ADC0CF1        DATA 0xb9
0000             47   _ADC0CF2        DATA 0xdf
0000             48   _ADC0CN0        DATA 0xe8
0000             49   _ADC0CN1        DATA 0xb2
0000             50   _ADC0CN2        DATA 0xb3
0000             51   _ADC0GTH        DATA 0xc4
0000             52   _ADC0GTL        DATA 0xc3
0000             53   _ADC0H          DATA 0xbe
0000             54   _ADC0L          DATA 0xbd
0000             55   _ADC0LTH        DATA 0xc6
0000             56   _ADC0LTL        DATA 0xc5
0000             57   _ADC0MX         DATA 0xbb
0000             58   _B              DATA 0xf0
0000             59   _CKCON0         DATA 0x8e
0000             60   _CKCON1         DATA 0xa6
0000             61   _CLEN0          DATA 0xc6
0000             62   _CLIE0          DATA 0xc7
0000             63   _CLIF0          DATA 0xe8
0000             64   _CLKSEL         DATA 0xa9
0000             65   _CLOUT0         DATA 0xd1
0000             66   _CLU0CF         DATA 0xb1
0000             67   _CLU0FN         DATA 0xaf
0000             68   _CLU0MX         DATA 0x84
0000             69   _CLU1CF         DATA 0xb3
0000             70   _CLU1FN         DATA 0xb2
0000             71   _CLU1MX         DATA 0x85
0000             72   _CLU2CF         DATA 0xb6
0000             73   _CLU2FN         DATA 0xb5
0000             74   _CLU2MX         DATA 0x91
0000             75   _CLU3CF         DATA 0xbf
0000             76   _CLU3FN         DATA 0xbe
0000             77   _CLU3MX         DATA 0xae
0000             78   _CMP0CN0        DATA 0x9b
0000             79   _CMP0CN1        DATA 0x99
0000             80   _CMP0MD         DATA 0x9d
0000             81   _CMP0MX         DATA 0x9f
0000             82   _CMP1CN0        DATA 0xbf
0000             83   _CMP1CN1        DATA 0xac
0000             84   _CMP1MD         DATA 0xab
0000             85   _CMP1MX         DATA 0xaa
0000             86   _CRC0CN0        DATA 0xce
0000             87   _CRC0CN1        DATA 0x86
0000             88   _CRC0CNT        DATA 0xd3
0000             89   _CRC0DAT        DATA 0xcb
0000             90   _CRC0FLIP       DATA 0xcf
0000             91   _CRC0IN         DATA 0xca
0000             92   _CRC0ST         DATA 0xd2
0000             93   _DAC0CF0        DATA 0x91
0000             94   _DAC0CF1        DATA 0x92
0000             95   _DAC0H          DATA 0x85
0000             96   _DAC0L          DATA 0x84
0000             97   _DAC1CF0        DATA 0x93
0000             98   _DAC1CF1        DATA 0x94
0000             99   _DAC1H          DATA 0x8a
0000            100   _DAC1L          DATA 0x89
0000            101   _DAC2CF0        DATA 0x95
0000            102   _DAC2CF1        DATA 0x96
0000            103   _DAC2H          DATA 0x8c
0000            104   _DAC2L          DATA 0x8b
0000            105   _DAC3CF0        DATA 0x9a
0000            106   _DAC3CF1        DATA 0x9c
0000            107   _DAC3H          DATA 0x8e
0000            108   _DAC3L          DATA 0x8d
0000            109   _DACGCF0        DATA 0x88
0000            110   _DACGCF1        DATA 0x98
0000            111   _DACGCF2        DATA 0xa2
0000            112   _DERIVID        DATA 0xad
0000            113   _DEVICEID       DATA 0xb5
0000            114   _DPH            DATA 0x83
0000            115   _DPL            DATA 0x82
0000            116   _EIE1           DATA 0xe6
0000            117   _EIE2           DATA 0xf3
0000            118   _EIP1           DATA 0xbb
0000            119   _EIP1H          DATA 0xee
0000            120   _EIP2           DATA 0xed
0000            121   _EIP2H          DATA 0xf6
0000            122   _EMI0CN         DATA 0xe7
0000            123   _FLKEY          DATA 0xb7
0000            124   _HFO0CAL        DATA 0xc7
0000            125   _HFO1CAL        DATA 0xd6
0000            126   _HFOCN          DATA 0xef
0000            127   _I2C0ADM        DATA 0xff
0000            128   _I2C0CN0        DATA 0xba
0000            129   _I2C0DIN        DATA 0xbc
0000            130   _I2C0DOUT       DATA 0xbb
0000            131   _I2C0FCN0       DATA 0xad
0000            132   _I2C0FCN1       DATA 0xab
0000            133   _I2C0FCT        DATA 0xf5
0000            134   _I2C0SLAD       DATA 0xbd
0000            135   _I2C0STAT       DATA 0xb9
0000            136   _IE             DATA 0xa8
0000            137   _IP             DATA 0xb8
0000            138   _IPH            DATA 0xf2
0000            139   _IT01CF         DATA 0xe4
0000            140   _LFO0CN         DATA 0xb1
0000            141   _P0             DATA 0x80
0000            142   _P0MASK         DATA 0xfe
0000            143   _P0MAT          DATA 0xfd
0000            144   _P0MDIN         DATA 0xf1
0000            145   _P0MDOUT        DATA 0xa4
0000            146   _P0SKIP         DATA 0xd4
0000            147   _P1             DATA 0x90
0000            148   _P1MASK         DATA 0xee
0000            149   _P1MAT          DATA 0xed
0000            150   _P1MDIN         DATA 0xf2
0000            151   _P1MDOUT        DATA 0xa5
0000            152   _P1SKIP         DATA 0xd5
0000            153   _P2             DATA 0xa0
0000            154   _P2MASK         DATA 0xfc
0000            155   _P2MAT          DATA 0xfb
0000            156   _P2MDIN         DATA 0xf3
0000            157   _P2MDOUT        DATA 0xa6
0000            158   _P2SKIP         DATA 0xcc
0000            159   _P3             DATA 0xb0
0000            160   _P3MDIN         DATA 0xf4
0000            161   _P3MDOUT        DATA 0x9c
0000            162   _PCA0CENT       DATA 0x9e
0000            163   _PCA0CLR        DATA 0x9c
0000            164   _PCA0CN0        DATA 0xd8
0000            165   _PCA0CPH0       DATA 0xfc
0000            166   _PCA0CPH1       DATA 0xea
0000            167   _PCA0CPH2       DATA 0xec
0000            168   _PCA0CPH3       DATA 0xf5
0000            169   _PCA0CPH4       DATA 0x85
0000            170   _PCA0CPH5       DATA 0xde
0000            171   _PCA0CPL0       DATA 0xfb
0000            172   _PCA0CPL1       DATA 0xe9
0000            173   _PCA0CPL2       DATA 0xeb
0000            174   _PCA0CPL3       DATA 0xf4
0000            175   _PCA0CPL4       DATA 0x84
0000            176   _PCA0CPL5       DATA 0xdd
0000            177   _PCA0CPM0       DATA 0xda
0000            178   _PCA0CPM1       DATA 0xdb
0000            179   _PCA0CPM2       DATA 0xdc
0000            180   _PCA0CPM3       DATA 0xae
0000            181   _PCA0CPM4       DATA 0xaf
0000            182   _PCA0CPM5       DATA 0xcc
0000            183   _PCA0H          DATA 0xfa
0000            184   _PCA0L          DATA 0xf9
0000            185   _PCA0MD         DATA 0xd9
0000            186   _PCA0POL        DATA 0x96
0000            187   _PCA0PWM        DATA 0xf7
0000            188   _PCON0          DATA 0x87
0000            189   _PCON1          DATA 0xcd
0000            190   _PFE0CN         DATA 0xc1
0000            191   _PRTDRV         DATA 0xf6
0000            192   _PSCTL          DATA 0x8f
0000            193   _PSTAT0         DATA 0xaa
0000            194   _PSW            DATA 0xd0
0000            195   _REF0CN         DATA 0xd1
0000            196   _REG0CN         DATA 0xc9
0000            197   _REVID          DATA 0xb6
0000            198   _RSTSRC         DATA 0xef
0000            199   _SBCON1         DATA 0x94
0000            200   _SBRLH1         DATA 0x96
0000            201   _SBRLL1         DATA 0x95
0000            202   _SBUF           DATA 0x99
0000            203   _SBUF0          DATA 0x99
0000            204   _SBUF1          DATA 0x92
0000            205   _SCON           DATA 0x98
0000            206   _SCON0          DATA 0x98
0000            207   _SCON1          DATA 0xc8
0000            208   _SFRPAGE        DATA 0xa7
0000            209   _SFRPGCN        DATA 0xbc
0000            210   _SFRSTACK       DATA 0xd7
0000            211   _SMB0ADM        DATA 0xd6
0000            212   _SMB0ADR        DATA 0xd7
0000            213   _SMB0CF         DATA 0xc1
0000            214   _SMB0CN0        DATA 0xc0
0000            215   _SMB0DAT        DATA 0xc2
0000            216   _SMB0FCN0       DATA 0xc3
0000            217   _SMB0FCN1       DATA 0xc4
0000            218   _SMB0FCT        DATA 0xef
0000            219   _SMB0RXLN       DATA 0xc5
0000            220   _SMB0TC         DATA 0xac
0000            221   _SMOD1          DATA 0x93
0000            222   _SP             DATA 0x81
0000            223   _SPI0CFG        DATA 0xa1
0000            224   _SPI0CKR        DATA 0xa2
0000            225   _SPI0CN0        DATA 0xf8
0000            226   _SPI0DAT        DATA 0xa3
0000            227   _SPI0FCN0       DATA 0x9a
0000            228   _SPI0FCN1       DATA 0x9b
0000            229   _SPI0FCT        DATA 0xf7
0000            230   _SPI0PCF        DATA 0xdf
0000            231   _TCON           DATA 0x88
0000            232   _TH0            DATA 0x8c
0000            233   _TH1            DATA 0x8d
0000            234   _TL0            DATA 0x8a
0000            235   _TL1            DATA 0x8b
0000            236   _TMOD           DATA 0x89
0000            237   _TMR2CN0        DATA 0xc8
0000            238   _TMR2CN1        DATA 0xfd
0000            239   _TMR2H          DATA 0xcf
0000            240   _TMR2L          DATA 0xce
0000            241   _TMR2RLH        DATA 0xcb
0000            242   _TMR2RLL        DATA 0xca
0000            243   _TMR3CN0        DATA 0x91
0000            244   _TMR3CN1        DATA 0xfe
0000            245   _TMR3H          DATA 0x95
0000            246   _TMR3L          DATA 0x94
0000            247   _TMR3RLH        DATA 0x93
0000            248   _TMR3RLL        DATA 0x92
0000            249   _TMR4CN0        DATA 0x98
0000            250   _TMR4CN1        DATA 0xff
0000            251   _TMR4H          DATA 0xa5
0000            252   _TMR4L          DATA 0xa4
0000            253   _TMR4RLH        DATA 0xa3
0000            254   _TMR4RLL        DATA 0xa2
0000            255   _TMR5CN0        DATA 0xc0
0000            256   _TMR5CN1        DATA 0xf1
0000            257   _TMR5H          DATA 0xd5
0000            258   _TMR5L          DATA 0xd4
0000            259   _TMR5RLH        DATA 0xd3
0000            260   _TMR5RLL        DATA 0xd2
0000            261   _UART0PCF       DATA 0xd9
0000            262   _UART1FCN0      DATA 0x9d
0000            263   _UART1FCN1      DATA 0xd8
0000            264   _UART1FCT       DATA 0xfa
0000            265   _UART1LIN       DATA 0x9e
0000            266   _UART1PCF       DATA 0xda
0000            267   _VDM0CN         DATA 0xff
0000            268   _WDTCN          DATA 0x97
0000            269   _XBR0           DATA 0xe1
0000            270   _XBR1           DATA 0xe2
0000            271   _XBR2           DATA 0xe3
0000            272   _XOSC0CN        DATA 0x86
0000            273   _DPTR           DATA 0x8382
0000            274   _TMR2RL         DATA 0xcbca
0000            275   _TMR3RL         DATA 0x9392
0000            276   _TMR4RL         DATA 0xa3a2
0000            277   _TMR5RL         DATA 0xd3d2
0000            278   _TMR0           DATA 0x8c8a
0000            279   _TMR1           DATA 0x8d8b
0000            280   _TMR2           DATA 0xcfce
0000            281   _TMR3           DATA 0x9594
0000            282   _TMR4           DATA 0xa5a4
0000            283   _TMR5           DATA 0xd5d4
0000            284   _SBRL1          DATA 0x9695
0000            285   _PCA0           DATA 0xfaf9
0000            286   _PCA0CP0        DATA 0xfcfb
0000            287   _PCA0CP1        DATA 0xeae9
0000            288   _PCA0CP2        DATA 0xeceb
0000            289   _PCA0CP3        DATA 0xf5f4
0000            290   _PCA0CP4        DATA 0x8584
0000            291   _PCA0CP5        DATA 0xdedd
0000            292   _ADC0ASA        DATA 0xb6b5
0000            293   _ADC0GT         DATA 0xc4c3
0000            294   _ADC0           DATA 0xbebd
0000            295   _ADC0LT         DATA 0xc6c5
0000            296   _DAC0           DATA 0x8584
0000            297   _DAC1           DATA 0x8a89
0000            298   _DAC2           DATA 0x8c8b
0000            299   _DAC3           DATA 0x8e8d
0000            300   ;--------------------------------------------------------
0000            301   ; special function bits
0000            302   ;--------------------------------------------------------
0000            303   _ACC_0          BIT 0xe0
0000            304   _ACC_1          BIT 0xe1
0000            305   _ACC_2          BIT 0xe2
0000            306   _ACC_3          BIT 0xe3
0000            307   _ACC_4          BIT 0xe4
0000            308   _ACC_5          BIT 0xe5
0000            309   _ACC_6          BIT 0xe6
0000            310   _ACC_7          BIT 0xe7
0000            311   _TEMPE          BIT 0xe8
0000            312   _ADGN0          BIT 0xe9
0000            313   _ADGN1          BIT 0xea
0000            314   _ADWINT         BIT 0xeb
0000            315   _ADBUSY         BIT 0xec
0000            316   _ADINT          BIT 0xed
0000            317   _IPOEN          BIT 0xee
0000            318   _ADEN           BIT 0xef
0000            319   _B_0            BIT 0xf0
0000            320   _B_1            BIT 0xf1
0000            321   _B_2            BIT 0xf2
0000            322   _B_3            BIT 0xf3
0000            323   _B_4            BIT 0xf4
0000            324   _B_5            BIT 0xf5
0000            325   _B_6            BIT 0xf6
0000            326   _B_7            BIT 0xf7
0000            327   _C0FIF          BIT 0xe8
0000            328   _C0RIF          BIT 0xe9
0000            329   _C1FIF          BIT 0xea
0000            330   _C1RIF          BIT 0xeb
0000            331   _C2FIF          BIT 0xec
0000            332   _C2RIF          BIT 0xed
0000            333   _C3FIF          BIT 0xee
0000            334   _C3RIF          BIT 0xef
0000            335   _D1SRC0         BIT 0x88
0000            336   _D1SRC1         BIT 0x89
0000            337   _D1AMEN         BIT 0x8a
0000            338   _D01REFSL       BIT 0x8b
0000            339   _D3SRC0         BIT 0x8c
0000            340   _D3SRC1         BIT 0x8d
0000            341   _D3AMEN         BIT 0x8e
0000            342   _D23REFSL       BIT 0x8f
0000            343   _D0UDIS         BIT 0x98
0000            344   _D1UDIS         BIT 0x99
0000            345   _D2UDIS         BIT 0x9a
0000            346   _D3UDIS         BIT 0x9b
0000            347   _EX0            BIT 0xa8
0000            348   _ET0            BIT 0xa9
0000            349   _EX1            BIT 0xaa
0000            350   _ET1            BIT 0xab
0000            351   _ES0            BIT 0xac
0000            352   _ET2            BIT 0xad
0000            353   _ESPI0          BIT 0xae
0000            354   _EA             BIT 0xaf
0000            355   _PX0            BIT 0xb8
0000            356   _PT0            BIT 0xb9
0000            357   _PX1            BIT 0xba
0000            358   _PT1            BIT 0xbb
0000            359   _PS0            BIT 0xbc
0000            360   _PT2            BIT 0xbd
0000            361   _PSPI0          BIT 0xbe
0000            362   _P0_0           BIT 0x80
0000            363   _P0_1           BIT 0x81
0000            364   _P0_2           BIT 0x82
0000            365   _P0_3           BIT 0x83
0000            366   _P0_4           BIT 0x84
0000            367   _P0_5           BIT 0x85
0000            368   _P0_6           BIT 0x86
0000            369   _P0_7           BIT 0x87
0000            370   _P1_0           BIT 0x90
0000            371   _P1_1           BIT 0x91
0000            372   _P1_2           BIT 0x92
0000            373   _P1_3           BIT 0x93
0000            374   _P1_4           BIT 0x94
0000            375   _P1_5           BIT 0x95
0000            376   _P1_6           BIT 0x96
0000            377   _P1_7           BIT 0x97
0000            378   _P2_0           BIT 0xa0
0000            379   _P2_1           BIT 0xa1
0000            380   _P2_2           BIT 0xa2
0000            381   _P2_3           BIT 0xa3
0000            382   _P2_4           BIT 0xa4
0000            383   _P2_5           BIT 0xa5
0000            384   _P2_6           BIT 0xa6
0000            385   _P3_0           BIT 0xb0
0000            386   _P3_1           BIT 0xb1
0000            387   _P3_2           BIT 0xb2
0000            388   _P3_3           BIT 0xb3
0000            389   _P3_4           BIT 0xb4
0000            390   _P3_7           BIT 0xb7
0000            391   _CCF0           BIT 0xd8
0000            392   _CCF1           BIT 0xd9
0000            393   _CCF2           BIT 0xda
0000            394   _CCF3           BIT 0xdb
0000            395   _CCF4           BIT 0xdc
0000            396   _CCF5           BIT 0xdd
0000            397   _CR             BIT 0xde
0000            398   _CF             BIT 0xdf
0000            399   _PARITY         BIT 0xd0
0000            400   _F1             BIT 0xd1
0000            401   _OV             BIT 0xd2
0000            402   _RS0            BIT 0xd3
0000            403   _RS1            BIT 0xd4
0000            404   _F0             BIT 0xd5
0000            405   _AC             BIT 0xd6
0000            406   _CY             BIT 0xd7
0000            407   _RI             BIT 0x98
0000            408   _TI             BIT 0x99
0000            409   _RB8            BIT 0x9a
0000            410   _TB8            BIT 0x9b
0000            411   _REN            BIT 0x9c
0000            412   _CE             BIT 0x9d
0000            413   _SMODE          BIT 0x9e
0000            414   _RI1            BIT 0xc8
0000            415   _TI1            BIT 0xc9
0000            416   _RBX1           BIT 0xca
0000            417   _TBX1           BIT 0xcb
0000            418   _REN1           BIT 0xcc
0000            419   _PERR1          BIT 0xcd
0000            420   _OVR1           BIT 0xce
0000            421   _SI             BIT 0xc0
0000            422   _ACK            BIT 0xc1
0000            423   _ARBLOST        BIT 0xc2
0000            424   _ACKRQ          BIT 0xc3
0000            425   _STO            BIT 0xc4
0000            426   _STA            BIT 0xc5
0000            427   _TXMODE         BIT 0xc6
0000            428   _MASTER         BIT 0xc7
0000            429   _SPIEN          BIT 0xf8
0000            430   _TXNF           BIT 0xf9
0000            431   _NSSMD0         BIT 0xfa
0000            432   _NSSMD1         BIT 0xfb
0000            433   _RXOVRN         BIT 0xfc
0000            434   _MODF           BIT 0xfd
0000            435   _WCOL           BIT 0xfe
0000            436   _SPIF           BIT 0xff
0000            437   _IT0            BIT 0x88
0000            438   _IE0            BIT 0x89
0000            439   _IT1            BIT 0x8a
0000            440   _IE1            BIT 0x8b
0000            441   _TR0            BIT 0x8c
0000            442   _TF0            BIT 0x8d
0000            443   _TR1            BIT 0x8e
0000            444   _TF1            BIT 0x8f
0000            445   _T2XCLK0        BIT 0xc8
0000            446   _T2XCLK1        BIT 0xc9
0000            447   _TR2            BIT 0xca
0000            448   _T2SPLIT        BIT 0xcb
0000            449   _TF2CEN         BIT 0xcc
0000            450   _TF2LEN         BIT 0xcd
0000            451   _TF2L           BIT 0xce
0000            452   _TF2H           BIT 0xcf
0000            453   _T4XCLK0        BIT 0x98
0000            454   _T4XCLK1        BIT 0x99
0000            455   _TR4            BIT 0x9a
0000            456   _T4SPLIT        BIT 0x9b
0000            457   _TF4CEN         BIT 0x9c
0000            458   _TF4LEN         BIT 0x9d
0000            459   _TF4L           BIT 0x9e
0000            460   _TF4H           BIT 0x9f
0000            461   _T5XCLK0        BIT 0xc0
0000            462   _T5XCLK1        BIT 0xc1
0000            463   _TR5            BIT 0xc2
0000            464   _T5SPLIT        BIT 0xc3
0000            465   _TF5CEN         BIT 0xc4
0000            466   _TF5LEN         BIT 0xc5
0000            467   _TF5L           BIT 0xc6
0000            468   _TF5H           BIT 0xc7
0000            469   _RIE            BIT 0xd8
0000            470   _RXTO0          BIT 0xd9
0000            471   _RXTO1          BIT 0xda
0000            472   _RFRQ           BIT 0xdb
0000            473   _TIE            BIT 0xdc
0000            474   _TXHOLD         BIT 0xdd
0000            475   _TXNF1          BIT 0xde
0000            476   _TFRQ           BIT 0xdf
0000            477   ;--------------------------------------------------------
0000            478   ; overlayable register banks
0000            479   ;--------------------------------------------------------
0000            480            rbank0 segment data overlay
0000            481   ;--------------------------------------------------------
0000            482   ; internal ram data
0000            483   ;--------------------------------------------------------
0000            484            rseg R_DSEG
0000            485   _overflow_count:
0000            486            ds 1
0001            487   _main_v_1_61:
0001            488            ds 8
0009            489   ;--------------------------------------------------------
0009            490   ; overlayable items in internal ram 
0009            491   ;--------------------------------------------------------
0000            492            rseg    R_OSEG
0000            493            rseg    R_OSEG
0000            494   _InitPinADC_PARM_2:
0000            495            ds 1
0001            496            rseg    R_OSEG
0001            497   ;--------------------------------------------------------
0001            498   ; indirectly addressable internal ram data
0001            499   ;--------------------------------------------------------
0000            500            rseg R_ISEG
0000            501   ;--------------------------------------------------------
0000            502   ; absolute internal ram data
0000            503   ;--------------------------------------------------------
0000            504            DSEG
0000            505   ;--------------------------------------------------------
0000            506   ; bit data
0000            507   ;--------------------------------------------------------
0000            508            rseg R_BSEG
0000            509   ;--------------------------------------------------------
0000            510   ; paged external ram data
0000            511   ;--------------------------------------------------------
0000            512            rseg R_PSEG
0000            513   ;--------------------------------------------------------
0000            514   ; external ram data
0000            515   ;--------------------------------------------------------
0000            516            rseg R_XSEG
0000            517   ;--------------------------------------------------------
0000            518   ; absolute external ram data
0000            519   ;--------------------------------------------------------
0000            520            XSEG
0000            521   ;--------------------------------------------------------
0000            522   ; external initialized ram data
0000            523   ;--------------------------------------------------------
0000            524            rseg R_IXSEG
0000            525            rseg R_HOME
0000            526            rseg R_GSINIT
0000            527            rseg R_CSEG
0000            528   ;--------------------------------------------------------
0000            529   ; Reset entry point and interrupt vectors
0000            530   ;--------------------------------------------------------
0000            531            CSEG at 0x0000
0000 020000     532            ljmp    _crt0
0003            533   ;--------------------------------------------------------
0003            534   ; global & static initialisations
0003            535   ;--------------------------------------------------------
0000            536            rseg R_HOME
0000            537            rseg R_GSINIT
0000            538            rseg R_GSINIT
0000            539   ;--------------------------------------------------------
0000            540   ; data variables initialization
0000            541   ;--------------------------------------------------------
0000            542            rseg R_DINIT
0000            543            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            544   ;--------------------------------------------------------
0000            545   ; code
0000            546   ;--------------------------------------------------------
0000            547            rseg R_CSEG
0000            548   ;------------------------------------------------------------
0000            549   ;Allocation info for local variables in function '_c51_external_startup'
0000            550   ;------------------------------------------------------------
0000            551   ;------------------------------------------------------------
0000            552   ;        D:\clone\LAB5\lab5_v2.c:19: char _c51_external_startup (void)
0000            553   ;        -----------------------------------------
0000            554   ;         function _c51_external_startup
0000            555   ;        -----------------------------------------
0000            556   __c51_external_startup:
0000            557            using   0
0000            558   ;        D:\clone\LAB5\lab5_v2.c:22: SFRPAGE = 0x00;
0000 75A700     559            mov     _SFRPAGE,#0x00
0003            560   ;        D:\clone\LAB5\lab5_v2.c:23: WDTCN = 0xDE; //First key
0003 7597DE     561            mov     _WDTCN,#0xDE
0006            562   ;        D:\clone\LAB5\lab5_v2.c:24: WDTCN = 0xAD; //Second key
0006 7597AD     563            mov     _WDTCN,#0xAD
0009            564   ;        D:\clone\LAB5\lab5_v2.c:26: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     565            mov     _VDM0CN,#0x80
000C            566   ;        D:\clone\LAB5\lab5_v2.c:27: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     567            mov     _RSTSRC,#0x06
000F            568   ;        D:\clone\LAB5\lab5_v2.c:34: SFRPAGE = 0x10;
000F 75A710     569            mov     _SFRPAGE,#0x10
0012            570   ;        D:\clone\LAB5\lab5_v2.c:35: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     571            mov     _PFE0CN,#0x20
0015            572   ;        D:\clone\LAB5\lab5_v2.c:36: SFRPAGE = 0x00;
0015 75A700     573            mov     _SFRPAGE,#0x00
0018            574   ;        D:\clone\LAB5\lab5_v2.c:57: CLKSEL = 0x00;
0018 75A900     575            mov     _CLKSEL,#0x00
001B            576   ;        D:\clone\LAB5\lab5_v2.c:58: CLKSEL = 0x00;
001B 75A900     577            mov     _CLKSEL,#0x00
001E            578   ;        D:\clone\LAB5\lab5_v2.c:59: while ((CLKSEL & 0x80) == 0);
001E            579   L002001?:
001E E5A9       580            mov     a,_CLKSEL
0020 30E7D0     581            jnb     acc.7,L002001?
0023            582   ;        D:\clone\LAB5\lab5_v2.c:60: CLKSEL = 0x03;
0023 75A903     583            mov     _CLKSEL,#0x03
0026            584   ;        D:\clone\LAB5\lab5_v2.c:61: CLKSEL = 0x03;
0026 75A903     585            mov     _CLKSEL,#0x03
0029            586   ;        D:\clone\LAB5\lab5_v2.c:62: while ((CLKSEL & 0x80) == 0);
0029            587   L002004?:
0029 E5A9       588            mov     a,_CLKSEL
002B 30E750     589            jnb     acc.7,L002004?
002E            590   ;        D:\clone\LAB5\lab5_v2.c:67: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     591            orl     _P0MDOUT,#0x10
0031            592   ;        D:\clone\LAB5\lab5_v2.c:68: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     593            mov     _XBR0,#0x01
0034            594   ;        D:\clone\LAB5\lab5_v2.c:69: XBR1     = 0X00;
0034 75E200     595            mov     _XBR1,#0x00
0037            596   ;        D:\clone\LAB5\lab5_v2.c:70: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     597            mov     _XBR2,#0x40
003A            598   ;        D:\clone\LAB5\lab5_v2.c:76: SCON0 = 0x10;
003A 759810     599            mov     _SCON0,#0x10
003D            600   ;        D:\clone\LAB5\lab5_v2.c:77: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     601            mov     _CKCON0,_CKCON0
0040            602   ;        D:\clone\LAB5\lab5_v2.c:79: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     603            mov     _TH1,#0xE6
0043            604   ;        D:\clone\LAB5\lab5_v2.c:80: TL1 = TH1;      // Init Timer1
0043 858D8B     605            mov     _TL1,_TH1
0046            606   ;        D:\clone\LAB5\lab5_v2.c:81: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     607            anl     _TMOD,#0x0F
0049            608   ;        D:\clone\LAB5\lab5_v2.c:82: TMOD |=  0x20;                       
0049 438920     609            orl     _TMOD,#0x20
004C            610   ;        D:\clone\LAB5\lab5_v2.c:83: TR1 = 1; // START Timer1
004C D28E       611            setb    _TR1
004E            612   ;        D:\clone\LAB5\lab5_v2.c:84: TI = 1;  // Indicate TX0 ready
004E D299       613            setb    _TI
0050            614   ;        D:\clone\LAB5\lab5_v2.c:86: return 0;
0050 758200     615            mov     dpl,#0x00
0053 22         616            ret
0054            617   ;------------------------------------------------------------
0054            618   ;Allocation info for local variables in function 'InitADC'
0054            619   ;------------------------------------------------------------
0054            620   ;------------------------------------------------------------
0054            621   ;        D:\clone\LAB5\lab5_v2.c:89: void InitADC (void)
0054            622   ;        -----------------------------------------
0054            623   ;         function InitADC
0054            624   ;        -----------------------------------------
0054            625   _InitADC:
0054            626   ;        D:\clone\LAB5\lab5_v2.c:91: SFRPAGE = 0x00;
0054 75A700     627            mov     _SFRPAGE,#0x00
0057            628   ;        D:\clone\LAB5\lab5_v2.c:92: ADEN=0; // Disable ADC
0057 C2EF       629            clr     _ADEN
0059            630   ;        D:\clone\LAB5\lab5_v2.c:97: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0059 75B280     631            mov     _ADC0CN1,#0x80
005C            632   ;        D:\clone\LAB5\lab5_v2.c:101: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
005C 75BC20     633            mov     _ADC0CF0,#0x20
005F            634   ;        D:\clone\LAB5\lab5_v2.c:105: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005F 75B91E     635            mov     _ADC0CF1,#0x1E
0062            636   ;        D:\clone\LAB5\lab5_v2.c:114: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
0062 75E800     637            mov     _ADC0CN0,#0x00
0065            638   ;        D:\clone\LAB5\lab5_v2.c:119: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0065 75DF3F     639            mov     _ADC0CF2,#0x3F
0068            640   ;        D:\clone\LAB5\lab5_v2.c:123: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0068 75B300     641            mov     _ADC0CN2,#0x00
006B            642   ;        D:\clone\LAB5\lab5_v2.c:125: ADEN=1; // Enable ADC
006B D2EF       643            setb    _ADEN
006D 22         644            ret
006E            645   ;------------------------------------------------------------
006E            646   ;Allocation info for local variables in function 'Timer3us'
006E            647   ;------------------------------------------------------------
006E            648   ;us                        Allocated to registers r2 
006E            649   ;i                         Allocated to registers r3 
006E            650   ;------------------------------------------------------------
006E            651   ;        D:\clone\LAB5\lab5_v2.c:129: void Timer3us(unsigned char us)
006E            652   ;        -----------------------------------------
006E            653   ;         function Timer3us
006E            654   ;        -----------------------------------------
006E            655   _Timer3us:
006E AA82       656            mov     r2,dpl
0070            657   ;        D:\clone\LAB5\lab5_v2.c:134: CKCON0|=0b_0100_0000;
0070 438E40     658            orl     _CKCON0,#0x40
0073            659   ;        D:\clone\LAB5\lab5_v2.c:136: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0073 7592B8     660            mov     _TMR3RL,#0xB8
0076 7593FF     661            mov     (_TMR3RL >> 8),#0xFF
0079            662   ;        D:\clone\LAB5\lab5_v2.c:137: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0079 859294     663            mov     _TMR3,_TMR3RL
007C 859395     664            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007F            665   ;        D:\clone\LAB5\lab5_v2.c:139: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007F 759104     666            mov     _TMR3CN0,#0x04
0082            667   ;        D:\clone\LAB5\lab5_v2.c:140: for (i = 0; i < us; i++)       // Count <us> overflows
0082 7B00       668            mov     r3,#0x00
0084            669   L004004?:
0084 C3         670            clr     c
0085 EB         671            mov     a,r3
0086 9A         672            subb    a,r2
0087 5000       673            jnc     L004007?
0089            674   ;        D:\clone\LAB5\lab5_v2.c:142: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0089            675   L004001?:
0089 E591       676            mov     a,_TMR3CN0
008B 30E750     677            jnb     acc.7,L004001?
008E            678   ;        D:\clone\LAB5\lab5_v2.c:143: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008E 53917F     679            anl     _TMR3CN0,#0x7F
0091            680   ;        D:\clone\LAB5\lab5_v2.c:140: for (i = 0; i < us; i++)       // Count <us> overflows
0091 0B         681            inc     r3
0092 8000       682            sjmp    L004004?
0094            683   L004007?:
0094            684   ;        D:\clone\LAB5\lab5_v2.c:145: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0094 759100     685            mov     _TMR3CN0,#0x00
0097 22         686            ret
0098            687   ;------------------------------------------------------------
0098            688   ;Allocation info for local variables in function 'waitms'
0098            689   ;------------------------------------------------------------
0098            690   ;ms                        Allocated to registers r2 r3 
0098            691   ;j                         Allocated to registers r4 r5 
0098            692   ;k                         Allocated to registers r6 
0098            693   ;------------------------------------------------------------
0098            694   ;        D:\clone\LAB5\lab5_v2.c:148: void waitms (unsigned int ms)
0098            695   ;        -----------------------------------------
0098            696   ;         function waitms
0098            697   ;        -----------------------------------------
0098            698   _waitms:
0098 AA82       699            mov     r2,dpl
009A AB83       700            mov     r3,dph
009C            701   ;        D:\clone\LAB5\lab5_v2.c:152: for(j=0; j<ms; j++)
009C 7C00       702            mov     r4,#0x00
009E 7D00       703            mov     r5,#0x00
00A0            704   L005005?:
00A0 C3         705            clr     c
00A1 EC         706            mov     a,r4
00A2 9A         707            subb    a,r2
00A3 ED         708            mov     a,r5
00A4 9B         709            subb    a,r3
00A5 5000       710            jnc     L005009?
00A7            711   ;        D:\clone\LAB5\lab5_v2.c:153: for (k=0; k<4; k++) Timer3us(250);
00A7 7E00       712            mov     r6,#0x00
00A9            713   L005001?:
00A9 BE0490     714            cjne    r6,#0x04,L005018?
00AC            715   L005018?:
00AC 5000       716            jnc     L005007?
00AE 7582FA     717            mov     dpl,#0xFA
00B1 C002       718            push    ar2
00B3 C003       719            push    ar3
00B5 C004       720            push    ar4
00B7 C005       721            push    ar5
00B9 C006       722            push    ar6
00BB 120000     723            lcall   _Timer3us
00BE D006       724            pop     ar6
00C0 D005       725            pop     ar5
00C2 D004       726            pop     ar4
00C4 D003       727            pop     ar3
00C6 D002       728            pop     ar2
00C8 0E         729            inc     r6
00C9 8000       730            sjmp    L005001?
00CB            731   L005007?:
00CB            732   ;        D:\clone\LAB5\lab5_v2.c:152: for(j=0; j<ms; j++)
00CB 0C         733            inc     r4
00CC BC00D0     734            cjne    r4,#0x00,L005005?
00CF 0D         735            inc     r5
00D0 8000       736            sjmp    L005005?
00D2            737   L005009?:
00D2 22         738            ret
00D3            739   ;------------------------------------------------------------
00D3            740   ;Allocation info for local variables in function 'InitPinADC'
00D3            741   ;------------------------------------------------------------
00D3            742   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00D3            743   ;portno                    Allocated to registers r2 
00D3            744   ;mask                      Allocated to registers r3 
00D3            745   ;------------------------------------------------------------
00D3            746   ;        D:\clone\LAB5\lab5_v2.c:158: void InitPinADC (unsigned char portno, unsigned char pinno)
00D3            747   ;        -----------------------------------------
00D3            748   ;         function InitPinADC
00D3            749   ;        -----------------------------------------
00D3            750   _InitPinADC:
00D3 AA82       751            mov     r2,dpl
00D5            752   ;        D:\clone\LAB5\lab5_v2.c:162: mask=1<<pinno;
00D5 85C0F0     753            mov     b,_InitPinADC_PARM_2
00D8 05F0       754            inc     b
00DA 7401       755            mov     a,#0x01
00DC 8000       756            sjmp    L006013?
00DE            757   L006011?:
00DE 25E0       758            add     a,acc
00E0            759   L006013?:
00E0 D5F090     760            djnz    b,L006011?
00E3 FB         761            mov     r3,a
00E4            762   ;        D:\clone\LAB5\lab5_v2.c:164: SFRPAGE = 0x20;
00E4 75A720     763            mov     _SFRPAGE,#0x20
00E7            764   ;        D:\clone\LAB5\lab5_v2.c:165: switch (portno)
00E7 BA00D0     765            cjne    r2,#0x00,L006014?
00EA 8000       766            sjmp    L006001?
00EC            767   L006014?:
00EC BA0150     768            cjne    r2,#0x01,L006015?
00EF 8000       769            sjmp    L006002?
00F1            770   L006015?:
00F1            771   ;        D:\clone\LAB5\lab5_v2.c:167: case 0:
00F1 BA02D0     772            cjne    r2,#0x02,L006005?
00F4 8000       773            sjmp    L006003?
00F6            774   L006001?:
00F6            775   ;        D:\clone\LAB5\lab5_v2.c:168: P0MDIN &= (~mask); // Set pin as analog input
00F6 EB         776            mov     a,r3
00F7 F4         777            cpl     a
00F8 FA         778            mov     r2,a
00F9 52F1       779            anl     _P0MDIN,a
00FB            780   ;        D:\clone\LAB5\lab5_v2.c:169: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00FB EB         781            mov     a,r3
00FC 42D4       782            orl     _P0SKIP,a
00FE            783   ;        D:\clone\LAB5\lab5_v2.c:170: break;
00FE            784   ;        D:\clone\LAB5\lab5_v2.c:171: case 1:
00FE 8000       785            sjmp    L006005?
0100            786   L006002?:
0100            787   ;        D:\clone\LAB5\lab5_v2.c:172: P1MDIN &= (~mask); // Set pin as analog input
0100 EB         788            mov     a,r3
0101 F4         789            cpl     a
0102 FA         790            mov     r2,a
0103 52F2       791            anl     _P1MDIN,a
0105            792   ;        D:\clone\LAB5\lab5_v2.c:173: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0105 EB         793            mov     a,r3
0106 42D5       794            orl     _P1SKIP,a
0108            795   ;        D:\clone\LAB5\lab5_v2.c:174: break;
0108            796   ;        D:\clone\LAB5\lab5_v2.c:175: case 2:
0108 8000       797            sjmp    L006005?
010A            798   L006003?:
010A            799   ;        D:\clone\LAB5\lab5_v2.c:176: P2MDIN &= (~mask); // Set pin as analog input
010A EB         800            mov     a,r3
010B F4         801            cpl     a
010C FA         802            mov     r2,a
010D 52F3       803            anl     _P2MDIN,a
010F            804   ;        D:\clone\LAB5\lab5_v2.c:177: P2SKIP |= mask; // Skip Crossbar decoding for this pin
010F EB         805            mov     a,r3
0110 42CC       806            orl     _P2SKIP,a
0112            807   ;        D:\clone\LAB5\lab5_v2.c:181: }
0112            808   L006005?:
0112            809   ;        D:\clone\LAB5\lab5_v2.c:182: SFRPAGE = 0x00;
0112 75A700     810            mov     _SFRPAGE,#0x00
0115 22         811            ret
0116            812   ;------------------------------------------------------------
0116            813   ;Allocation info for local variables in function 'ADC_at_Pin'
0116            814   ;------------------------------------------------------------
0116            815   ;pin                       Allocated to registers 
0116            816   ;------------------------------------------------------------
0116            817   ;        D:\clone\LAB5\lab5_v2.c:186: unsigned int ADC_at_Pin(unsigned char pin)
0116            818   ;        -----------------------------------------
0116            819   ;         function ADC_at_Pin
0116            820   ;        -----------------------------------------
0116            821   _ADC_at_Pin:
0116 8582BB     822            mov     _ADC0MX,dpl
0119            823   ;        D:\clone\LAB5\lab5_v2.c:189: ADINT = 0;
0119 C2ED       824            clr     _ADINT
011B            825   ;        D:\clone\LAB5\lab5_v2.c:190: ADBUSY = 1;     // Convert voltage at the pin
011B D2EC       826            setb    _ADBUSY
011D            827   ;        D:\clone\LAB5\lab5_v2.c:191: while (!ADINT); // Wait for conversion to complete
011D            828   L007001?:
011D 30ED50     829            jnb     _ADINT,L007001?
0120            830   ;        D:\clone\LAB5\lab5_v2.c:192: return (ADC0);
0120 85BD82     831            mov     dpl,_ADC0
0123 85BE83     832            mov     dph,(_ADC0 >> 8)
0126 22         833            ret
0127            834   ;------------------------------------------------------------
0127            835   ;Allocation info for local variables in function 'Volts_at_Pin'
0127            836   ;------------------------------------------------------------
0127            837   ;pin                       Allocated to registers r2 
0127            838   ;------------------------------------------------------------
0127            839   ;        D:\clone\LAB5\lab5_v2.c:195: float Volts_at_Pin(unsigned char pin)
0127            840   ;        -----------------------------------------
0127            841   ;         function Volts_at_Pin
0127            842   ;        -----------------------------------------
0127            843   _Volts_at_Pin:
0127            844   ;        D:\clone\LAB5\lab5_v2.c:197: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0127 120000     845            lcall   _ADC_at_Pin
012A 120000     846            lcall   ___uint2fs
012D AA82       847            mov     r2,dpl
012F AB83       848            mov     r3,dph
0131 ACF0       849            mov     r4,b
0133 FD         850            mov     r5,a
0134 C002       851            push    ar2
0136 C003       852            push    ar3
0138 C004       853            push    ar4
013A C005       854            push    ar5
013C 903333     855            mov     dptr,#0x3333
013F 75F053     856            mov     b,#0x53
0142 7440       857            mov     a,#0x40
0144 120000     858            lcall   ___fsmul
0147 AA82       859            mov     r2,dpl
0149 AB83       860            mov     r3,dph
014B ACF0       861            mov     r4,b
014D FD         862            mov     r5,a
014E E581       863            mov     a,sp
0150 24FC       864            add     a,#0xfc
0152 F581       865            mov     sp,a
0154 E4         866            clr     a
0155 C0E0       867            push    acc
0157 74FC       868            mov     a,#0xFC
0159 C0E0       869            push    acc
015B 747F       870            mov     a,#0x7F
015D C0E0       871            push    acc
015F 7446       872            mov     a,#0x46
0161 C0E0       873            push    acc
0163 8A82       874            mov     dpl,r2
0165 8B83       875            mov     dph,r3
0167 8CF0       876            mov     b,r4
0169 ED         877            mov     a,r5
016A 120000     878            lcall   ___fsdiv
016D AA82       879            mov     r2,dpl
016F AB83       880            mov     r3,dph
0171 ACF0       881            mov     r4,b
0173 FD         882            mov     r5,a
0174 E581       883            mov     a,sp
0176 24FC       884            add     a,#0xfc
0178 F581       885            mov     sp,a
017A 8A82       886            mov     dpl,r2
017C 8B83       887            mov     dph,r3
017E 8CF0       888            mov     b,r4
0180 ED         889            mov     a,r5
0181 22         890            ret
0182            891   ;------------------------------------------------------------
0182            892   ;Allocation info for local variables in function 'Get_ADC'
0182            893   ;------------------------------------------------------------
0182            894   ;------------------------------------------------------------
0182            895   ;        D:\clone\LAB5\lab5_v2.c:200: unsigned int Get_ADC (void)
0182            896   ;        -----------------------------------------
0182            897   ;         function Get_ADC
0182            898   ;        -----------------------------------------
0182            899   _Get_ADC:
0182            900   ;        D:\clone\LAB5\lab5_v2.c:202: ADINT = 0;
0182 C2ED       901            clr     _ADINT
0184            902   ;        D:\clone\LAB5\lab5_v2.c:203: ADBUSY = 1;
0184 D2EC       903            setb    _ADBUSY
0186            904   ;        D:\clone\LAB5\lab5_v2.c:204: while (!ADINT); // Wait for conversion to complete
0186            905   L009001?:
0186 30ED90     906            jnb     _ADINT,L009001?
0189            907   ;        D:\clone\LAB5\lab5_v2.c:205: return (ADC0);
0189 85BD82     908            mov     dpl,_ADC0
018C 85BE83     909            mov     dph,(_ADC0 >> 8)
018F 22         910            ret
0190            911   ;------------------------------------------------------------
0190            912   ;Allocation info for local variables in function 'main'
0190            913   ;------------------------------------------------------------
0190            914   ;v                         Allocated with name '_main_v_1_61'
0190            915   ;period                    Allocated to registers r2 r3 
0190            916   ;------------------------------------------------------------
0190            917   ;        D:\clone\LAB5\lab5_v2.c:209: void main (void)
0190            918   ;        -----------------------------------------
0190            919   ;         function main
0190            920   ;        -----------------------------------------
0190            921   _main:
0190            922   ;        D:\clone\LAB5\lab5_v2.c:217: waitms(500); // Give PuTTy a chance to start before sending
0190 9001F4     923            mov     dptr,#0x01F4
0193 120000     924            lcall   _waitms
0196            925   ;        D:\clone\LAB5\lab5_v2.c:218: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0196 74D0       926            mov     a,#__str_0
0198 C0E0       927            push    acc
019A 74B5       928            mov     a,#(__str_0 >> 8)
019C C0E0       929            push    acc
019E 7480       930            mov     a,#0x80
01A0 C0E0       931            push    acc
01A2 120000     932            lcall   _printf
01A5 1581       933            dec     sp
01A7 1581       934            dec     sp
01A9 1581       935            dec     sp
01AB            936   ;        D:\clone\LAB5\lab5_v2.c:223: __FILE__, __DATE__, __TIME__);
01AB            937   ;        D:\clone\LAB5\lab5_v2.c:222: "Compiled: %s, %s\n\n",
01AB 7450       938            mov     a,#__str_4
01AD C0E0       939            push    acc
01AF 74B6       940            mov     a,#(__str_4 >> 8)
01B1 C0E0       941            push    acc
01B3 7480       942            mov     a,#0x80
01B5 C0E0       943            push    acc
01B7 7490       944            mov     a,#__str_3
01B9 C0E0       945            push    acc
01BB 74B6       946            mov     a,#(__str_3 >> 8)
01BD C0E0       947            push    acc
01BF 7480       948            mov     a,#0x80
01C1 C0E0       949            push    acc
01C3 74D0       950            mov     a,#__str_2
01C5 C0E0       951            push    acc
01C7 74B6       952            mov     a,#(__str_2 >> 8)
01C9 C0E0       953            push    acc
01CB 7480       954            mov     a,#0x80
01CD C0E0       955            push    acc
01CF 7410       956            mov     a,#__str_1
01D1 C0E0       957            push    acc
01D3 74B7       958            mov     a,#(__str_1 >> 8)
01D5 C0E0       959            push    acc
01D7 7480       960            mov     a,#0x80
01D9 C0E0       961            push    acc
01DB 120000     962            lcall   _printf
01DE E581       963            mov     a,sp
01E0 24F4       964            add     a,#0xf4
01E2 F581       965            mov     sp,a
01E4            966   ;        D:\clone\LAB5\lab5_v2.c:231: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
01E4 5389F0     967            anl     _TMOD,#0xF0
01E7            968   ;        D:\clone\LAB5\lab5_v2.c:232: TMOD|=0b_0000_0001;
01E7 438901     969            orl     _TMOD,#0x01
01EA            970   ;        D:\clone\LAB5\lab5_v2.c:235: while(1)
01EA            971   L010011?:
01EA            972   ;        D:\clone\LAB5\lab5_v2.c:243: TR0=0; // Stop timer 0
01EA C28C       973            clr     _TR0
01EC            974   ;        D:\clone\LAB5\lab5_v2.c:245: TH0=0; TL0=0; // Reset the timer
01EC 758C00     975            mov     _TH0,#0x00
01EF 758A00     976            mov     _TL0,#0x00
01F2            977   ;        D:\clone\LAB5\lab5_v2.c:247: while (P0_1==1); // Wait for the signal to be zero
01F2            978   L010001?:
01F2 208190     979            jb      _P0_1,L010001?
01F5            980   ;        D:\clone\LAB5\lab5_v2.c:248: while (P0_1==0); // Wait for the signal to be one
01F5            981   L010004?:
01F5 3081D0     982            jnb     _P0_1,L010004?
01F8            983   ;        D:\clone\LAB5\lab5_v2.c:249: TR0=1; // Start timing
01F8 D28C       984            setb    _TR0
01FA            985   ;        D:\clone\LAB5\lab5_v2.c:250: while (P0_1==1); // Wait for the signal to be zero
01FA            986   L010007?:
01FA 208110     987            jb      _P0_1,L010007?
01FD            988   ;        D:\clone\LAB5\lab5_v2.c:251: TR0=0; // Stop timer 0]
01FD C28C       989            clr     _TR0
01FF            990   ;        D:\clone\LAB5\lab5_v2.c:253: printf( "\n%d", TH0);
01FF AA8C       991            mov     r2,_TH0
0201 7B00       992            mov     r3,#0x00
0203 C002       993            push    ar2
0205 C003       994            push    ar3
0207 7450       995            mov     a,#__str_5
0209 C0E0       996            push    acc
020B 74B8       997            mov     a,#(__str_5 >> 8)
020D C0E0       998            push    acc
020F 7480       999            mov     a,#0x80
0211 C0E0      1000            push    acc
0213 120000    1001            lcall   _printf
0216 E581      1002            mov     a,sp
0218 24FB      1003            add     a,#0xfb
021A F581      1004            mov     sp,a
021C           1005   ;        D:\clone\LAB5\lab5_v2.c:254: printf( "\n%d", TL0);
021C AA8A      1006            mov     r2,_TL0
021E 7B00      1007            mov     r3,#0x00
0220 C002      1008            push    ar2
0222 C003      1009            push    ar3
0224 7450      1010            mov     a,#__str_5
0226 C0E0      1011            push    acc
0228 74B8      1012            mov     a,#(__str_5 >> 8)
022A C0E0      1013            push    acc
022C 7480      1014            mov     a,#0x80
022E C0E0      1015            push    acc
0230 120000    1016            lcall   _printf
0233 E581      1017            mov     a,sp
0235 24FB      1018            add     a,#0xfb
0237 F581      1019            mov     sp,a
0239           1020   ;        D:\clone\LAB5\lab5_v2.c:255: period=(TH0*0x100+TL0)*2; // Assume Period is unsigned int
0239 AB8C      1021            mov     r3,_TH0
023B 7A00      1022            mov     r2,#0x00
023D AC8A      1023            mov     r4,_TL0
023F 7D00      1024            mov     r5,#0x00
0241 EC        1025            mov     a,r4
0242 2A        1026            add     a,r2
0243 FA        1027            mov     r2,a
0244 ED        1028            mov     a,r5
0245 3B        1029            addc    a,r3
0246 CA        1030            xch     a,r2
0247 25E0      1031            add     a,acc
0249 CA        1032            xch     a,r2
024A 33        1033            rlc     a
024B FB        1034            mov     r3,a
024C           1035   ;        D:\clone\LAB5\lab5_v2.c:258: printf( "\n\rT=%d ms    ", period);
024C C002      1036            push    ar2
024E C003      1037            push    ar3
0250 7490      1038            mov     a,#__str_6
0252 C0E0      1039            push    acc
0254 74B8      1040            mov     a,#(__str_6 >> 8)
0256 C0E0      1041            push    acc
0258 7480      1042            mov     a,#0x80
025A C0E0      1043            push    acc
025C 120000    1044            lcall   _printf
025F E581      1045            mov     a,sp
0261 24FB      1046            add     a,#0xfb
0263 F581      1047            mov     sp,a
0265           1048   ;        D:\clone\LAB5\lab5_v2.c:259: waitms(100);
0265 900064    1049            mov     dptr,#0x0064
0268 120000    1050            lcall   _waitms
026B 020000    1051            ljmp    L010011?
026E           1052            rseg R_CSEG
026E           1053   
0000           1054            rseg R_XINIT
0000           1055   
0000           1056            rseg R_CONST
0000           1057   __str_0:
0000 1B        1058            db 0x1B
0001 5B324A    1059            db '[2J'
0004 00        1060            db 0x00
0005           1061   __str_1:
0005 41444320  1062            db 'ADC test program'
     74657374
     2070726F
     6772616D
0015 0A        1063            db 0x0A
0016 46696C65  1064            db 'File: %s'
     3A202573
001E 0A        1065            db 0x0A
001F 436F6D70  1066            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002F 0A        1067            db 0x0A
0030 0A        1068            db 0x0A
0031 00        1069            db 0x00
0032           1070   __str_2:
0032 443A      1071            db 'D:'
0034 5C        1072            db 0x5C
0035 636C6F6E  1073            db 'clone'
     65
003A 5C        1074            db 0x5C
003B 4C414235  1075            db 'LAB5'
003F 5C        1076            db 0x5C
0040 6C616235  1077            db 'lab5_v2.c'
     5F76322E
     63
0049 00        1078            db 0x00
004A           1079   __str_3:
004A 4D617220  1080            db 'Mar  7 2024'
     20372032
     303234
0055 00        1081            db 0x00
0056           1082   __str_4:
0056 31343A33  1083            db '14:38:52'
     383A3532
005E 00        1084            db 0x00
005F           1085   __str_5:
005F 0A        1086            db 0x0A
0060 2564      1087            db '%d'
0062 00        1088            db 0x00
0063           1089   __str_6:
0063 0A        1090            db 0x0A
0064 0D        1091            db 0x0D
0065 543D2564  1092            db 'T=%d ms    '
     206D7320
     202020
0070 00        1093            db 0x00
0071           1094   
0003           1095            CSEG
0003           1096   
0003           1097   end
